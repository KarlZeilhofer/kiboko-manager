// This file generated by staff_codegen
// For more information please visit: http://code.google.com/p/staff/
// DO NOT EDIT

#include <memory>
#include <staff/utils/SharedPtr.h>
#include <staff/utils/Log.h>
#include <staff/utils/fromstring.h>
#include <staff/utils/tostring.h>
#include <staff/utils/HexBinary.h>
#include <staff/utils/Base64Binary.h>
#include <staff/common/DataObject.h>
#include <staff/common/Attribute.h>
#include <staff/common/Operation.h>
#include <staff/common/Exception.h>
#include <staff/client/ServiceFactory.h>
#include <staff/client/IProxyAllocator.h>
#include <staff/client/ICallback.h>
#include <staff/client/Options.h>
#include "FdExportProxy.h"

namespace staff
{
///////////////////////////////////////////////////////////////////////////////////////////////////////
// enums

std::string SerializeEnum_FdWsExportType_ToString(const ::FdWsExportType eEnumValue)
{
  switch (eEnumValue)
  {
  case ::FdWsExportType_Feuerwachen:
    return "Feuerwachen";
  case ::FdWsExportType_Kurse:
    return "Kurse";
  case ::FdWsExportType_Ausbildungen:
    return "Ausbildungen";
  case ::FdWsExportType_Mitglieder:
    return "Mitglieder";
  case ::FdWsExportType_FWMitglieder144:
    return "FWMitglieder144";
  case ::FdWsExportType_Dienstgrade:
    return "Dienstgrade";
  case ::FdWsExportType_Funktionen:
    return "Funktionen";
  case ::FdWsExportType_Funktionaere:
    return "Funktionaere";
  case ::FdWsExportType_Instanzen:
    return "Instanzen";
  case ::FdWsExportType_Sonderdienste:
    return "Sonderdienste";
  case ::FdWsExportType_FWInstanzen144:
    return "FWInstanzen144";
  case ::FdWsExportType_FeuerwehrGemeinden:
    return "FeuerwehrGemeinden";
  case ::FdWsExportType_Feuerwehrhaeuser:
    return "Feuerwehrhaeuser";
  case ::FdWsExportType_ErreichbarkeitenFeuerwehrhaeuser:
    return "ErreichbarkeitenFeuerwehrhaeuser";
  case ::FdWsExportType_ErreichbarkeitenPersonen:
    return "ErreichbarkeitenPersonen";
  case ::FdWsExportType_Fahrzeuge:
    return "Fahrzeuge";
  case ::FdWsExportType_Geraete:
    return "Geraete";
  case ::FdWsExportType_Wasserdienstleistungsbewerbe:
    return "Wasserdienstleistungsbewerbe";
  case ::FdWsExportType_Feuerwehrleistungsbewerbe:
    return "Feuerwehrleistungsbewerbe";
  default:
    STAFF_THROW_ASSERT("Value out of range while serializing enum [::FdWsExportType]: " +
                       staff::ToString(eEnumValue));
  };
}

DataObject& operator<<(DataObject& rdoParam, const ::FdWsExportType eEnumValue)
{
  rdoParam.SetText(SerializeEnum_FdWsExportType_ToString(eEnumValue));
  return rdoParam;
}

::FdWsExportType DeserializeEnum_FdWsExportType_FromString(const std::string& sParam)
{
  if (sParam == "Feuerwachen")
  {
    return ::FdWsExportType_Feuerwachen;
  }
  else
  if (sParam == "Kurse")
  {
    return ::FdWsExportType_Kurse;
  }
  else
  if (sParam == "Ausbildungen")
  {
    return ::FdWsExportType_Ausbildungen;
  }
  else
  if (sParam == "Mitglieder")
  {
    return ::FdWsExportType_Mitglieder;
  }
  else
  if (sParam == "FWMitglieder144")
  {
    return ::FdWsExportType_FWMitglieder144;
  }
  else
  if (sParam == "Dienstgrade")
  {
    return ::FdWsExportType_Dienstgrade;
  }
  else
  if (sParam == "Funktionen")
  {
    return ::FdWsExportType_Funktionen;
  }
  else
  if (sParam == "Funktionaere")
  {
    return ::FdWsExportType_Funktionaere;
  }
  else
  if (sParam == "Instanzen")
  {
    return ::FdWsExportType_Instanzen;
  }
  else
  if (sParam == "Sonderdienste")
  {
    return ::FdWsExportType_Sonderdienste;
  }
  else
  if (sParam == "FWInstanzen144")
  {
    return ::FdWsExportType_FWInstanzen144;
  }
  else
  if (sParam == "FeuerwehrGemeinden")
  {
    return ::FdWsExportType_FeuerwehrGemeinden;
  }
  else
  if (sParam == "Feuerwehrhaeuser")
  {
    return ::FdWsExportType_Feuerwehrhaeuser;
  }
  else
  if (sParam == "ErreichbarkeitenFeuerwehrhaeuser")
  {
    return ::FdWsExportType_ErreichbarkeitenFeuerwehrhaeuser;
  }
  else
  if (sParam == "ErreichbarkeitenPersonen")
  {
    return ::FdWsExportType_ErreichbarkeitenPersonen;
  }
  else
  if (sParam == "Fahrzeuge")
  {
    return ::FdWsExportType_Fahrzeuge;
  }
  else
  if (sParam == "Geraete")
  {
    return ::FdWsExportType_Geraete;
  }
  else
  if (sParam == "Wasserdienstleistungsbewerbe")
  {
    return ::FdWsExportType_Wasserdienstleistungsbewerbe;
  }
  else
  if (sParam == "Feuerwehrleistungsbewerbe")
  {
    return ::FdWsExportType_Feuerwehrleistungsbewerbe;
  }
  else
  {
    STAFF_THROW_ASSERT("Value out of range while deserializing enum [::FdWsExportType]: [" + sParam + "]");
  }
}

const DataObject& operator>>(const DataObject& rdoParam, ::FdWsExportType& reEnumValue)
{
  reEnumValue = DeserializeEnum_FdWsExportType_FromString(rdoParam.GetText());
  return rdoParam;
}

std::string SerializeEnum_FdWsKurseExpFilter_ToString(const ::FdWsKurseExpFilter eEnumValue)
{
  switch (eEnumValue)
  {
  case ::FdWsKurseExpFilter_FdiskIdPersonen:
    return "FdiskIdPersonen";
  case ::FdWsKurseExpFilter_FdiskIdMitgliedschaften:
    return "FdiskIdMitgliedschaften";
  case ::FdWsKurseExpFilter_FdiskIdKurse:
    return "FdiskIdKurse";
  default:
    STAFF_THROW_ASSERT("Value out of range while serializing enum [::FdWsKurseExpFilter]: " +
                       staff::ToString(eEnumValue));
  };
}

DataObject& operator<<(DataObject& rdoParam, const ::FdWsKurseExpFilter eEnumValue)
{
  rdoParam.SetText(SerializeEnum_FdWsKurseExpFilter_ToString(eEnumValue));
  return rdoParam;
}

::FdWsKurseExpFilter DeserializeEnum_FdWsKurseExpFilter_FromString(const std::string& sParam)
{
  if (sParam == "FdiskIdPersonen")
  {
    return ::FdWsKurseExpFilter_FdiskIdPersonen;
  }
  else
  if (sParam == "FdiskIdMitgliedschaften")
  {
    return ::FdWsKurseExpFilter_FdiskIdMitgliedschaften;
  }
  else
  if (sParam == "FdiskIdKurse")
  {
    return ::FdWsKurseExpFilter_FdiskIdKurse;
  }
  else
  {
    STAFF_THROW_ASSERT("Value out of range while deserializing enum [::FdWsKurseExpFilter]: [" + sParam + "]");
  }
}

const DataObject& operator>>(const DataObject& rdoParam, ::FdWsKurseExpFilter& reEnumValue)
{
  reEnumValue = DeserializeEnum_FdWsKurseExpFilter_FromString(rdoParam.GetText());
  return rdoParam;
}

std::string SerializeEnum_FdWsMitgliederExpFilter_ToString(const ::FdWsMitgliederExpFilter eEnumValue)
{
  switch (eEnumValue)
  {
  case ::FdWsMitgliederExpFilter_FdiskIdMitglieder:
    return "FdiskIdMitglieder";
  case ::FdWsMitgliederExpFilter_FdiskIdPersonen:
    return "FdiskIdPersonen";
  case ::FdWsMitgliederExpFilter_FdiskIdDienstgrade:
    return "FdiskIdDienstgrade";
  case ::FdWsMitgliederExpFilter_Vorname:
    return "Vorname";
  case ::FdWsMitgliederExpFilter_Nachname:
    return "Nachname";
  case ::FdWsMitgliederExpFilter_Standesbuchnummer:
    return "Standesbuchnummer";
  case ::FdWsMitgliederExpFilter_InstanzNummer:
    return "InstanzNummer";
  case ::FdWsMitgliederExpFilter_LetzteAenderungVon:
    return "LetzteAenderungVon";
  case ::FdWsMitgliederExpFilter_LetzteAenderungBis:
    return "LetzteAenderungBis";
  default:
    STAFF_THROW_ASSERT("Value out of range while serializing enum [::FdWsMitgliederExpFilter]: " +
                       staff::ToString(eEnumValue));
  };
}

DataObject& operator<<(DataObject& rdoParam, const ::FdWsMitgliederExpFilter eEnumValue)
{
  rdoParam.SetText(SerializeEnum_FdWsMitgliederExpFilter_ToString(eEnumValue));
  return rdoParam;
}

::FdWsMitgliederExpFilter DeserializeEnum_FdWsMitgliederExpFilter_FromString(const std::string& sParam)
{
  if (sParam == "FdiskIdMitglieder")
  {
    return ::FdWsMitgliederExpFilter_FdiskIdMitglieder;
  }
  else
  if (sParam == "FdiskIdPersonen")
  {
    return ::FdWsMitgliederExpFilter_FdiskIdPersonen;
  }
  else
  if (sParam == "FdiskIdDienstgrade")
  {
    return ::FdWsMitgliederExpFilter_FdiskIdDienstgrade;
  }
  else
  if (sParam == "Vorname")
  {
    return ::FdWsMitgliederExpFilter_Vorname;
  }
  else
  if (sParam == "Nachname")
  {
    return ::FdWsMitgliederExpFilter_Nachname;
  }
  else
  if (sParam == "Standesbuchnummer")
  {
    return ::FdWsMitgliederExpFilter_Standesbuchnummer;
  }
  else
  if (sParam == "InstanzNummer")
  {
    return ::FdWsMitgliederExpFilter_InstanzNummer;
  }
  else
  if (sParam == "LetzteAenderungVon")
  {
    return ::FdWsMitgliederExpFilter_LetzteAenderungVon;
  }
  else
  if (sParam == "LetzteAenderungBis")
  {
    return ::FdWsMitgliederExpFilter_LetzteAenderungBis;
  }
  else
  {
    STAFF_THROW_ASSERT("Value out of range while deserializing enum [::FdWsMitgliederExpFilter]: [" + sParam + "]");
  }
}

const DataObject& operator>>(const DataObject& rdoParam, ::FdWsMitgliederExpFilter& reEnumValue)
{
  reEnumValue = DeserializeEnum_FdWsMitgliederExpFilter_FromString(rdoParam.GetText());
  return rdoParam;
}

std::string SerializeEnum_FdWsFWMitglieder144ExpFilter_ToString(const ::FdWsFWMitglieder144ExpFilter eEnumValue)
{
  switch (eEnumValue)
  {
  case ::FdWsFWMitglieder144ExpFilter_FdiskIdInstanzen:
    return "FdiskIdInstanzen";
  case ::FdWsFWMitglieder144ExpFilter_FdiskIdMitglieder:
    return "FdiskIdMitglieder";
  case ::FdWsFWMitglieder144ExpFilter_FdiskIdPersonen:
    return "FdiskIdPersonen";
  case ::FdWsFWMitglieder144ExpFilter_Vorname:
    return "Vorname";
  case ::FdWsFWMitglieder144ExpFilter_Nachname:
    return "Nachname";
  case ::FdWsFWMitglieder144ExpFilter_Standesbuchnummer:
    return "Standesbuchnummer";
  case ::FdWsFWMitglieder144ExpFilter_InstanzNummer:
    return "InstanzNummer";
  default:
    STAFF_THROW_ASSERT("Value out of range while serializing enum [::FdWsFWMitglieder144ExpFilter]: " +
                       staff::ToString(eEnumValue));
  };
}

DataObject& operator<<(DataObject& rdoParam, const ::FdWsFWMitglieder144ExpFilter eEnumValue)
{
  rdoParam.SetText(SerializeEnum_FdWsFWMitglieder144ExpFilter_ToString(eEnumValue));
  return rdoParam;
}

::FdWsFWMitglieder144ExpFilter DeserializeEnum_FdWsFWMitglieder144ExpFilter_FromString(const std::string& sParam)
{
  if (sParam == "FdiskIdInstanzen")
  {
    return ::FdWsFWMitglieder144ExpFilter_FdiskIdInstanzen;
  }
  else
  if (sParam == "FdiskIdMitglieder")
  {
    return ::FdWsFWMitglieder144ExpFilter_FdiskIdMitglieder;
  }
  else
  if (sParam == "FdiskIdPersonen")
  {
    return ::FdWsFWMitglieder144ExpFilter_FdiskIdPersonen;
  }
  else
  if (sParam == "Vorname")
  {
    return ::FdWsFWMitglieder144ExpFilter_Vorname;
  }
  else
  if (sParam == "Nachname")
  {
    return ::FdWsFWMitglieder144ExpFilter_Nachname;
  }
  else
  if (sParam == "Standesbuchnummer")
  {
    return ::FdWsFWMitglieder144ExpFilter_Standesbuchnummer;
  }
  else
  if (sParam == "InstanzNummer")
  {
    return ::FdWsFWMitglieder144ExpFilter_InstanzNummer;
  }
  else
  {
    STAFF_THROW_ASSERT("Value out of range while deserializing enum [::FdWsFWMitglieder144ExpFilter]: [" + sParam + "]");
  }
}

const DataObject& operator>>(const DataObject& rdoParam, ::FdWsFWMitglieder144ExpFilter& reEnumValue)
{
  reEnumValue = DeserializeEnum_FdWsFWMitglieder144ExpFilter_FromString(rdoParam.GetText());
  return rdoParam;
}

std::string SerializeEnum_FdWsDienstgradeExpFilter_ToString(const ::FdWsDienstgradeExpFilter eEnumValue)
{
  switch (eEnumValue)
  {
  case ::FdWsDienstgradeExpFilter_FdiskIdDienstgrade:
    return "FdiskIdDienstgrade";
  case ::FdWsDienstgradeExpFilter_Langbezeichnung:
    return "Langbezeichnung";
  case ::FdWsDienstgradeExpFilter_Kurzbezeichnung:
    return "Kurzbezeichnung";
  default:
    STAFF_THROW_ASSERT("Value out of range while serializing enum [::FdWsDienstgradeExpFilter]: " +
                       staff::ToString(eEnumValue));
  };
}

DataObject& operator<<(DataObject& rdoParam, const ::FdWsDienstgradeExpFilter eEnumValue)
{
  rdoParam.SetText(SerializeEnum_FdWsDienstgradeExpFilter_ToString(eEnumValue));
  return rdoParam;
}

::FdWsDienstgradeExpFilter DeserializeEnum_FdWsDienstgradeExpFilter_FromString(const std::string& sParam)
{
  if (sParam == "FdiskIdDienstgrade")
  {
    return ::FdWsDienstgradeExpFilter_FdiskIdDienstgrade;
  }
  else
  if (sParam == "Langbezeichnung")
  {
    return ::FdWsDienstgradeExpFilter_Langbezeichnung;
  }
  else
  if (sParam == "Kurzbezeichnung")
  {
    return ::FdWsDienstgradeExpFilter_Kurzbezeichnung;
  }
  else
  {
    STAFF_THROW_ASSERT("Value out of range while deserializing enum [::FdWsDienstgradeExpFilter]: [" + sParam + "]");
  }
}

const DataObject& operator>>(const DataObject& rdoParam, ::FdWsDienstgradeExpFilter& reEnumValue)
{
  reEnumValue = DeserializeEnum_FdWsDienstgradeExpFilter_FromString(rdoParam.GetText());
  return rdoParam;
}

std::string SerializeEnum_FdWsAusbildungenExpFilter_ToString(const ::FdWsAusbildungenExpFilter eEnumValue)
{
  switch (eEnumValue)
  {
  case ::FdWsAusbildungenExpFilter_FdiskIdPersonen:
    return "FdiskIdPersonen";
  case ::FdWsAusbildungenExpFilter_FdiskIdMitgliedschaften:
    return "FdiskIdMitgliedschaften";
  case ::FdWsAusbildungenExpFilter_FdiskIdAusbildungen:
    return "FdiskIdAusbildungen";
  default:
    STAFF_THROW_ASSERT("Value out of range while serializing enum [::FdWsAusbildungenExpFilter]: " +
                       staff::ToString(eEnumValue));
  };
}

DataObject& operator<<(DataObject& rdoParam, const ::FdWsAusbildungenExpFilter eEnumValue)
{
  rdoParam.SetText(SerializeEnum_FdWsAusbildungenExpFilter_ToString(eEnumValue));
  return rdoParam;
}

::FdWsAusbildungenExpFilter DeserializeEnum_FdWsAusbildungenExpFilter_FromString(const std::string& sParam)
{
  if (sParam == "FdiskIdPersonen")
  {
    return ::FdWsAusbildungenExpFilter_FdiskIdPersonen;
  }
  else
  if (sParam == "FdiskIdMitgliedschaften")
  {
    return ::FdWsAusbildungenExpFilter_FdiskIdMitgliedschaften;
  }
  else
  if (sParam == "FdiskIdAusbildungen")
  {
    return ::FdWsAusbildungenExpFilter_FdiskIdAusbildungen;
  }
  else
  {
    STAFF_THROW_ASSERT("Value out of range while deserializing enum [::FdWsAusbildungenExpFilter]: [" + sParam + "]");
  }
}

const DataObject& operator>>(const DataObject& rdoParam, ::FdWsAusbildungenExpFilter& reEnumValue)
{
  reEnumValue = DeserializeEnum_FdWsAusbildungenExpFilter_FromString(rdoParam.GetText());
  return rdoParam;
}

std::string SerializeEnum_FdWsFunktionenExpFilter_ToString(const ::FdWsFunktionenExpFilter eEnumValue)
{
  switch (eEnumValue)
  {
  case ::FdWsFunktionenExpFilter_FdiskIdFunktionen:
    return "FdiskIdFunktionen";
  case ::FdWsFunktionenExpFilter_Langbezeichnung:
    return "Langbezeichnung";
  case ::FdWsFunktionenExpFilter_Kurzbezeichnung:
    return "Kurzbezeichnung";
  case ::FdWsFunktionenExpFilter_LetzteAenderungVon:
    return "LetzteAenderungVon";
  case ::FdWsFunktionenExpFilter_LetzteAenderungBis:
    return "LetzteAenderungBis";
  default:
    STAFF_THROW_ASSERT("Value out of range while serializing enum [::FdWsFunktionenExpFilter]: " +
                       staff::ToString(eEnumValue));
  };
}

DataObject& operator<<(DataObject& rdoParam, const ::FdWsFunktionenExpFilter eEnumValue)
{
  rdoParam.SetText(SerializeEnum_FdWsFunktionenExpFilter_ToString(eEnumValue));
  return rdoParam;
}

::FdWsFunktionenExpFilter DeserializeEnum_FdWsFunktionenExpFilter_FromString(const std::string& sParam)
{
  if (sParam == "FdiskIdFunktionen")
  {
    return ::FdWsFunktionenExpFilter_FdiskIdFunktionen;
  }
  else
  if (sParam == "Langbezeichnung")
  {
    return ::FdWsFunktionenExpFilter_Langbezeichnung;
  }
  else
  if (sParam == "Kurzbezeichnung")
  {
    return ::FdWsFunktionenExpFilter_Kurzbezeichnung;
  }
  else
  if (sParam == "LetzteAenderungVon")
  {
    return ::FdWsFunktionenExpFilter_LetzteAenderungVon;
  }
  else
  if (sParam == "LetzteAenderungBis")
  {
    return ::FdWsFunktionenExpFilter_LetzteAenderungBis;
  }
  else
  {
    STAFF_THROW_ASSERT("Value out of range while deserializing enum [::FdWsFunktionenExpFilter]: [" + sParam + "]");
  }
}

const DataObject& operator>>(const DataObject& rdoParam, ::FdWsFunktionenExpFilter& reEnumValue)
{
  reEnumValue = DeserializeEnum_FdWsFunktionenExpFilter_FromString(rdoParam.GetText());
  return rdoParam;
}

std::string SerializeEnum_FdWsFunktionaereExpFilter_ToString(const ::FdWsFunktionaereExpFilter eEnumValue)
{
  switch (eEnumValue)
  {
  case ::FdWsFunktionaereExpFilter_FdiskIdFunktionen:
    return "FdiskIdFunktionen";
  case ::FdWsFunktionaereExpFilter_FdiskIdMitglieder:
    return "FdiskIdMitglieder";
  case ::FdWsFunktionaereExpFilter_InstanzNummer:
    return "InstanzNummer";
  case ::FdWsFunktionaereExpFilter_GueltigVonVon:
    return "GueltigVonVon";
  case ::FdWsFunktionaereExpFilter_GueltigVonBis:
    return "GueltigVonBis";
  case ::FdWsFunktionaereExpFilter_GueltigBisVon:
    return "GueltigBisVon";
  case ::FdWsFunktionaereExpFilter_GueltigBisBis:
    return "GueltigBisBis";
  case ::FdWsFunktionaereExpFilter_NurAktive:
    return "NurAktive";
  case ::FdWsFunktionaereExpFilter_LetzteAenderungVon:
    return "LetzteAenderungVon";
  case ::FdWsFunktionaereExpFilter_LetzteAenderungBis:
    return "LetzteAenderungBis";
  case ::FdWsFunktionaereExpFilter_DienstgradKurzBezeichnung:
    return "DienstgradKurzBezeichnung";
  case ::FdWsFunktionaereExpFilter_FunktionenKurzBezeichnung:
    return "FunktionenKurzBezeichnung";
  case ::FdWsFunktionaereExpFilter_FdiskIdPersonen:
    return "FdiskIdPersonen";
  default:
    STAFF_THROW_ASSERT("Value out of range while serializing enum [::FdWsFunktionaereExpFilter]: " +
                       staff::ToString(eEnumValue));
  };
}

DataObject& operator<<(DataObject& rdoParam, const ::FdWsFunktionaereExpFilter eEnumValue)
{
  rdoParam.SetText(SerializeEnum_FdWsFunktionaereExpFilter_ToString(eEnumValue));
  return rdoParam;
}

::FdWsFunktionaereExpFilter DeserializeEnum_FdWsFunktionaereExpFilter_FromString(const std::string& sParam)
{
  if (sParam == "FdiskIdFunktionen")
  {
    return ::FdWsFunktionaereExpFilter_FdiskIdFunktionen;
  }
  else
  if (sParam == "FdiskIdMitglieder")
  {
    return ::FdWsFunktionaereExpFilter_FdiskIdMitglieder;
  }
  else
  if (sParam == "InstanzNummer")
  {
    return ::FdWsFunktionaereExpFilter_InstanzNummer;
  }
  else
  if (sParam == "GueltigVonVon")
  {
    return ::FdWsFunktionaereExpFilter_GueltigVonVon;
  }
  else
  if (sParam == "GueltigVonBis")
  {
    return ::FdWsFunktionaereExpFilter_GueltigVonBis;
  }
  else
  if (sParam == "GueltigBisVon")
  {
    return ::FdWsFunktionaereExpFilter_GueltigBisVon;
  }
  else
  if (sParam == "GueltigBisBis")
  {
    return ::FdWsFunktionaereExpFilter_GueltigBisBis;
  }
  else
  if (sParam == "NurAktive")
  {
    return ::FdWsFunktionaereExpFilter_NurAktive;
  }
  else
  if (sParam == "LetzteAenderungVon")
  {
    return ::FdWsFunktionaereExpFilter_LetzteAenderungVon;
  }
  else
  if (sParam == "LetzteAenderungBis")
  {
    return ::FdWsFunktionaereExpFilter_LetzteAenderungBis;
  }
  else
  if (sParam == "DienstgradKurzBezeichnung")
  {
    return ::FdWsFunktionaereExpFilter_DienstgradKurzBezeichnung;
  }
  else
  if (sParam == "FunktionenKurzBezeichnung")
  {
    return ::FdWsFunktionaereExpFilter_FunktionenKurzBezeichnung;
  }
  else
  if (sParam == "FdiskIdPersonen")
  {
    return ::FdWsFunktionaereExpFilter_FdiskIdPersonen;
  }
  else
  {
    STAFF_THROW_ASSERT("Value out of range while deserializing enum [::FdWsFunktionaereExpFilter]: [" + sParam + "]");
  }
}

const DataObject& operator>>(const DataObject& rdoParam, ::FdWsFunktionaereExpFilter& reEnumValue)
{
  reEnumValue = DeserializeEnum_FdWsFunktionaereExpFilter_FromString(rdoParam.GetText());
  return rdoParam;
}

std::string SerializeEnum_FdWsInstanzenExpFilter_ToString(const ::FdWsInstanzenExpFilter eEnumValue)
{
  switch (eEnumValue)
  {
  case ::FdWsInstanzenExpFilter_FdiskIdInstanzen:
    return "FdiskIdInstanzen";
  case ::FdWsInstanzenExpFilter_Instanznummer:
    return "Instanznummer";
  case ::FdWsInstanzenExpFilter_InstanzArt:
    return "InstanzArt";
  case ::FdWsInstanzenExpFilter_InstanzTyp:
    return "InstanzTyp";
  default:
    STAFF_THROW_ASSERT("Value out of range while serializing enum [::FdWsInstanzenExpFilter]: " +
                       staff::ToString(eEnumValue));
  };
}

DataObject& operator<<(DataObject& rdoParam, const ::FdWsInstanzenExpFilter eEnumValue)
{
  rdoParam.SetText(SerializeEnum_FdWsInstanzenExpFilter_ToString(eEnumValue));
  return rdoParam;
}

::FdWsInstanzenExpFilter DeserializeEnum_FdWsInstanzenExpFilter_FromString(const std::string& sParam)
{
  if (sParam == "FdiskIdInstanzen")
  {
    return ::FdWsInstanzenExpFilter_FdiskIdInstanzen;
  }
  else
  if (sParam == "Instanznummer")
  {
    return ::FdWsInstanzenExpFilter_Instanznummer;
  }
  else
  if (sParam == "InstanzArt")
  {
    return ::FdWsInstanzenExpFilter_InstanzArt;
  }
  else
  if (sParam == "InstanzTyp")
  {
    return ::FdWsInstanzenExpFilter_InstanzTyp;
  }
  else
  {
    STAFF_THROW_ASSERT("Value out of range while deserializing enum [::FdWsInstanzenExpFilter]: [" + sParam + "]");
  }
}

const DataObject& operator>>(const DataObject& rdoParam, ::FdWsInstanzenExpFilter& reEnumValue)
{
  reEnumValue = DeserializeEnum_FdWsInstanzenExpFilter_FromString(rdoParam.GetText());
  return rdoParam;
}

std::string SerializeEnum_FdWsFeuerwachenExpFilter_ToString(const ::FdWsFeuerwachenExpFilter eEnumValue)
{
  switch (eEnumValue)
  {
  case ::FdWsFeuerwachenExpFilter_FdiskIdInstanzen:
    return "FdiskIdInstanzen";
  case ::FdWsFeuerwachenExpFilter_Instanznummer:
    return "Instanznummer";
  default:
    STAFF_THROW_ASSERT("Value out of range while serializing enum [::FdWsFeuerwachenExpFilter]: " +
                       staff::ToString(eEnumValue));
  };
}

DataObject& operator<<(DataObject& rdoParam, const ::FdWsFeuerwachenExpFilter eEnumValue)
{
  rdoParam.SetText(SerializeEnum_FdWsFeuerwachenExpFilter_ToString(eEnumValue));
  return rdoParam;
}

::FdWsFeuerwachenExpFilter DeserializeEnum_FdWsFeuerwachenExpFilter_FromString(const std::string& sParam)
{
  if (sParam == "FdiskIdInstanzen")
  {
    return ::FdWsFeuerwachenExpFilter_FdiskIdInstanzen;
  }
  else
  if (sParam == "Instanznummer")
  {
    return ::FdWsFeuerwachenExpFilter_Instanznummer;
  }
  else
  {
    STAFF_THROW_ASSERT("Value out of range while deserializing enum [::FdWsFeuerwachenExpFilter]: [" + sParam + "]");
  }
}

const DataObject& operator>>(const DataObject& rdoParam, ::FdWsFeuerwachenExpFilter& reEnumValue)
{
  reEnumValue = DeserializeEnum_FdWsFeuerwachenExpFilter_FromString(rdoParam.GetText());
  return rdoParam;
}

std::string SerializeEnum_FdWsSonderdiensteExpFilter_ToString(const ::FdWsSonderdiensteExpFilter eEnumValue)
{
  switch (eEnumValue)
  {
  case ::FdWsSonderdiensteExpFilter_FdiskIdInstanzen:
    return "FdiskIdInstanzen";
  case ::FdWsSonderdiensteExpFilter_Instanznummer:
    return "Instanznummer";
  case ::FdWsSonderdiensteExpFilter_InstanzArt:
    return "InstanzArt";
  case ::FdWsSonderdiensteExpFilter_InstanzTyp:
    return "InstanzTyp";
  default:
    STAFF_THROW_ASSERT("Value out of range while serializing enum [::FdWsSonderdiensteExpFilter]: " +
                       staff::ToString(eEnumValue));
  };
}

DataObject& operator<<(DataObject& rdoParam, const ::FdWsSonderdiensteExpFilter eEnumValue)
{
  rdoParam.SetText(SerializeEnum_FdWsSonderdiensteExpFilter_ToString(eEnumValue));
  return rdoParam;
}

::FdWsSonderdiensteExpFilter DeserializeEnum_FdWsSonderdiensteExpFilter_FromString(const std::string& sParam)
{
  if (sParam == "FdiskIdInstanzen")
  {
    return ::FdWsSonderdiensteExpFilter_FdiskIdInstanzen;
  }
  else
  if (sParam == "Instanznummer")
  {
    return ::FdWsSonderdiensteExpFilter_Instanznummer;
  }
  else
  if (sParam == "InstanzArt")
  {
    return ::FdWsSonderdiensteExpFilter_InstanzArt;
  }
  else
  if (sParam == "InstanzTyp")
  {
    return ::FdWsSonderdiensteExpFilter_InstanzTyp;
  }
  else
  {
    STAFF_THROW_ASSERT("Value out of range while deserializing enum [::FdWsSonderdiensteExpFilter]: [" + sParam + "]");
  }
}

const DataObject& operator>>(const DataObject& rdoParam, ::FdWsSonderdiensteExpFilter& reEnumValue)
{
  reEnumValue = DeserializeEnum_FdWsSonderdiensteExpFilter_FromString(rdoParam.GetText());
  return rdoParam;
}

std::string SerializeEnum_FdWsFWInstanzen144ExpFilter_ToString(const ::FdWsFWInstanzen144ExpFilter eEnumValue)
{
  switch (eEnumValue)
  {
  case ::FdWsFWInstanzen144ExpFilter_FdiskIdInstanzen:
    return "FdiskIdInstanzen";
  case ::FdWsFWInstanzen144ExpFilter_Instanznummer:
    return "Instanznummer";
  case ::FdWsFWInstanzen144ExpFilter_InstanzArt:
    return "InstanzArt";
  default:
    STAFF_THROW_ASSERT("Value out of range while serializing enum [::FdWsFWInstanzen144ExpFilter]: " +
                       staff::ToString(eEnumValue));
  };
}

DataObject& operator<<(DataObject& rdoParam, const ::FdWsFWInstanzen144ExpFilter eEnumValue)
{
  rdoParam.SetText(SerializeEnum_FdWsFWInstanzen144ExpFilter_ToString(eEnumValue));
  return rdoParam;
}

::FdWsFWInstanzen144ExpFilter DeserializeEnum_FdWsFWInstanzen144ExpFilter_FromString(const std::string& sParam)
{
  if (sParam == "FdiskIdInstanzen")
  {
    return ::FdWsFWInstanzen144ExpFilter_FdiskIdInstanzen;
  }
  else
  if (sParam == "Instanznummer")
  {
    return ::FdWsFWInstanzen144ExpFilter_Instanznummer;
  }
  else
  if (sParam == "InstanzArt")
  {
    return ::FdWsFWInstanzen144ExpFilter_InstanzArt;
  }
  else
  {
    STAFF_THROW_ASSERT("Value out of range while deserializing enum [::FdWsFWInstanzen144ExpFilter]: [" + sParam + "]");
  }
}

const DataObject& operator>>(const DataObject& rdoParam, ::FdWsFWInstanzen144ExpFilter& reEnumValue)
{
  reEnumValue = DeserializeEnum_FdWsFWInstanzen144ExpFilter_FromString(rdoParam.GetText());
  return rdoParam;
}

std::string SerializeEnum_FdWsGeraeteExpFilter_ToString(const ::FdWsGeraeteExpFilter eEnumValue)
{
  switch (eEnumValue)
  {
  case ::FdWsGeraeteExpFilter_InstanzNummer:
    return "InstanzNummer";
  case ::FdWsGeraeteExpFilter_FdiskIdInstanzen:
    return "FdiskIdInstanzen";
  case ::FdWsGeraeteExpFilter_FdiskIdGeraete:
    return "FdiskIdGeraete";
  case ::FdWsGeraeteExpFilter_GeraeteGruppe:
    return "GeraeteGruppe";
  case ::FdWsGeraeteExpFilter_GeraeteStandard:
    return "GeraeteStandard";
  case ::FdWsGeraeteExpFilter_GeraeteStatus:
    return "GeraeteStatus";
  case ::FdWsGeraeteExpFilter_LetzteAenderungVon:
    return "LetzteAenderungVon";
  case ::FdWsGeraeteExpFilter_LetzteAenderungBis:
    return "LetzteAenderungBis";
  default:
    STAFF_THROW_ASSERT("Value out of range while serializing enum [::FdWsGeraeteExpFilter]: " +
                       staff::ToString(eEnumValue));
  };
}

DataObject& operator<<(DataObject& rdoParam, const ::FdWsGeraeteExpFilter eEnumValue)
{
  rdoParam.SetText(SerializeEnum_FdWsGeraeteExpFilter_ToString(eEnumValue));
  return rdoParam;
}

::FdWsGeraeteExpFilter DeserializeEnum_FdWsGeraeteExpFilter_FromString(const std::string& sParam)
{
  if (sParam == "InstanzNummer")
  {
    return ::FdWsGeraeteExpFilter_InstanzNummer;
  }
  else
  if (sParam == "FdiskIdInstanzen")
  {
    return ::FdWsGeraeteExpFilter_FdiskIdInstanzen;
  }
  else
  if (sParam == "FdiskIdGeraete")
  {
    return ::FdWsGeraeteExpFilter_FdiskIdGeraete;
  }
  else
  if (sParam == "GeraeteGruppe")
  {
    return ::FdWsGeraeteExpFilter_GeraeteGruppe;
  }
  else
  if (sParam == "GeraeteStandard")
  {
    return ::FdWsGeraeteExpFilter_GeraeteStandard;
  }
  else
  if (sParam == "GeraeteStatus")
  {
    return ::FdWsGeraeteExpFilter_GeraeteStatus;
  }
  else
  if (sParam == "LetzteAenderungVon")
  {
    return ::FdWsGeraeteExpFilter_LetzteAenderungVon;
  }
  else
  if (sParam == "LetzteAenderungBis")
  {
    return ::FdWsGeraeteExpFilter_LetzteAenderungBis;
  }
  else
  {
    STAFF_THROW_ASSERT("Value out of range while deserializing enum [::FdWsGeraeteExpFilter]: [" + sParam + "]");
  }
}

const DataObject& operator>>(const DataObject& rdoParam, ::FdWsGeraeteExpFilter& reEnumValue)
{
  reEnumValue = DeserializeEnum_FdWsGeraeteExpFilter_FromString(rdoParam.GetText());
  return rdoParam;
}

std::string SerializeEnum_FdWsFahrzeugeExpFilter_ToString(const ::FdWsFahrzeugeExpFilter eEnumValue)
{
  switch (eEnumValue)
  {
  case ::FdWsFahrzeugeExpFilter_InstanzNummer:
    return "InstanzNummer";
  case ::FdWsFahrzeugeExpFilter_FdiskIdInstanzen:
    return "FdiskIdInstanzen";
  case ::FdWsFahrzeugeExpFilter_FzgStatus:
    return "FzgStatus";
  case ::FdWsFahrzeugeExpFilter_TaktischeBezeichnung:
    return "TaktischeBezeichnung";
  case ::FdWsFahrzeugeExpFilter_Feuerwache:
    return "Feuerwache";
  case ::FdWsFahrzeugeExpFilter_FdiskIdFahrzeuge:
    return "FdiskIdFahrzeuge";
  case ::FdWsFahrzeugeExpFilter_LetzteAenderungVon:
    return "LetzteAenderungVon";
  case ::FdWsFahrzeugeExpFilter_LetzteAenderungBis:
    return "LetzteAenderungBis";
  default:
    STAFF_THROW_ASSERT("Value out of range while serializing enum [::FdWsFahrzeugeExpFilter]: " +
                       staff::ToString(eEnumValue));
  };
}

DataObject& operator<<(DataObject& rdoParam, const ::FdWsFahrzeugeExpFilter eEnumValue)
{
  rdoParam.SetText(SerializeEnum_FdWsFahrzeugeExpFilter_ToString(eEnumValue));
  return rdoParam;
}

::FdWsFahrzeugeExpFilter DeserializeEnum_FdWsFahrzeugeExpFilter_FromString(const std::string& sParam)
{
  if (sParam == "InstanzNummer")
  {
    return ::FdWsFahrzeugeExpFilter_InstanzNummer;
  }
  else
  if (sParam == "FdiskIdInstanzen")
  {
    return ::FdWsFahrzeugeExpFilter_FdiskIdInstanzen;
  }
  else
  if (sParam == "FzgStatus")
  {
    return ::FdWsFahrzeugeExpFilter_FzgStatus;
  }
  else
  if (sParam == "TaktischeBezeichnung")
  {
    return ::FdWsFahrzeugeExpFilter_TaktischeBezeichnung;
  }
  else
  if (sParam == "Feuerwache")
  {
    return ::FdWsFahrzeugeExpFilter_Feuerwache;
  }
  else
  if (sParam == "FdiskIdFahrzeuge")
  {
    return ::FdWsFahrzeugeExpFilter_FdiskIdFahrzeuge;
  }
  else
  if (sParam == "LetzteAenderungVon")
  {
    return ::FdWsFahrzeugeExpFilter_LetzteAenderungVon;
  }
  else
  if (sParam == "LetzteAenderungBis")
  {
    return ::FdWsFahrzeugeExpFilter_LetzteAenderungBis;
  }
  else
  {
    STAFF_THROW_ASSERT("Value out of range while deserializing enum [::FdWsFahrzeugeExpFilter]: [" + sParam + "]");
  }
}

const DataObject& operator>>(const DataObject& rdoParam, ::FdWsFahrzeugeExpFilter& reEnumValue)
{
  reEnumValue = DeserializeEnum_FdWsFahrzeugeExpFilter_FromString(rdoParam.GetText());
  return rdoParam;
}

std::string SerializeEnum_FdWsErreichbarkeitenFeuerwehrhaeuserExpFilter_ToString(const ::FdWsErreichbarkeitenFeuerwehrhaeuserExpFilter eEnumValue)
{
  switch (eEnumValue)
  {
  case ::FdWsErreichbarkeitenFeuerwehrhaeuserExpFilter_FdiskIdFeuerwehrhaeuser:
    return "FdiskIdFeuerwehrhaeuser";
  case ::FdWsErreichbarkeitenFeuerwehrhaeuserExpFilter_Feuerwache:
    return "Feuerwache";
  case ::FdWsErreichbarkeitenFeuerwehrhaeuserExpFilter_InstanzNummer:
    return "InstanzNummer";
  case ::FdWsErreichbarkeitenFeuerwehrhaeuserExpFilter_InstanzArt:
    return "InstanzArt";
  case ::FdWsErreichbarkeitenFeuerwehrhaeuserExpFilter_ErreichbarkeitArt:
    return "ErreichbarkeitArt";
  case ::FdWsErreichbarkeitenFeuerwehrhaeuserExpFilter_LetzteAenderungVon:
    return "LetzteAenderungVon";
  case ::FdWsErreichbarkeitenFeuerwehrhaeuserExpFilter_LetzteAenderungBis:
    return "LetzteAenderungBis";
  default:
    STAFF_THROW_ASSERT("Value out of range while serializing enum [::FdWsErreichbarkeitenFeuerwehrhaeuserExpFilter]: " +
                       staff::ToString(eEnumValue));
  };
}

DataObject& operator<<(DataObject& rdoParam, const ::FdWsErreichbarkeitenFeuerwehrhaeuserExpFilter eEnumValue)
{
  rdoParam.SetText(SerializeEnum_FdWsErreichbarkeitenFeuerwehrhaeuserExpFilter_ToString(eEnumValue));
  return rdoParam;
}

::FdWsErreichbarkeitenFeuerwehrhaeuserExpFilter DeserializeEnum_FdWsErreichbarkeitenFeuerwehrhaeuserExpFilter_FromString(const std::string& sParam)
{
  if (sParam == "FdiskIdFeuerwehrhaeuser")
  {
    return ::FdWsErreichbarkeitenFeuerwehrhaeuserExpFilter_FdiskIdFeuerwehrhaeuser;
  }
  else
  if (sParam == "Feuerwache")
  {
    return ::FdWsErreichbarkeitenFeuerwehrhaeuserExpFilter_Feuerwache;
  }
  else
  if (sParam == "InstanzNummer")
  {
    return ::FdWsErreichbarkeitenFeuerwehrhaeuserExpFilter_InstanzNummer;
  }
  else
  if (sParam == "InstanzArt")
  {
    return ::FdWsErreichbarkeitenFeuerwehrhaeuserExpFilter_InstanzArt;
  }
  else
  if (sParam == "ErreichbarkeitArt")
  {
    return ::FdWsErreichbarkeitenFeuerwehrhaeuserExpFilter_ErreichbarkeitArt;
  }
  else
  if (sParam == "LetzteAenderungVon")
  {
    return ::FdWsErreichbarkeitenFeuerwehrhaeuserExpFilter_LetzteAenderungVon;
  }
  else
  if (sParam == "LetzteAenderungBis")
  {
    return ::FdWsErreichbarkeitenFeuerwehrhaeuserExpFilter_LetzteAenderungBis;
  }
  else
  {
    STAFF_THROW_ASSERT("Value out of range while deserializing enum [::FdWsErreichbarkeitenFeuerwehrhaeuserExpFilter]: [" + sParam + "]");
  }
}

const DataObject& operator>>(const DataObject& rdoParam, ::FdWsErreichbarkeitenFeuerwehrhaeuserExpFilter& reEnumValue)
{
  reEnumValue = DeserializeEnum_FdWsErreichbarkeitenFeuerwehrhaeuserExpFilter_FromString(rdoParam.GetText());
  return rdoParam;
}

std::string SerializeEnum_FdWsErreichbarkeitenPersonenExpFilter_ToString(const ::FdWsErreichbarkeitenPersonenExpFilter eEnumValue)
{
  switch (eEnumValue)
  {
  case ::FdWsErreichbarkeitenPersonenExpFilter_FdiskIdPersonen:
    return "FdiskIdPersonen";
  case ::FdWsErreichbarkeitenPersonenExpFilter_ErreichbarkeitArt:
    return "ErreichbarkeitArt";
  case ::FdWsErreichbarkeitenPersonenExpFilter_LetzteAenderungVon:
    return "LetzteAenderungVon";
  case ::FdWsErreichbarkeitenPersonenExpFilter_LetzteAenderungBis:
    return "LetzteAenderungBis";
  default:
    STAFF_THROW_ASSERT("Value out of range while serializing enum [::FdWsErreichbarkeitenPersonenExpFilter]: " +
                       staff::ToString(eEnumValue));
  };
}

DataObject& operator<<(DataObject& rdoParam, const ::FdWsErreichbarkeitenPersonenExpFilter eEnumValue)
{
  rdoParam.SetText(SerializeEnum_FdWsErreichbarkeitenPersonenExpFilter_ToString(eEnumValue));
  return rdoParam;
}

::FdWsErreichbarkeitenPersonenExpFilter DeserializeEnum_FdWsErreichbarkeitenPersonenExpFilter_FromString(const std::string& sParam)
{
  if (sParam == "FdiskIdPersonen")
  {
    return ::FdWsErreichbarkeitenPersonenExpFilter_FdiskIdPersonen;
  }
  else
  if (sParam == "ErreichbarkeitArt")
  {
    return ::FdWsErreichbarkeitenPersonenExpFilter_ErreichbarkeitArt;
  }
  else
  if (sParam == "LetzteAenderungVon")
  {
    return ::FdWsErreichbarkeitenPersonenExpFilter_LetzteAenderungVon;
  }
  else
  if (sParam == "LetzteAenderungBis")
  {
    return ::FdWsErreichbarkeitenPersonenExpFilter_LetzteAenderungBis;
  }
  else
  {
    STAFF_THROW_ASSERT("Value out of range while deserializing enum [::FdWsErreichbarkeitenPersonenExpFilter]: [" + sParam + "]");
  }
}

const DataObject& operator>>(const DataObject& rdoParam, ::FdWsErreichbarkeitenPersonenExpFilter& reEnumValue)
{
  reEnumValue = DeserializeEnum_FdWsErreichbarkeitenPersonenExpFilter_FromString(rdoParam.GetText());
  return rdoParam;
}

std::string SerializeEnum_FdWsFeuerwehrhaeuserExpFilter_ToString(const ::FdWsFeuerwehrhaeuserExpFilter eEnumValue)
{
  switch (eEnumValue)
  {
  case ::FdWsFeuerwehrhaeuserExpFilter_FdiskIdFeuerwehrhaeuser:
    return "FdiskIdFeuerwehrhaeuser";
  case ::FdWsFeuerwehrhaeuserExpFilter_FdiskIdFeuerwehren:
    return "FdiskIdFeuerwehren";
  case ::FdWsFeuerwehrhaeuserExpFilter_FdiskIdInstanzen:
    return "FdiskIdInstanzen";
  case ::FdWsFeuerwehrhaeuserExpFilter_Instanznummer:
    return "Instanznummer";
  case ::FdWsFeuerwehrhaeuserExpFilter_LetzteAenderungVon:
    return "LetzteAenderungVon";
  case ::FdWsFeuerwehrhaeuserExpFilter_LetzteAenderungBis:
    return "LetzteAenderungBis";
  case ::FdWsFeuerwehrhaeuserExpFilter_Feuerwache:
    return "Feuerwache";
  default:
    STAFF_THROW_ASSERT("Value out of range while serializing enum [::FdWsFeuerwehrhaeuserExpFilter]: " +
                       staff::ToString(eEnumValue));
  };
}

DataObject& operator<<(DataObject& rdoParam, const ::FdWsFeuerwehrhaeuserExpFilter eEnumValue)
{
  rdoParam.SetText(SerializeEnum_FdWsFeuerwehrhaeuserExpFilter_ToString(eEnumValue));
  return rdoParam;
}

::FdWsFeuerwehrhaeuserExpFilter DeserializeEnum_FdWsFeuerwehrhaeuserExpFilter_FromString(const std::string& sParam)
{
  if (sParam == "FdiskIdFeuerwehrhaeuser")
  {
    return ::FdWsFeuerwehrhaeuserExpFilter_FdiskIdFeuerwehrhaeuser;
  }
  else
  if (sParam == "FdiskIdFeuerwehren")
  {
    return ::FdWsFeuerwehrhaeuserExpFilter_FdiskIdFeuerwehren;
  }
  else
  if (sParam == "FdiskIdInstanzen")
  {
    return ::FdWsFeuerwehrhaeuserExpFilter_FdiskIdInstanzen;
  }
  else
  if (sParam == "Instanznummer")
  {
    return ::FdWsFeuerwehrhaeuserExpFilter_Instanznummer;
  }
  else
  if (sParam == "LetzteAenderungVon")
  {
    return ::FdWsFeuerwehrhaeuserExpFilter_LetzteAenderungVon;
  }
  else
  if (sParam == "LetzteAenderungBis")
  {
    return ::FdWsFeuerwehrhaeuserExpFilter_LetzteAenderungBis;
  }
  else
  if (sParam == "Feuerwache")
  {
    return ::FdWsFeuerwehrhaeuserExpFilter_Feuerwache;
  }
  else
  {
    STAFF_THROW_ASSERT("Value out of range while deserializing enum [::FdWsFeuerwehrhaeuserExpFilter]: [" + sParam + "]");
  }
}

const DataObject& operator>>(const DataObject& rdoParam, ::FdWsFeuerwehrhaeuserExpFilter& reEnumValue)
{
  reEnumValue = DeserializeEnum_FdWsFeuerwehrhaeuserExpFilter_FromString(rdoParam.GetText());
  return rdoParam;
}

std::string SerializeEnum_FdWsFeuerwehrGemeindenExpFilter_ToString(const ::FdWsFeuerwehrGemeindenExpFilter eEnumValue)
{
  switch (eEnumValue)
  {
  case ::FdWsFeuerwehrGemeindenExpFilter_FdiskIdFwInstanzen:
    return "FdiskIdFwInstanzen";
  case ::FdWsFeuerwehrGemeindenExpFilter_FwNummer:
    return "FwNummer";
  case ::FdWsFeuerwehrGemeindenExpFilter_FwName:
    return "FwName";
  case ::FdWsFeuerwehrGemeindenExpFilter_FdiskIdGemInstanzen:
    return "FdiskIdGemInstanzen";
  case ::FdWsFeuerwehrGemeindenExpFilter_GemNummer:
    return "GemNummer";
  case ::FdWsFeuerwehrGemeindenExpFilter_GemName:
    return "GemName";
  default:
    STAFF_THROW_ASSERT("Value out of range while serializing enum [::FdWsFeuerwehrGemeindenExpFilter]: " +
                       staff::ToString(eEnumValue));
  };
}

DataObject& operator<<(DataObject& rdoParam, const ::FdWsFeuerwehrGemeindenExpFilter eEnumValue)
{
  rdoParam.SetText(SerializeEnum_FdWsFeuerwehrGemeindenExpFilter_ToString(eEnumValue));
  return rdoParam;
}

::FdWsFeuerwehrGemeindenExpFilter DeserializeEnum_FdWsFeuerwehrGemeindenExpFilter_FromString(const std::string& sParam)
{
  if (sParam == "FdiskIdFwInstanzen")
  {
    return ::FdWsFeuerwehrGemeindenExpFilter_FdiskIdFwInstanzen;
  }
  else
  if (sParam == "FwNummer")
  {
    return ::FdWsFeuerwehrGemeindenExpFilter_FwNummer;
  }
  else
  if (sParam == "FwName")
  {
    return ::FdWsFeuerwehrGemeindenExpFilter_FwName;
  }
  else
  if (sParam == "FdiskIdGemInstanzen")
  {
    return ::FdWsFeuerwehrGemeindenExpFilter_FdiskIdGemInstanzen;
  }
  else
  if (sParam == "GemNummer")
  {
    return ::FdWsFeuerwehrGemeindenExpFilter_GemNummer;
  }
  else
  if (sParam == "GemName")
  {
    return ::FdWsFeuerwehrGemeindenExpFilter_GemName;
  }
  else
  {
    STAFF_THROW_ASSERT("Value out of range while deserializing enum [::FdWsFeuerwehrGemeindenExpFilter]: [" + sParam + "]");
  }
}

const DataObject& operator>>(const DataObject& rdoParam, ::FdWsFeuerwehrGemeindenExpFilter& reEnumValue)
{
  reEnumValue = DeserializeEnum_FdWsFeuerwehrGemeindenExpFilter_FromString(rdoParam.GetText());
  return rdoParam;
}

std::string SerializeEnum_FdWsWasserdienstleistungsbewerbeExpFilter_ToString(const ::FdWsWasserdienstleistungsbewerbeExpFilter eEnumValue)
{
  switch (eEnumValue)
  {
  case ::FdWsWasserdienstleistungsbewerbeExpFilter_FdiskIdBewerbe:
    return "FdiskIdBewerbe";
  default:
    STAFF_THROW_ASSERT("Value out of range while serializing enum [::FdWsWasserdienstleistungsbewerbeExpFilter]: " +
                       staff::ToString(eEnumValue));
  };
}

DataObject& operator<<(DataObject& rdoParam, const ::FdWsWasserdienstleistungsbewerbeExpFilter eEnumValue)
{
  rdoParam.SetText(SerializeEnum_FdWsWasserdienstleistungsbewerbeExpFilter_ToString(eEnumValue));
  return rdoParam;
}

::FdWsWasserdienstleistungsbewerbeExpFilter DeserializeEnum_FdWsWasserdienstleistungsbewerbeExpFilter_FromString(const std::string& sParam)
{
  if (sParam == "FdiskIdBewerbe")
  {
    return ::FdWsWasserdienstleistungsbewerbeExpFilter_FdiskIdBewerbe;
  }
  else
  {
    STAFF_THROW_ASSERT("Value out of range while deserializing enum [::FdWsWasserdienstleistungsbewerbeExpFilter]: [" + sParam + "]");
  }
}

const DataObject& operator>>(const DataObject& rdoParam, ::FdWsWasserdienstleistungsbewerbeExpFilter& reEnumValue)
{
  reEnumValue = DeserializeEnum_FdWsWasserdienstleistungsbewerbeExpFilter_FromString(rdoParam.GetText());
  return rdoParam;
}

std::string SerializeEnum_FdWsFeuerwehrleistungsbewerbeExpFilter_ToString(const ::FdWsFeuerwehrleistungsbewerbeExpFilter eEnumValue)
{
  switch (eEnumValue)
  {
  case ::FdWsFeuerwehrleistungsbewerbeExpFilter_FdiskIdBewerbe:
    return "FdiskIdBewerbe";
  default:
    STAFF_THROW_ASSERT("Value out of range while serializing enum [::FdWsFeuerwehrleistungsbewerbeExpFilter]: " +
                       staff::ToString(eEnumValue));
  };
}

DataObject& operator<<(DataObject& rdoParam, const ::FdWsFeuerwehrleistungsbewerbeExpFilter eEnumValue)
{
  rdoParam.SetText(SerializeEnum_FdWsFeuerwehrleistungsbewerbeExpFilter_ToString(eEnumValue));
  return rdoParam;
}

::FdWsFeuerwehrleistungsbewerbeExpFilter DeserializeEnum_FdWsFeuerwehrleistungsbewerbeExpFilter_FromString(const std::string& sParam)
{
  if (sParam == "FdiskIdBewerbe")
  {
    return ::FdWsFeuerwehrleistungsbewerbeExpFilter_FdiskIdBewerbe;
  }
  else
  {
    STAFF_THROW_ASSERT("Value out of range while deserializing enum [::FdWsFeuerwehrleistungsbewerbeExpFilter]: [" + sParam + "]");
  }
}

const DataObject& operator>>(const DataObject& rdoParam, ::FdWsFeuerwehrleistungsbewerbeExpFilter& reEnumValue)
{
  reEnumValue = DeserializeEnum_FdWsFeuerwehrleistungsbewerbeExpFilter_FromString(rdoParam.GetText());
  return rdoParam;
}

std::string SerializeEnum_StatusCodes_ToString(const ::StatusCodes eEnumValue)
{
  switch (eEnumValue)
  {
  case ::StatusCodes_OK:
    return "OK";
  case ::StatusCodes_UNKNOWN_ERROR:
    return "UNKNOWN_ERROR";
  case ::StatusCodes_NO_DATA_FOUND:
    return "NO_DATA_FOUND";
  case ::StatusCodes_NO_MORE_DATA:
    return "NO_MORE_DATA";
  case ::StatusCodes_MISSING_DATA:
    return "MISSING_DATA";
  case ::StatusCodes_LOGIN_FAILED:
    return "LOGIN_FAILED";
  case ::StatusCodes_NO_PERMISSION:
    return "NO_PERMISSION";
  case ::StatusCodes_NOT_LOGGED_IN:
    return "NOT_LOGGED_IN";
  case ::StatusCodes_MIN_IDENTIFIER_NOT_SET:
    return "MIN_IDENTIFIER_NOT_SET";
  case ::StatusCodes_IDENTIFIER_NOT_UNIQUE:
    return "IDENTIFIER_NOT_UNIQUE";
  case ::StatusCodes_NO_IMPORT_DATA:
    return "NO_IMPORT_DATA";
  default:
    STAFF_THROW_ASSERT("Value out of range while serializing enum [::StatusCodes]: " +
                       staff::ToString(eEnumValue));
  };
}

DataObject& operator<<(DataObject& rdoParam, const ::StatusCodes eEnumValue)
{
  rdoParam.SetText(SerializeEnum_StatusCodes_ToString(eEnumValue));
  return rdoParam;
}

::StatusCodes DeserializeEnum_StatusCodes_FromString(const std::string& sParam)
{
  if (sParam == "OK")
  {
    return ::StatusCodes_OK;
  }
  else
  if (sParam == "UNKNOWN_ERROR")
  {
    return ::StatusCodes_UNKNOWN_ERROR;
  }
  else
  if (sParam == "NO_DATA_FOUND")
  {
    return ::StatusCodes_NO_DATA_FOUND;
  }
  else
  if (sParam == "NO_MORE_DATA")
  {
    return ::StatusCodes_NO_MORE_DATA;
  }
  else
  if (sParam == "MISSING_DATA")
  {
    return ::StatusCodes_MISSING_DATA;
  }
  else
  if (sParam == "LOGIN_FAILED")
  {
    return ::StatusCodes_LOGIN_FAILED;
  }
  else
  if (sParam == "NO_PERMISSION")
  {
    return ::StatusCodes_NO_PERMISSION;
  }
  else
  if (sParam == "NOT_LOGGED_IN")
  {
    return ::StatusCodes_NOT_LOGGED_IN;
  }
  else
  if (sParam == "MIN_IDENTIFIER_NOT_SET")
  {
    return ::StatusCodes_MIN_IDENTIFIER_NOT_SET;
  }
  else
  if (sParam == "IDENTIFIER_NOT_UNIQUE")
  {
    return ::StatusCodes_IDENTIFIER_NOT_UNIQUE;
  }
  else
  if (sParam == "NO_IMPORT_DATA")
  {
    return ::StatusCodes_NO_IMPORT_DATA;
  }
  else
  {
    STAFF_THROW_ASSERT("Value out of range while deserializing enum [::StatusCodes]: [" + sParam + "]");
  }
}

const DataObject& operator>>(const DataObject& rdoParam, ::StatusCodes& reEnumValue)
{
  reEnumValue = DeserializeEnum_StatusCodes_FromString(rdoParam.GetText());
  return rdoParam;
}

///////////////////////////////////////////////////////////////////////////////////////////////////////
// struct serializators/deserializators

DataObject& operator<<(DataObject& rdoParam, const struct ::FdWsPrepareDataRequest& rstStruct)
{
  staff::DataObject tdoParamtype = rdoParam.CreateChild("type");
  tdoParamtype.SetNamespaceUriGenPrefix("http://fdisk.at/");
  tdoParamtype << rstStruct.type;
  if (!(rstStruct.kurse).IsNull()) // Optional
  {
    staff::DataObject tdoParamkurse = rdoParam.CreateChild("kurse");
    tdoParamkurse.SetNamespaceUriGenPrefix("http://fdisk.at/");
    tdoParamkurse << *rstStruct.kurse;
  }
  if (!(rstStruct.mitglieder).IsNull()) // Optional
  {
    staff::DataObject tdoParammitglieder = rdoParam.CreateChild("mitglieder");
    tdoParammitglieder.SetNamespaceUriGenPrefix("http://fdisk.at/");
    tdoParammitglieder << *rstStruct.mitglieder;
  }
  if (!(rstStruct.fwMitglieder144).IsNull()) // Optional
  {
    staff::DataObject tdoParamfwMitglieder144 = rdoParam.CreateChild("fwMitglieder144");
    tdoParamfwMitglieder144.SetNamespaceUriGenPrefix("http://fdisk.at/");
    tdoParamfwMitglieder144 << *rstStruct.fwMitglieder144;
  }
  if (!(rstStruct.dienstgrade).IsNull()) // Optional
  {
    staff::DataObject tdoParamdienstgrade = rdoParam.CreateChild("dienstgrade");
    tdoParamdienstgrade.SetNamespaceUriGenPrefix("http://fdisk.at/");
    tdoParamdienstgrade << *rstStruct.dienstgrade;
  }
  if (!(rstStruct.ausbildungen).IsNull()) // Optional
  {
    staff::DataObject tdoParamausbildungen = rdoParam.CreateChild("ausbildungen");
    tdoParamausbildungen.SetNamespaceUriGenPrefix("http://fdisk.at/");
    tdoParamausbildungen << *rstStruct.ausbildungen;
  }
  if (!(rstStruct.funktionen).IsNull()) // Optional
  {
    staff::DataObject tdoParamfunktionen = rdoParam.CreateChild("funktionen");
    tdoParamfunktionen.SetNamespaceUriGenPrefix("http://fdisk.at/");
    tdoParamfunktionen << *rstStruct.funktionen;
  }
  if (!(rstStruct.funktionaere).IsNull()) // Optional
  {
    staff::DataObject tdoParamfunktionaere = rdoParam.CreateChild("funktionaere");
    tdoParamfunktionaere.SetNamespaceUriGenPrefix("http://fdisk.at/");
    tdoParamfunktionaere << *rstStruct.funktionaere;
  }
  if (!(rstStruct.instanzen).IsNull()) // Optional
  {
    staff::DataObject tdoParaminstanzen = rdoParam.CreateChild("instanzen");
    tdoParaminstanzen.SetNamespaceUriGenPrefix("http://fdisk.at/");
    tdoParaminstanzen << *rstStruct.instanzen;
  }
  if (!(rstStruct.feuerwachen).IsNull()) // Optional
  {
    staff::DataObject tdoParamfeuerwachen = rdoParam.CreateChild("feuerwachen");
    tdoParamfeuerwachen.SetNamespaceUriGenPrefix("http://fdisk.at/");
    tdoParamfeuerwachen << *rstStruct.feuerwachen;
  }
  if (!(rstStruct.sonderdienste).IsNull()) // Optional
  {
    staff::DataObject tdoParamsonderdienste = rdoParam.CreateChild("sonderdienste");
    tdoParamsonderdienste.SetNamespaceUriGenPrefix("http://fdisk.at/");
    tdoParamsonderdienste << *rstStruct.sonderdienste;
  }
  if (!(rstStruct.fwInstanzen144).IsNull()) // Optional
  {
    staff::DataObject tdoParamfwInstanzen144 = rdoParam.CreateChild("fwInstanzen144");
    tdoParamfwInstanzen144.SetNamespaceUriGenPrefix("http://fdisk.at/");
    tdoParamfwInstanzen144 << *rstStruct.fwInstanzen144;
  }
  if (!(rstStruct.geraete).IsNull()) // Optional
  {
    staff::DataObject tdoParamgeraete = rdoParam.CreateChild("geraete");
    tdoParamgeraete.SetNamespaceUriGenPrefix("http://fdisk.at/");
    tdoParamgeraete << *rstStruct.geraete;
  }
  if (!(rstStruct.fahrzeuge).IsNull()) // Optional
  {
    staff::DataObject tdoParamfahrzeuge = rdoParam.CreateChild("fahrzeuge");
    tdoParamfahrzeuge.SetNamespaceUriGenPrefix("http://fdisk.at/");
    tdoParamfahrzeuge << *rstStruct.fahrzeuge;
  }
  if (!(rstStruct.erreichbarkeitenfeuerwehrhaeuser).IsNull()) // Optional
  {
    staff::DataObject tdoParamerreichbarkeitenfeuerwehrhaeuser = rdoParam.CreateChild("erreichbarkeitenfeuerwehrhaeuser");
    tdoParamerreichbarkeitenfeuerwehrhaeuser.SetNamespaceUriGenPrefix("http://fdisk.at/");
    tdoParamerreichbarkeitenfeuerwehrhaeuser << *rstStruct.erreichbarkeitenfeuerwehrhaeuser;
  }
  if (!(rstStruct.erreichbarkeitenpersonen).IsNull()) // Optional
  {
    staff::DataObject tdoParamerreichbarkeitenpersonen = rdoParam.CreateChild("erreichbarkeitenpersonen");
    tdoParamerreichbarkeitenpersonen.SetNamespaceUriGenPrefix("http://fdisk.at/");
    tdoParamerreichbarkeitenpersonen << *rstStruct.erreichbarkeitenpersonen;
  }
  if (!(rstStruct.feuerwehrhaeuser).IsNull()) // Optional
  {
    staff::DataObject tdoParamfeuerwehrhaeuser = rdoParam.CreateChild("feuerwehrhaeuser");
    tdoParamfeuerwehrhaeuser.SetNamespaceUriGenPrefix("http://fdisk.at/");
    tdoParamfeuerwehrhaeuser << *rstStruct.feuerwehrhaeuser;
  }
  if (!(rstStruct.feuerwehrgemeinden).IsNull()) // Optional
  {
    staff::DataObject tdoParamfeuerwehrgemeinden = rdoParam.CreateChild("feuerwehrgemeinden");
    tdoParamfeuerwehrgemeinden.SetNamespaceUriGenPrefix("http://fdisk.at/");
    tdoParamfeuerwehrgemeinden << *rstStruct.feuerwehrgemeinden;
  }
  if (!(rstStruct.wasserdienstleistungsbewerbe).IsNull()) // Optional
  {
    staff::DataObject tdoParamwasserdienstleistungsbewerbe = rdoParam.CreateChild("wasserdienstleistungsbewerbe");
    tdoParamwasserdienstleistungsbewerbe.SetNamespaceUriGenPrefix("http://fdisk.at/");
    tdoParamwasserdienstleistungsbewerbe << *rstStruct.wasserdienstleistungsbewerbe;
  }
  if (!(rstStruct.feuerwehrleistungsbewerbe).IsNull()) // Optional
  {
    staff::DataObject tdoParamfeuerwehrleistungsbewerbe = rdoParam.CreateChild("feuerwehrleistungsbewerbe");
    tdoParamfeuerwehrleistungsbewerbe.SetNamespaceUriGenPrefix("http://fdisk.at/");
    tdoParamfeuerwehrleistungsbewerbe << *rstStruct.feuerwehrleistungsbewerbe;
  }
  return rdoParam;
}

const DataObject& operator>>(const DataObject& rdoParam, struct ::FdWsPrepareDataRequest& rstStruct)
{
  rdoParam.GetChildByLocalName("type") >> rstStruct.type;
  const staff::DataObject& rdoParamkurse = rdoParam.GetChildByLocalNameOpt("kurse");
  if (!rdoParamkurse.IsNull()) // optional
  {
    rdoParamkurse >> *rstStruct.kurse;
  }
  const staff::DataObject& rdoParammitglieder = rdoParam.GetChildByLocalNameOpt("mitglieder");
  if (!rdoParammitglieder.IsNull()) // optional
  {
    rdoParammitglieder >> *rstStruct.mitglieder;
  }
  const staff::DataObject& rdoParamfwMitglieder144 = rdoParam.GetChildByLocalNameOpt("fwMitglieder144");
  if (!rdoParamfwMitglieder144.IsNull()) // optional
  {
    rdoParamfwMitglieder144 >> *rstStruct.fwMitglieder144;
  }
  const staff::DataObject& rdoParamdienstgrade = rdoParam.GetChildByLocalNameOpt("dienstgrade");
  if (!rdoParamdienstgrade.IsNull()) // optional
  {
    rdoParamdienstgrade >> *rstStruct.dienstgrade;
  }
  const staff::DataObject& rdoParamausbildungen = rdoParam.GetChildByLocalNameOpt("ausbildungen");
  if (!rdoParamausbildungen.IsNull()) // optional
  {
    rdoParamausbildungen >> *rstStruct.ausbildungen;
  }
  const staff::DataObject& rdoParamfunktionen = rdoParam.GetChildByLocalNameOpt("funktionen");
  if (!rdoParamfunktionen.IsNull()) // optional
  {
    rdoParamfunktionen >> *rstStruct.funktionen;
  }
  const staff::DataObject& rdoParamfunktionaere = rdoParam.GetChildByLocalNameOpt("funktionaere");
  if (!rdoParamfunktionaere.IsNull()) // optional
  {
    rdoParamfunktionaere >> *rstStruct.funktionaere;
  }
  const staff::DataObject& rdoParaminstanzen = rdoParam.GetChildByLocalNameOpt("instanzen");
  if (!rdoParaminstanzen.IsNull()) // optional
  {
    rdoParaminstanzen >> *rstStruct.instanzen;
  }
  const staff::DataObject& rdoParamfeuerwachen = rdoParam.GetChildByLocalNameOpt("feuerwachen");
  if (!rdoParamfeuerwachen.IsNull()) // optional
  {
    rdoParamfeuerwachen >> *rstStruct.feuerwachen;
  }
  const staff::DataObject& rdoParamsonderdienste = rdoParam.GetChildByLocalNameOpt("sonderdienste");
  if (!rdoParamsonderdienste.IsNull()) // optional
  {
    rdoParamsonderdienste >> *rstStruct.sonderdienste;
  }
  const staff::DataObject& rdoParamfwInstanzen144 = rdoParam.GetChildByLocalNameOpt("fwInstanzen144");
  if (!rdoParamfwInstanzen144.IsNull()) // optional
  {
    rdoParamfwInstanzen144 >> *rstStruct.fwInstanzen144;
  }
  const staff::DataObject& rdoParamgeraete = rdoParam.GetChildByLocalNameOpt("geraete");
  if (!rdoParamgeraete.IsNull()) // optional
  {
    rdoParamgeraete >> *rstStruct.geraete;
  }
  const staff::DataObject& rdoParamfahrzeuge = rdoParam.GetChildByLocalNameOpt("fahrzeuge");
  if (!rdoParamfahrzeuge.IsNull()) // optional
  {
    rdoParamfahrzeuge >> *rstStruct.fahrzeuge;
  }
  const staff::DataObject& rdoParamerreichbarkeitenfeuerwehrhaeuser = rdoParam.GetChildByLocalNameOpt("erreichbarkeitenfeuerwehrhaeuser");
  if (!rdoParamerreichbarkeitenfeuerwehrhaeuser.IsNull()) // optional
  {
    rdoParamerreichbarkeitenfeuerwehrhaeuser >> *rstStruct.erreichbarkeitenfeuerwehrhaeuser;
  }
  const staff::DataObject& rdoParamerreichbarkeitenpersonen = rdoParam.GetChildByLocalNameOpt("erreichbarkeitenpersonen");
  if (!rdoParamerreichbarkeitenpersonen.IsNull()) // optional
  {
    rdoParamerreichbarkeitenpersonen >> *rstStruct.erreichbarkeitenpersonen;
  }
  const staff::DataObject& rdoParamfeuerwehrhaeuser = rdoParam.GetChildByLocalNameOpt("feuerwehrhaeuser");
  if (!rdoParamfeuerwehrhaeuser.IsNull()) // optional
  {
    rdoParamfeuerwehrhaeuser >> *rstStruct.feuerwehrhaeuser;
  }
  const staff::DataObject& rdoParamfeuerwehrgemeinden = rdoParam.GetChildByLocalNameOpt("feuerwehrgemeinden");
  if (!rdoParamfeuerwehrgemeinden.IsNull()) // optional
  {
    rdoParamfeuerwehrgemeinden >> *rstStruct.feuerwehrgemeinden;
  }
  const staff::DataObject& rdoParamwasserdienstleistungsbewerbe = rdoParam.GetChildByLocalNameOpt("wasserdienstleistungsbewerbe");
  if (!rdoParamwasserdienstleistungsbewerbe.IsNull()) // optional
  {
    rdoParamwasserdienstleistungsbewerbe >> *rstStruct.wasserdienstleistungsbewerbe;
  }
  const staff::DataObject& rdoParamfeuerwehrleistungsbewerbe = rdoParam.GetChildByLocalNameOpt("feuerwehrleistungsbewerbe");
  if (!rdoParamfeuerwehrleistungsbewerbe.IsNull()) // optional
  {
    rdoParamfeuerwehrleistungsbewerbe >> *rstStruct.feuerwehrleistungsbewerbe;
  }
  return rdoParam;
}

DataObject& operator<<(DataObject& rdoParam, const struct ::FdWsKurseRequest& rstStruct)
{
  if (!(rstStruct.filterGroup).IsNull()) // Optional
  {
    staff::DataObject tdoParamfilterGroup = rdoParam.CreateChild("filterGroup");
    tdoParamfilterGroup.SetNamespaceUriGenPrefix("http://fdisk.at/");
    tdoParamfilterGroup << *rstStruct.filterGroup;
  }
  return rdoParam;
}

const DataObject& operator>>(const DataObject& rdoParam, struct ::FdWsKurseRequest& rstStruct)
{
  const staff::DataObject& rdoParamfilterGroup = rdoParam.GetChildByLocalNameOpt("filterGroup");
  if (!rdoParamfilterGroup.IsNull()) // optional
  {
    rdoParamfilterGroup >> *rstStruct.filterGroup;
  }
  return rdoParam;
}

DataObject& operator<<(DataObject& rdoParam, const struct ::ArrayOfArrayOfFdWsKurseRequestFilter& rstStruct)
{
  rdoParam.SetNamespaceUriGenPrefix("http://fdisk.at/");
  for (std::list< staff::Nillable< ::ArrayOfFdWsKurseRequestFilter > >::const_iterator itItem = (rstStruct.ArrayOfFdWsKurseRequestFilter).begin(), itItemEnd = (rstStruct.ArrayOfFdWsKurseRequestFilter).end();
       itItem != itItemEnd; ++itItem)
  {
    if (!((*itItem)).IsNull()) // Nillable
    {
      staff::DataObject tdoParamItem = rdoParam.CreateChild("ArrayOfFdWsKurseRequestFilter");
      tdoParamItem.SetNamespaceUriGenPrefix("http://fdisk.at/");
      tdoParamItem << *(*itItem);
    }
    else
    {
      rdoParam.CreateChild("ArrayOfFdWsKurseRequestFilter").SetNil();
    }
  }

  return rdoParam;
}

const DataObject& operator>>(const DataObject& rdoParam, struct ::ArrayOfArrayOfFdWsKurseRequestFilter& rstStruct)
{
  for (staff::DataObject tdoItem = rdoParam.FirstChild(); !tdoItem.IsNull(); tdoItem.SetNextSibling())
  {
    if (tdoItem.GetLocalName() == "ArrayOfFdWsKurseRequestFilter")
    {
      (rstStruct.ArrayOfFdWsKurseRequestFilter).resize((rstStruct.ArrayOfFdWsKurseRequestFilter).size() + 1);
      if (!tdoItem.IsNil()) // Nillable
      {
        tdoItem >> *(rstStruct.ArrayOfFdWsKurseRequestFilter).back();
      }
    }
  }

  return rdoParam;
}

DataObject& operator<<(DataObject& rdoParam, const struct ::ArrayOfFdWsKurseRequestFilter& rstStruct)
{
  rdoParam.SetNamespaceUriGenPrefix("http://fdisk.at/");
  for (std::list< staff::Nillable< ::FdWsKurseRequestFilter > >::const_iterator itItem = (rstStruct.FdWsKurseRequestFilter).begin(), itItemEnd = (rstStruct.FdWsKurseRequestFilter).end();
       itItem != itItemEnd; ++itItem)
  {
    if (!((*itItem)).IsNull()) // Nillable
    {
      staff::DataObject tdoParamItem = rdoParam.CreateChild("FdWsKurseRequestFilter");
      tdoParamItem.SetNamespaceUriGenPrefix("http://fdisk.at/");
      tdoParamItem << *(*itItem);
    }
    else
    {
      rdoParam.CreateChild("FdWsKurseRequestFilter").SetNil();
    }
  }

  return rdoParam;
}

const DataObject& operator>>(const DataObject& rdoParam, struct ::ArrayOfFdWsKurseRequestFilter& rstStruct)
{
  for (staff::DataObject tdoItem = rdoParam.FirstChild(); !tdoItem.IsNull(); tdoItem.SetNextSibling())
  {
    if (tdoItem.GetLocalName() == "FdWsKurseRequestFilter")
    {
      (rstStruct.FdWsKurseRequestFilter).resize((rstStruct.FdWsKurseRequestFilter).size() + 1);
      if (!tdoItem.IsNil()) // Nillable
      {
        tdoItem >> *(rstStruct.FdWsKurseRequestFilter).back();
      }
    }
  }

  return rdoParam;
}

DataObject& operator<<(DataObject& rdoParam, const struct ::FdWsKurseRequestFilter& rstStruct)
{
  staff::DataObject tdoParamtype = rdoParam.CreateChild("type");
  tdoParamtype.SetNamespaceUriGenPrefix("http://fdisk.at/");
  tdoParamtype << rstStruct.type;
  if (!(rstStruct.value).IsNull()) // Optional
  {
    rdoParam.CreateChild("value", *rstStruct.value).SetNamespaceUriGenPrefix("http://fdisk.at/");
  }
  return rdoParam;
}

const DataObject& operator>>(const DataObject& rdoParam, struct ::FdWsKurseRequestFilter& rstStruct)
{
  rdoParam.GetChildByLocalName("type") >> rstStruct.type;
  const staff::DataObject& rdoParamvalue = rdoParam.GetChildByLocalNameOpt("value");
  if (!rdoParamvalue.IsNull()) // optional
  {
    rdoParamvalue.GetValue(*rstStruct.value);
  }
  return rdoParam;
}

DataObject& operator<<(DataObject& rdoParam, const struct ::FdWsMitgliederRequest& rstStruct)
{
  if (!(rstStruct.filterGroup).IsNull()) // Optional
  {
    staff::DataObject tdoParamfilterGroup = rdoParam.CreateChild("filterGroup");
    tdoParamfilterGroup.SetNamespaceUriGenPrefix("http://fdisk.at/");
    tdoParamfilterGroup << *rstStruct.filterGroup;
  }
  return rdoParam;
}

const DataObject& operator>>(const DataObject& rdoParam, struct ::FdWsMitgliederRequest& rstStruct)
{
  const staff::DataObject& rdoParamfilterGroup = rdoParam.GetChildByLocalNameOpt("filterGroup");
  if (!rdoParamfilterGroup.IsNull()) // optional
  {
    rdoParamfilterGroup >> *rstStruct.filterGroup;
  }
  return rdoParam;
}

DataObject& operator<<(DataObject& rdoParam, const struct ::ArrayOfArrayOfFdWsMitgliederRequestFilter& rstStruct)
{
  rdoParam.SetNamespaceUriGenPrefix("http://fdisk.at/");
  for (std::list< staff::Nillable< ::ArrayOfFdWsMitgliederRequestFilter > >::const_iterator itItem = (rstStruct.ArrayOfFdWsMitgliederRequestFilter).begin(), itItemEnd = (rstStruct.ArrayOfFdWsMitgliederRequestFilter).end();
       itItem != itItemEnd; ++itItem)
  {
    if (!((*itItem)).IsNull()) // Nillable
    {
      staff::DataObject tdoParamItem = rdoParam.CreateChild("ArrayOfFdWsMitgliederRequestFilter");
      tdoParamItem.SetNamespaceUriGenPrefix("http://fdisk.at/");
      tdoParamItem << *(*itItem);
    }
    else
    {
      rdoParam.CreateChild("ArrayOfFdWsMitgliederRequestFilter").SetNil();
    }
  }

  return rdoParam;
}

const DataObject& operator>>(const DataObject& rdoParam, struct ::ArrayOfArrayOfFdWsMitgliederRequestFilter& rstStruct)
{
  for (staff::DataObject tdoItem = rdoParam.FirstChild(); !tdoItem.IsNull(); tdoItem.SetNextSibling())
  {
    if (tdoItem.GetLocalName() == "ArrayOfFdWsMitgliederRequestFilter")
    {
      (rstStruct.ArrayOfFdWsMitgliederRequestFilter).resize((rstStruct.ArrayOfFdWsMitgliederRequestFilter).size() + 1);
      if (!tdoItem.IsNil()) // Nillable
      {
        tdoItem >> *(rstStruct.ArrayOfFdWsMitgliederRequestFilter).back();
      }
    }
  }

  return rdoParam;
}

DataObject& operator<<(DataObject& rdoParam, const struct ::ArrayOfFdWsMitgliederRequestFilter& rstStruct)
{
  rdoParam.SetNamespaceUriGenPrefix("http://fdisk.at/");
  for (std::list< staff::Nillable< ::FdWsMitgliederRequestFilter > >::const_iterator itItem = (rstStruct.FdWsMitgliederRequestFilter).begin(), itItemEnd = (rstStruct.FdWsMitgliederRequestFilter).end();
       itItem != itItemEnd; ++itItem)
  {
    if (!((*itItem)).IsNull()) // Nillable
    {
      staff::DataObject tdoParamItem = rdoParam.CreateChild("FdWsMitgliederRequestFilter");
      tdoParamItem.SetNamespaceUriGenPrefix("http://fdisk.at/");
      tdoParamItem << *(*itItem);
    }
    else
    {
      rdoParam.CreateChild("FdWsMitgliederRequestFilter").SetNil();
    }
  }

  return rdoParam;
}

const DataObject& operator>>(const DataObject& rdoParam, struct ::ArrayOfFdWsMitgliederRequestFilter& rstStruct)
{
  for (staff::DataObject tdoItem = rdoParam.FirstChild(); !tdoItem.IsNull(); tdoItem.SetNextSibling())
  {
    if (tdoItem.GetLocalName() == "FdWsMitgliederRequestFilter")
    {
      (rstStruct.FdWsMitgliederRequestFilter).resize((rstStruct.FdWsMitgliederRequestFilter).size() + 1);
      if (!tdoItem.IsNil()) // Nillable
      {
        tdoItem >> *(rstStruct.FdWsMitgliederRequestFilter).back();
      }
    }
  }

  return rdoParam;
}

DataObject& operator<<(DataObject& rdoParam, const struct ::FdWsMitgliederRequestFilter& rstStruct)
{
  staff::DataObject tdoParamtype = rdoParam.CreateChild("type");
  tdoParamtype.SetNamespaceUriGenPrefix("http://fdisk.at/");
  tdoParamtype << rstStruct.type;
  if (!(rstStruct.value).IsNull()) // Optional
  {
    rdoParam.CreateChild("value", *rstStruct.value).SetNamespaceUriGenPrefix("http://fdisk.at/");
  }
  return rdoParam;
}

const DataObject& operator>>(const DataObject& rdoParam, struct ::FdWsMitgliederRequestFilter& rstStruct)
{
  rdoParam.GetChildByLocalName("type") >> rstStruct.type;
  const staff::DataObject& rdoParamvalue = rdoParam.GetChildByLocalNameOpt("value");
  if (!rdoParamvalue.IsNull()) // optional
  {
    rdoParamvalue.GetValue(*rstStruct.value);
  }
  return rdoParam;
}

DataObject& operator<<(DataObject& rdoParam, const struct ::FdWsFWMitglieder144Request& rstStruct)
{
  if (!(rstStruct.filterGroup).IsNull()) // Optional
  {
    staff::DataObject tdoParamfilterGroup = rdoParam.CreateChild("filterGroup");
    tdoParamfilterGroup.SetNamespaceUriGenPrefix("http://fdisk.at/");
    tdoParamfilterGroup << *rstStruct.filterGroup;
  }
  return rdoParam;
}

const DataObject& operator>>(const DataObject& rdoParam, struct ::FdWsFWMitglieder144Request& rstStruct)
{
  const staff::DataObject& rdoParamfilterGroup = rdoParam.GetChildByLocalNameOpt("filterGroup");
  if (!rdoParamfilterGroup.IsNull()) // optional
  {
    rdoParamfilterGroup >> *rstStruct.filterGroup;
  }
  return rdoParam;
}

DataObject& operator<<(DataObject& rdoParam, const struct ::ArrayOfArrayOfFdWsFWMitglieder144RequestFilter& rstStruct)
{
  rdoParam.SetNamespaceUriGenPrefix("http://fdisk.at/");
  for (std::list< staff::Nillable< ::ArrayOfFdWsFWMitglieder144RequestFilter > >::const_iterator itItem = (rstStruct.ArrayOfFdWsFWMitglieder144RequestFilter).begin(), itItemEnd = (rstStruct.ArrayOfFdWsFWMitglieder144RequestFilter).end();
       itItem != itItemEnd; ++itItem)
  {
    if (!((*itItem)).IsNull()) // Nillable
    {
      staff::DataObject tdoParamItem = rdoParam.CreateChild("ArrayOfFdWsFWMitglieder144RequestFilter");
      tdoParamItem.SetNamespaceUriGenPrefix("http://fdisk.at/");
      tdoParamItem << *(*itItem);
    }
    else
    {
      rdoParam.CreateChild("ArrayOfFdWsFWMitglieder144RequestFilter").SetNil();
    }
  }

  return rdoParam;
}

const DataObject& operator>>(const DataObject& rdoParam, struct ::ArrayOfArrayOfFdWsFWMitglieder144RequestFilter& rstStruct)
{
  for (staff::DataObject tdoItem = rdoParam.FirstChild(); !tdoItem.IsNull(); tdoItem.SetNextSibling())
  {
    if (tdoItem.GetLocalName() == "ArrayOfFdWsFWMitglieder144RequestFilter")
    {
      (rstStruct.ArrayOfFdWsFWMitglieder144RequestFilter).resize((rstStruct.ArrayOfFdWsFWMitglieder144RequestFilter).size() + 1);
      if (!tdoItem.IsNil()) // Nillable
      {
        tdoItem >> *(rstStruct.ArrayOfFdWsFWMitglieder144RequestFilter).back();
      }
    }
  }

  return rdoParam;
}

DataObject& operator<<(DataObject& rdoParam, const struct ::ArrayOfFdWsFWMitglieder144RequestFilter& rstStruct)
{
  rdoParam.SetNamespaceUriGenPrefix("http://fdisk.at/");
  for (std::list< staff::Nillable< ::FdWsFWMitglieder144RequestFilter > >::const_iterator itItem = (rstStruct.FdWsFWMitglieder144RequestFilter).begin(), itItemEnd = (rstStruct.FdWsFWMitglieder144RequestFilter).end();
       itItem != itItemEnd; ++itItem)
  {
    if (!((*itItem)).IsNull()) // Nillable
    {
      staff::DataObject tdoParamItem = rdoParam.CreateChild("FdWsFWMitglieder144RequestFilter");
      tdoParamItem.SetNamespaceUriGenPrefix("http://fdisk.at/");
      tdoParamItem << *(*itItem);
    }
    else
    {
      rdoParam.CreateChild("FdWsFWMitglieder144RequestFilter").SetNil();
    }
  }

  return rdoParam;
}

const DataObject& operator>>(const DataObject& rdoParam, struct ::ArrayOfFdWsFWMitglieder144RequestFilter& rstStruct)
{
  for (staff::DataObject tdoItem = rdoParam.FirstChild(); !tdoItem.IsNull(); tdoItem.SetNextSibling())
  {
    if (tdoItem.GetLocalName() == "FdWsFWMitglieder144RequestFilter")
    {
      (rstStruct.FdWsFWMitglieder144RequestFilter).resize((rstStruct.FdWsFWMitglieder144RequestFilter).size() + 1);
      if (!tdoItem.IsNil()) // Nillable
      {
        tdoItem >> *(rstStruct.FdWsFWMitglieder144RequestFilter).back();
      }
    }
  }

  return rdoParam;
}

DataObject& operator<<(DataObject& rdoParam, const struct ::FdWsFWMitglieder144RequestFilter& rstStruct)
{
  staff::DataObject tdoParamtype = rdoParam.CreateChild("type");
  tdoParamtype.SetNamespaceUriGenPrefix("http://fdisk.at/");
  tdoParamtype << rstStruct.type;
  if (!(rstStruct.value).IsNull()) // Optional
  {
    rdoParam.CreateChild("value", *rstStruct.value).SetNamespaceUriGenPrefix("http://fdisk.at/");
  }
  return rdoParam;
}

const DataObject& operator>>(const DataObject& rdoParam, struct ::FdWsFWMitglieder144RequestFilter& rstStruct)
{
  rdoParam.GetChildByLocalName("type") >> rstStruct.type;
  const staff::DataObject& rdoParamvalue = rdoParam.GetChildByLocalNameOpt("value");
  if (!rdoParamvalue.IsNull()) // optional
  {
    rdoParamvalue.GetValue(*rstStruct.value);
  }
  return rdoParam;
}

DataObject& operator<<(DataObject& rdoParam, const struct ::FdWsDienstgradeRequest& rstStruct)
{
  if (!(rstStruct.filterGroup).IsNull()) // Optional
  {
    staff::DataObject tdoParamfilterGroup = rdoParam.CreateChild("filterGroup");
    tdoParamfilterGroup.SetNamespaceUriGenPrefix("http://fdisk.at/");
    tdoParamfilterGroup << *rstStruct.filterGroup;
  }
  return rdoParam;
}

const DataObject& operator>>(const DataObject& rdoParam, struct ::FdWsDienstgradeRequest& rstStruct)
{
  const staff::DataObject& rdoParamfilterGroup = rdoParam.GetChildByLocalNameOpt("filterGroup");
  if (!rdoParamfilterGroup.IsNull()) // optional
  {
    rdoParamfilterGroup >> *rstStruct.filterGroup;
  }
  return rdoParam;
}

DataObject& operator<<(DataObject& rdoParam, const struct ::ArrayOfArrayOfFdWsDienstgradeRequestFilter& rstStruct)
{
  rdoParam.SetNamespaceUriGenPrefix("http://fdisk.at/");
  for (std::list< staff::Nillable< ::ArrayOfFdWsDienstgradeRequestFilter > >::const_iterator itItem = (rstStruct.ArrayOfFdWsDienstgradeRequestFilter).begin(), itItemEnd = (rstStruct.ArrayOfFdWsDienstgradeRequestFilter).end();
       itItem != itItemEnd; ++itItem)
  {
    if (!((*itItem)).IsNull()) // Nillable
    {
      staff::DataObject tdoParamItem = rdoParam.CreateChild("ArrayOfFdWsDienstgradeRequestFilter");
      tdoParamItem.SetNamespaceUriGenPrefix("http://fdisk.at/");
      tdoParamItem << *(*itItem);
    }
    else
    {
      rdoParam.CreateChild("ArrayOfFdWsDienstgradeRequestFilter").SetNil();
    }
  }

  return rdoParam;
}

const DataObject& operator>>(const DataObject& rdoParam, struct ::ArrayOfArrayOfFdWsDienstgradeRequestFilter& rstStruct)
{
  for (staff::DataObject tdoItem = rdoParam.FirstChild(); !tdoItem.IsNull(); tdoItem.SetNextSibling())
  {
    if (tdoItem.GetLocalName() == "ArrayOfFdWsDienstgradeRequestFilter")
    {
      (rstStruct.ArrayOfFdWsDienstgradeRequestFilter).resize((rstStruct.ArrayOfFdWsDienstgradeRequestFilter).size() + 1);
      if (!tdoItem.IsNil()) // Nillable
      {
        tdoItem >> *(rstStruct.ArrayOfFdWsDienstgradeRequestFilter).back();
      }
    }
  }

  return rdoParam;
}

DataObject& operator<<(DataObject& rdoParam, const struct ::ArrayOfFdWsDienstgradeRequestFilter& rstStruct)
{
  rdoParam.SetNamespaceUriGenPrefix("http://fdisk.at/");
  for (std::list< staff::Nillable< ::FdWsDienstgradeRequestFilter > >::const_iterator itItem = (rstStruct.FdWsDienstgradeRequestFilter).begin(), itItemEnd = (rstStruct.FdWsDienstgradeRequestFilter).end();
       itItem != itItemEnd; ++itItem)
  {
    if (!((*itItem)).IsNull()) // Nillable
    {
      staff::DataObject tdoParamItem = rdoParam.CreateChild("FdWsDienstgradeRequestFilter");
      tdoParamItem.SetNamespaceUriGenPrefix("http://fdisk.at/");
      tdoParamItem << *(*itItem);
    }
    else
    {
      rdoParam.CreateChild("FdWsDienstgradeRequestFilter").SetNil();
    }
  }

  return rdoParam;
}

const DataObject& operator>>(const DataObject& rdoParam, struct ::ArrayOfFdWsDienstgradeRequestFilter& rstStruct)
{
  for (staff::DataObject tdoItem = rdoParam.FirstChild(); !tdoItem.IsNull(); tdoItem.SetNextSibling())
  {
    if (tdoItem.GetLocalName() == "FdWsDienstgradeRequestFilter")
    {
      (rstStruct.FdWsDienstgradeRequestFilter).resize((rstStruct.FdWsDienstgradeRequestFilter).size() + 1);
      if (!tdoItem.IsNil()) // Nillable
      {
        tdoItem >> *(rstStruct.FdWsDienstgradeRequestFilter).back();
      }
    }
  }

  return rdoParam;
}

DataObject& operator<<(DataObject& rdoParam, const struct ::FdWsDienstgradeRequestFilter& rstStruct)
{
  staff::DataObject tdoParamtype = rdoParam.CreateChild("type");
  tdoParamtype.SetNamespaceUriGenPrefix("http://fdisk.at/");
  tdoParamtype << rstStruct.type;
  if (!(rstStruct.value).IsNull()) // Optional
  {
    rdoParam.CreateChild("value", *rstStruct.value).SetNamespaceUriGenPrefix("http://fdisk.at/");
  }
  return rdoParam;
}

const DataObject& operator>>(const DataObject& rdoParam, struct ::FdWsDienstgradeRequestFilter& rstStruct)
{
  rdoParam.GetChildByLocalName("type") >> rstStruct.type;
  const staff::DataObject& rdoParamvalue = rdoParam.GetChildByLocalNameOpt("value");
  if (!rdoParamvalue.IsNull()) // optional
  {
    rdoParamvalue.GetValue(*rstStruct.value);
  }
  return rdoParam;
}

DataObject& operator<<(DataObject& rdoParam, const struct ::FdWsAusbildungenRequest& rstStruct)
{
  if (!(rstStruct.filterGroup).IsNull()) // Optional
  {
    staff::DataObject tdoParamfilterGroup = rdoParam.CreateChild("filterGroup");
    tdoParamfilterGroup.SetNamespaceUriGenPrefix("http://fdisk.at/");
    tdoParamfilterGroup << *rstStruct.filterGroup;
  }
  return rdoParam;
}

const DataObject& operator>>(const DataObject& rdoParam, struct ::FdWsAusbildungenRequest& rstStruct)
{
  const staff::DataObject& rdoParamfilterGroup = rdoParam.GetChildByLocalNameOpt("filterGroup");
  if (!rdoParamfilterGroup.IsNull()) // optional
  {
    rdoParamfilterGroup >> *rstStruct.filterGroup;
  }
  return rdoParam;
}

DataObject& operator<<(DataObject& rdoParam, const struct ::ArrayOfArrayOfFdWsAusbildungenRequestFilter& rstStruct)
{
  rdoParam.SetNamespaceUriGenPrefix("http://fdisk.at/");
  for (std::list< staff::Nillable< ::ArrayOfFdWsAusbildungenRequestFilter > >::const_iterator itItem = (rstStruct.ArrayOfFdWsAusbildungenRequestFilter).begin(), itItemEnd = (rstStruct.ArrayOfFdWsAusbildungenRequestFilter).end();
       itItem != itItemEnd; ++itItem)
  {
    if (!((*itItem)).IsNull()) // Nillable
    {
      staff::DataObject tdoParamItem = rdoParam.CreateChild("ArrayOfFdWsAusbildungenRequestFilter");
      tdoParamItem.SetNamespaceUriGenPrefix("http://fdisk.at/");
      tdoParamItem << *(*itItem);
    }
    else
    {
      rdoParam.CreateChild("ArrayOfFdWsAusbildungenRequestFilter").SetNil();
    }
  }

  return rdoParam;
}

const DataObject& operator>>(const DataObject& rdoParam, struct ::ArrayOfArrayOfFdWsAusbildungenRequestFilter& rstStruct)
{
  for (staff::DataObject tdoItem = rdoParam.FirstChild(); !tdoItem.IsNull(); tdoItem.SetNextSibling())
  {
    if (tdoItem.GetLocalName() == "ArrayOfFdWsAusbildungenRequestFilter")
    {
      (rstStruct.ArrayOfFdWsAusbildungenRequestFilter).resize((rstStruct.ArrayOfFdWsAusbildungenRequestFilter).size() + 1);
      if (!tdoItem.IsNil()) // Nillable
      {
        tdoItem >> *(rstStruct.ArrayOfFdWsAusbildungenRequestFilter).back();
      }
    }
  }

  return rdoParam;
}

DataObject& operator<<(DataObject& rdoParam, const struct ::ArrayOfFdWsAusbildungenRequestFilter& rstStruct)
{
  rdoParam.SetNamespaceUriGenPrefix("http://fdisk.at/");
  for (std::list< staff::Nillable< ::FdWsAusbildungenRequestFilter > >::const_iterator itItem = (rstStruct.FdWsAusbildungenRequestFilter).begin(), itItemEnd = (rstStruct.FdWsAusbildungenRequestFilter).end();
       itItem != itItemEnd; ++itItem)
  {
    if (!((*itItem)).IsNull()) // Nillable
    {
      staff::DataObject tdoParamItem = rdoParam.CreateChild("FdWsAusbildungenRequestFilter");
      tdoParamItem.SetNamespaceUriGenPrefix("http://fdisk.at/");
      tdoParamItem << *(*itItem);
    }
    else
    {
      rdoParam.CreateChild("FdWsAusbildungenRequestFilter").SetNil();
    }
  }

  return rdoParam;
}

const DataObject& operator>>(const DataObject& rdoParam, struct ::ArrayOfFdWsAusbildungenRequestFilter& rstStruct)
{
  for (staff::DataObject tdoItem = rdoParam.FirstChild(); !tdoItem.IsNull(); tdoItem.SetNextSibling())
  {
    if (tdoItem.GetLocalName() == "FdWsAusbildungenRequestFilter")
    {
      (rstStruct.FdWsAusbildungenRequestFilter).resize((rstStruct.FdWsAusbildungenRequestFilter).size() + 1);
      if (!tdoItem.IsNil()) // Nillable
      {
        tdoItem >> *(rstStruct.FdWsAusbildungenRequestFilter).back();
      }
    }
  }

  return rdoParam;
}

DataObject& operator<<(DataObject& rdoParam, const struct ::FdWsAusbildungenRequestFilter& rstStruct)
{
  staff::DataObject tdoParamtype = rdoParam.CreateChild("type");
  tdoParamtype.SetNamespaceUriGenPrefix("http://fdisk.at/");
  tdoParamtype << rstStruct.type;
  if (!(rstStruct.value).IsNull()) // Optional
  {
    rdoParam.CreateChild("value", *rstStruct.value).SetNamespaceUriGenPrefix("http://fdisk.at/");
  }
  return rdoParam;
}

const DataObject& operator>>(const DataObject& rdoParam, struct ::FdWsAusbildungenRequestFilter& rstStruct)
{
  rdoParam.GetChildByLocalName("type") >> rstStruct.type;
  const staff::DataObject& rdoParamvalue = rdoParam.GetChildByLocalNameOpt("value");
  if (!rdoParamvalue.IsNull()) // optional
  {
    rdoParamvalue.GetValue(*rstStruct.value);
  }
  return rdoParam;
}

DataObject& operator<<(DataObject& rdoParam, const struct ::FdWsFunktionenRequest& rstStruct)
{
  if (!(rstStruct.filterGroup).IsNull()) // Optional
  {
    staff::DataObject tdoParamfilterGroup = rdoParam.CreateChild("filterGroup");
    tdoParamfilterGroup.SetNamespaceUriGenPrefix("http://fdisk.at/");
    tdoParamfilterGroup << *rstStruct.filterGroup;
  }
  return rdoParam;
}

const DataObject& operator>>(const DataObject& rdoParam, struct ::FdWsFunktionenRequest& rstStruct)
{
  const staff::DataObject& rdoParamfilterGroup = rdoParam.GetChildByLocalNameOpt("filterGroup");
  if (!rdoParamfilterGroup.IsNull()) // optional
  {
    rdoParamfilterGroup >> *rstStruct.filterGroup;
  }
  return rdoParam;
}

DataObject& operator<<(DataObject& rdoParam, const struct ::ArrayOfArrayOfFdWsFunktionenRequestFilter& rstStruct)
{
  rdoParam.SetNamespaceUriGenPrefix("http://fdisk.at/");
  for (std::list< staff::Nillable< ::ArrayOfFdWsFunktionenRequestFilter > >::const_iterator itItem = (rstStruct.ArrayOfFdWsFunktionenRequestFilter).begin(), itItemEnd = (rstStruct.ArrayOfFdWsFunktionenRequestFilter).end();
       itItem != itItemEnd; ++itItem)
  {
    if (!((*itItem)).IsNull()) // Nillable
    {
      staff::DataObject tdoParamItem = rdoParam.CreateChild("ArrayOfFdWsFunktionenRequestFilter");
      tdoParamItem.SetNamespaceUriGenPrefix("http://fdisk.at/");
      tdoParamItem << *(*itItem);
    }
    else
    {
      rdoParam.CreateChild("ArrayOfFdWsFunktionenRequestFilter").SetNil();
    }
  }

  return rdoParam;
}

const DataObject& operator>>(const DataObject& rdoParam, struct ::ArrayOfArrayOfFdWsFunktionenRequestFilter& rstStruct)
{
  for (staff::DataObject tdoItem = rdoParam.FirstChild(); !tdoItem.IsNull(); tdoItem.SetNextSibling())
  {
    if (tdoItem.GetLocalName() == "ArrayOfFdWsFunktionenRequestFilter")
    {
      (rstStruct.ArrayOfFdWsFunktionenRequestFilter).resize((rstStruct.ArrayOfFdWsFunktionenRequestFilter).size() + 1);
      if (!tdoItem.IsNil()) // Nillable
      {
        tdoItem >> *(rstStruct.ArrayOfFdWsFunktionenRequestFilter).back();
      }
    }
  }

  return rdoParam;
}

DataObject& operator<<(DataObject& rdoParam, const struct ::ArrayOfFdWsFunktionenRequestFilter& rstStruct)
{
  rdoParam.SetNamespaceUriGenPrefix("http://fdisk.at/");
  for (std::list< staff::Nillable< ::FdWsFunktionenRequestFilter > >::const_iterator itItem = (rstStruct.FdWsFunktionenRequestFilter).begin(), itItemEnd = (rstStruct.FdWsFunktionenRequestFilter).end();
       itItem != itItemEnd; ++itItem)
  {
    if (!((*itItem)).IsNull()) // Nillable
    {
      staff::DataObject tdoParamItem = rdoParam.CreateChild("FdWsFunktionenRequestFilter");
      tdoParamItem.SetNamespaceUriGenPrefix("http://fdisk.at/");
      tdoParamItem << *(*itItem);
    }
    else
    {
      rdoParam.CreateChild("FdWsFunktionenRequestFilter").SetNil();
    }
  }

  return rdoParam;
}

const DataObject& operator>>(const DataObject& rdoParam, struct ::ArrayOfFdWsFunktionenRequestFilter& rstStruct)
{
  for (staff::DataObject tdoItem = rdoParam.FirstChild(); !tdoItem.IsNull(); tdoItem.SetNextSibling())
  {
    if (tdoItem.GetLocalName() == "FdWsFunktionenRequestFilter")
    {
      (rstStruct.FdWsFunktionenRequestFilter).resize((rstStruct.FdWsFunktionenRequestFilter).size() + 1);
      if (!tdoItem.IsNil()) // Nillable
      {
        tdoItem >> *(rstStruct.FdWsFunktionenRequestFilter).back();
      }
    }
  }

  return rdoParam;
}

DataObject& operator<<(DataObject& rdoParam, const struct ::FdWsFunktionenRequestFilter& rstStruct)
{
  staff::DataObject tdoParamtype = rdoParam.CreateChild("type");
  tdoParamtype.SetNamespaceUriGenPrefix("http://fdisk.at/");
  tdoParamtype << rstStruct.type;
  if (!(rstStruct.value).IsNull()) // Optional
  {
    rdoParam.CreateChild("value", *rstStruct.value).SetNamespaceUriGenPrefix("http://fdisk.at/");
  }
  return rdoParam;
}

const DataObject& operator>>(const DataObject& rdoParam, struct ::FdWsFunktionenRequestFilter& rstStruct)
{
  rdoParam.GetChildByLocalName("type") >> rstStruct.type;
  const staff::DataObject& rdoParamvalue = rdoParam.GetChildByLocalNameOpt("value");
  if (!rdoParamvalue.IsNull()) // optional
  {
    rdoParamvalue.GetValue(*rstStruct.value);
  }
  return rdoParam;
}

DataObject& operator<<(DataObject& rdoParam, const struct ::FdWsFunktionaereRequest& rstStruct)
{
  if (!(rstStruct.filterGroup).IsNull()) // Optional
  {
    staff::DataObject tdoParamfilterGroup = rdoParam.CreateChild("filterGroup");
    tdoParamfilterGroup.SetNamespaceUriGenPrefix("http://fdisk.at/");
    tdoParamfilterGroup << *rstStruct.filterGroup;
  }
  return rdoParam;
}

const DataObject& operator>>(const DataObject& rdoParam, struct ::FdWsFunktionaereRequest& rstStruct)
{
  const staff::DataObject& rdoParamfilterGroup = rdoParam.GetChildByLocalNameOpt("filterGroup");
  if (!rdoParamfilterGroup.IsNull()) // optional
  {
    rdoParamfilterGroup >> *rstStruct.filterGroup;
  }
  return rdoParam;
}

DataObject& operator<<(DataObject& rdoParam, const struct ::ArrayOfArrayOfFdWsFunktionaereRequestFilter& rstStruct)
{
  rdoParam.SetNamespaceUriGenPrefix("http://fdisk.at/");
  for (std::list< staff::Nillable< ::ArrayOfFdWsFunktionaereRequestFilter > >::const_iterator itItem = (rstStruct.ArrayOfFdWsFunktionaereRequestFilter).begin(), itItemEnd = (rstStruct.ArrayOfFdWsFunktionaereRequestFilter).end();
       itItem != itItemEnd; ++itItem)
  {
    if (!((*itItem)).IsNull()) // Nillable
    {
      staff::DataObject tdoParamItem = rdoParam.CreateChild("ArrayOfFdWsFunktionaereRequestFilter");
      tdoParamItem.SetNamespaceUriGenPrefix("http://fdisk.at/");
      tdoParamItem << *(*itItem);
    }
    else
    {
      rdoParam.CreateChild("ArrayOfFdWsFunktionaereRequestFilter").SetNil();
    }
  }

  return rdoParam;
}

const DataObject& operator>>(const DataObject& rdoParam, struct ::ArrayOfArrayOfFdWsFunktionaereRequestFilter& rstStruct)
{
  for (staff::DataObject tdoItem = rdoParam.FirstChild(); !tdoItem.IsNull(); tdoItem.SetNextSibling())
  {
    if (tdoItem.GetLocalName() == "ArrayOfFdWsFunktionaereRequestFilter")
    {
      (rstStruct.ArrayOfFdWsFunktionaereRequestFilter).resize((rstStruct.ArrayOfFdWsFunktionaereRequestFilter).size() + 1);
      if (!tdoItem.IsNil()) // Nillable
      {
        tdoItem >> *(rstStruct.ArrayOfFdWsFunktionaereRequestFilter).back();
      }
    }
  }

  return rdoParam;
}

DataObject& operator<<(DataObject& rdoParam, const struct ::ArrayOfFdWsFunktionaereRequestFilter& rstStruct)
{
  rdoParam.SetNamespaceUriGenPrefix("http://fdisk.at/");
  for (std::list< staff::Nillable< ::FdWsFunktionaereRequestFilter > >::const_iterator itItem = (rstStruct.FdWsFunktionaereRequestFilter).begin(), itItemEnd = (rstStruct.FdWsFunktionaereRequestFilter).end();
       itItem != itItemEnd; ++itItem)
  {
    if (!((*itItem)).IsNull()) // Nillable
    {
      staff::DataObject tdoParamItem = rdoParam.CreateChild("FdWsFunktionaereRequestFilter");
      tdoParamItem.SetNamespaceUriGenPrefix("http://fdisk.at/");
      tdoParamItem << *(*itItem);
    }
    else
    {
      rdoParam.CreateChild("FdWsFunktionaereRequestFilter").SetNil();
    }
  }

  return rdoParam;
}

const DataObject& operator>>(const DataObject& rdoParam, struct ::ArrayOfFdWsFunktionaereRequestFilter& rstStruct)
{
  for (staff::DataObject tdoItem = rdoParam.FirstChild(); !tdoItem.IsNull(); tdoItem.SetNextSibling())
  {
    if (tdoItem.GetLocalName() == "FdWsFunktionaereRequestFilter")
    {
      (rstStruct.FdWsFunktionaereRequestFilter).resize((rstStruct.FdWsFunktionaereRequestFilter).size() + 1);
      if (!tdoItem.IsNil()) // Nillable
      {
        tdoItem >> *(rstStruct.FdWsFunktionaereRequestFilter).back();
      }
    }
  }

  return rdoParam;
}

DataObject& operator<<(DataObject& rdoParam, const struct ::FdWsFunktionaereRequestFilter& rstStruct)
{
  staff::DataObject tdoParamtype = rdoParam.CreateChild("type");
  tdoParamtype.SetNamespaceUriGenPrefix("http://fdisk.at/");
  tdoParamtype << rstStruct.type;
  if (!(rstStruct.value).IsNull()) // Optional
  {
    rdoParam.CreateChild("value", *rstStruct.value).SetNamespaceUriGenPrefix("http://fdisk.at/");
  }
  return rdoParam;
}

const DataObject& operator>>(const DataObject& rdoParam, struct ::FdWsFunktionaereRequestFilter& rstStruct)
{
  rdoParam.GetChildByLocalName("type") >> rstStruct.type;
  const staff::DataObject& rdoParamvalue = rdoParam.GetChildByLocalNameOpt("value");
  if (!rdoParamvalue.IsNull()) // optional
  {
    rdoParamvalue.GetValue(*rstStruct.value);
  }
  return rdoParam;
}

DataObject& operator<<(DataObject& rdoParam, const struct ::FdWsInstanzenRequest& rstStruct)
{
  if (!(rstStruct.filterGroup).IsNull()) // Optional
  {
    staff::DataObject tdoParamfilterGroup = rdoParam.CreateChild("filterGroup");
    tdoParamfilterGroup.SetNamespaceUriGenPrefix("http://fdisk.at/");
    tdoParamfilterGroup << *rstStruct.filterGroup;
  }
  return rdoParam;
}

const DataObject& operator>>(const DataObject& rdoParam, struct ::FdWsInstanzenRequest& rstStruct)
{
  const staff::DataObject& rdoParamfilterGroup = rdoParam.GetChildByLocalNameOpt("filterGroup");
  if (!rdoParamfilterGroup.IsNull()) // optional
  {
    rdoParamfilterGroup >> *rstStruct.filterGroup;
  }
  return rdoParam;
}

DataObject& operator<<(DataObject& rdoParam, const struct ::ArrayOfArrayOfFdWsInstanzenRequestFilter& rstStruct)
{
  rdoParam.SetNamespaceUriGenPrefix("http://fdisk.at/");
  for (std::list< staff::Nillable< ::ArrayOfFdWsInstanzenRequestFilter > >::const_iterator itItem = (rstStruct.ArrayOfFdWsInstanzenRequestFilter).begin(), itItemEnd = (rstStruct.ArrayOfFdWsInstanzenRequestFilter).end();
       itItem != itItemEnd; ++itItem)
  {
    if (!((*itItem)).IsNull()) // Nillable
    {
      staff::DataObject tdoParamItem = rdoParam.CreateChild("ArrayOfFdWsInstanzenRequestFilter");
      tdoParamItem.SetNamespaceUriGenPrefix("http://fdisk.at/");
      tdoParamItem << *(*itItem);
    }
    else
    {
      rdoParam.CreateChild("ArrayOfFdWsInstanzenRequestFilter").SetNil();
    }
  }

  return rdoParam;
}

const DataObject& operator>>(const DataObject& rdoParam, struct ::ArrayOfArrayOfFdWsInstanzenRequestFilter& rstStruct)
{
  for (staff::DataObject tdoItem = rdoParam.FirstChild(); !tdoItem.IsNull(); tdoItem.SetNextSibling())
  {
    if (tdoItem.GetLocalName() == "ArrayOfFdWsInstanzenRequestFilter")
    {
      (rstStruct.ArrayOfFdWsInstanzenRequestFilter).resize((rstStruct.ArrayOfFdWsInstanzenRequestFilter).size() + 1);
      if (!tdoItem.IsNil()) // Nillable
      {
        tdoItem >> *(rstStruct.ArrayOfFdWsInstanzenRequestFilter).back();
      }
    }
  }

  return rdoParam;
}

DataObject& operator<<(DataObject& rdoParam, const struct ::ArrayOfFdWsInstanzenRequestFilter& rstStruct)
{
  rdoParam.SetNamespaceUriGenPrefix("http://fdisk.at/");
  for (std::list< staff::Nillable< ::FdWsInstanzenRequestFilter > >::const_iterator itItem = (rstStruct.FdWsInstanzenRequestFilter).begin(), itItemEnd = (rstStruct.FdWsInstanzenRequestFilter).end();
       itItem != itItemEnd; ++itItem)
  {
    if (!((*itItem)).IsNull()) // Nillable
    {
      staff::DataObject tdoParamItem = rdoParam.CreateChild("FdWsInstanzenRequestFilter");
      tdoParamItem.SetNamespaceUriGenPrefix("http://fdisk.at/");
      tdoParamItem << *(*itItem);
    }
    else
    {
      rdoParam.CreateChild("FdWsInstanzenRequestFilter").SetNil();
    }
  }

  return rdoParam;
}

const DataObject& operator>>(const DataObject& rdoParam, struct ::ArrayOfFdWsInstanzenRequestFilter& rstStruct)
{
  for (staff::DataObject tdoItem = rdoParam.FirstChild(); !tdoItem.IsNull(); tdoItem.SetNextSibling())
  {
    if (tdoItem.GetLocalName() == "FdWsInstanzenRequestFilter")
    {
      (rstStruct.FdWsInstanzenRequestFilter).resize((rstStruct.FdWsInstanzenRequestFilter).size() + 1);
      if (!tdoItem.IsNil()) // Nillable
      {
        tdoItem >> *(rstStruct.FdWsInstanzenRequestFilter).back();
      }
    }
  }

  return rdoParam;
}

DataObject& operator<<(DataObject& rdoParam, const struct ::FdWsInstanzenRequestFilter& rstStruct)
{
  staff::DataObject tdoParamtype = rdoParam.CreateChild("type");
  tdoParamtype.SetNamespaceUriGenPrefix("http://fdisk.at/");
  tdoParamtype << rstStruct.type;
  if (!(rstStruct.value).IsNull()) // Optional
  {
    rdoParam.CreateChild("value", *rstStruct.value).SetNamespaceUriGenPrefix("http://fdisk.at/");
  }
  return rdoParam;
}

const DataObject& operator>>(const DataObject& rdoParam, struct ::FdWsInstanzenRequestFilter& rstStruct)
{
  rdoParam.GetChildByLocalName("type") >> rstStruct.type;
  const staff::DataObject& rdoParamvalue = rdoParam.GetChildByLocalNameOpt("value");
  if (!rdoParamvalue.IsNull()) // optional
  {
    rdoParamvalue.GetValue(*rstStruct.value);
  }
  return rdoParam;
}

DataObject& operator<<(DataObject& rdoParam, const struct ::FdWsFeuerwachenRequest& rstStruct)
{
  if (!(rstStruct.filterGroup).IsNull()) // Optional
  {
    staff::DataObject tdoParamfilterGroup = rdoParam.CreateChild("filterGroup");
    tdoParamfilterGroup.SetNamespaceUriGenPrefix("http://fdisk.at/");
    tdoParamfilterGroup << *rstStruct.filterGroup;
  }
  return rdoParam;
}

const DataObject& operator>>(const DataObject& rdoParam, struct ::FdWsFeuerwachenRequest& rstStruct)
{
  const staff::DataObject& rdoParamfilterGroup = rdoParam.GetChildByLocalNameOpt("filterGroup");
  if (!rdoParamfilterGroup.IsNull()) // optional
  {
    rdoParamfilterGroup >> *rstStruct.filterGroup;
  }
  return rdoParam;
}

DataObject& operator<<(DataObject& rdoParam, const struct ::ArrayOfArrayOfFdWsFeuerwachenRequestFilter& rstStruct)
{
  rdoParam.SetNamespaceUriGenPrefix("http://fdisk.at/");
  for (std::list< staff::Nillable< ::ArrayOfFdWsFeuerwachenRequestFilter > >::const_iterator itItem = (rstStruct.ArrayOfFdWsFeuerwachenRequestFilter).begin(), itItemEnd = (rstStruct.ArrayOfFdWsFeuerwachenRequestFilter).end();
       itItem != itItemEnd; ++itItem)
  {
    if (!((*itItem)).IsNull()) // Nillable
    {
      staff::DataObject tdoParamItem = rdoParam.CreateChild("ArrayOfFdWsFeuerwachenRequestFilter");
      tdoParamItem.SetNamespaceUriGenPrefix("http://fdisk.at/");
      tdoParamItem << *(*itItem);
    }
    else
    {
      rdoParam.CreateChild("ArrayOfFdWsFeuerwachenRequestFilter").SetNil();
    }
  }

  return rdoParam;
}

const DataObject& operator>>(const DataObject& rdoParam, struct ::ArrayOfArrayOfFdWsFeuerwachenRequestFilter& rstStruct)
{
  for (staff::DataObject tdoItem = rdoParam.FirstChild(); !tdoItem.IsNull(); tdoItem.SetNextSibling())
  {
    if (tdoItem.GetLocalName() == "ArrayOfFdWsFeuerwachenRequestFilter")
    {
      (rstStruct.ArrayOfFdWsFeuerwachenRequestFilter).resize((rstStruct.ArrayOfFdWsFeuerwachenRequestFilter).size() + 1);
      if (!tdoItem.IsNil()) // Nillable
      {
        tdoItem >> *(rstStruct.ArrayOfFdWsFeuerwachenRequestFilter).back();
      }
    }
  }

  return rdoParam;
}

DataObject& operator<<(DataObject& rdoParam, const struct ::ArrayOfFdWsFeuerwachenRequestFilter& rstStruct)
{
  rdoParam.SetNamespaceUriGenPrefix("http://fdisk.at/");
  for (std::list< staff::Nillable< ::FdWsFeuerwachenRequestFilter > >::const_iterator itItem = (rstStruct.FdWsFeuerwachenRequestFilter).begin(), itItemEnd = (rstStruct.FdWsFeuerwachenRequestFilter).end();
       itItem != itItemEnd; ++itItem)
  {
    if (!((*itItem)).IsNull()) // Nillable
    {
      staff::DataObject tdoParamItem = rdoParam.CreateChild("FdWsFeuerwachenRequestFilter");
      tdoParamItem.SetNamespaceUriGenPrefix("http://fdisk.at/");
      tdoParamItem << *(*itItem);
    }
    else
    {
      rdoParam.CreateChild("FdWsFeuerwachenRequestFilter").SetNil();
    }
  }

  return rdoParam;
}

const DataObject& operator>>(const DataObject& rdoParam, struct ::ArrayOfFdWsFeuerwachenRequestFilter& rstStruct)
{
  for (staff::DataObject tdoItem = rdoParam.FirstChild(); !tdoItem.IsNull(); tdoItem.SetNextSibling())
  {
    if (tdoItem.GetLocalName() == "FdWsFeuerwachenRequestFilter")
    {
      (rstStruct.FdWsFeuerwachenRequestFilter).resize((rstStruct.FdWsFeuerwachenRequestFilter).size() + 1);
      if (!tdoItem.IsNil()) // Nillable
      {
        tdoItem >> *(rstStruct.FdWsFeuerwachenRequestFilter).back();
      }
    }
  }

  return rdoParam;
}

DataObject& operator<<(DataObject& rdoParam, const struct ::FdWsFeuerwachenRequestFilter& rstStruct)
{
  staff::DataObject tdoParamtype = rdoParam.CreateChild("type");
  tdoParamtype.SetNamespaceUriGenPrefix("http://fdisk.at/");
  tdoParamtype << rstStruct.type;
  if (!(rstStruct.value).IsNull()) // Optional
  {
    rdoParam.CreateChild("value", *rstStruct.value).SetNamespaceUriGenPrefix("http://fdisk.at/");
  }
  return rdoParam;
}

const DataObject& operator>>(const DataObject& rdoParam, struct ::FdWsFeuerwachenRequestFilter& rstStruct)
{
  rdoParam.GetChildByLocalName("type") >> rstStruct.type;
  const staff::DataObject& rdoParamvalue = rdoParam.GetChildByLocalNameOpt("value");
  if (!rdoParamvalue.IsNull()) // optional
  {
    rdoParamvalue.GetValue(*rstStruct.value);
  }
  return rdoParam;
}

DataObject& operator<<(DataObject& rdoParam, const struct ::FdWsSonderdiensteRequest& rstStruct)
{
  if (!(rstStruct.filterGroup).IsNull()) // Optional
  {
    staff::DataObject tdoParamfilterGroup = rdoParam.CreateChild("filterGroup");
    tdoParamfilterGroup.SetNamespaceUriGenPrefix("http://fdisk.at/");
    tdoParamfilterGroup << *rstStruct.filterGroup;
  }
  return rdoParam;
}

const DataObject& operator>>(const DataObject& rdoParam, struct ::FdWsSonderdiensteRequest& rstStruct)
{
  const staff::DataObject& rdoParamfilterGroup = rdoParam.GetChildByLocalNameOpt("filterGroup");
  if (!rdoParamfilterGroup.IsNull()) // optional
  {
    rdoParamfilterGroup >> *rstStruct.filterGroup;
  }
  return rdoParam;
}

DataObject& operator<<(DataObject& rdoParam, const struct ::ArrayOfArrayOfFdWsSonderdiensteRequestFilter& rstStruct)
{
  rdoParam.SetNamespaceUriGenPrefix("http://fdisk.at/");
  for (std::list< staff::Nillable< ::ArrayOfFdWsSonderdiensteRequestFilter > >::const_iterator itItem = (rstStruct.ArrayOfFdWsSonderdiensteRequestFilter).begin(), itItemEnd = (rstStruct.ArrayOfFdWsSonderdiensteRequestFilter).end();
       itItem != itItemEnd; ++itItem)
  {
    if (!((*itItem)).IsNull()) // Nillable
    {
      staff::DataObject tdoParamItem = rdoParam.CreateChild("ArrayOfFdWsSonderdiensteRequestFilter");
      tdoParamItem.SetNamespaceUriGenPrefix("http://fdisk.at/");
      tdoParamItem << *(*itItem);
    }
    else
    {
      rdoParam.CreateChild("ArrayOfFdWsSonderdiensteRequestFilter").SetNil();
    }
  }

  return rdoParam;
}

const DataObject& operator>>(const DataObject& rdoParam, struct ::ArrayOfArrayOfFdWsSonderdiensteRequestFilter& rstStruct)
{
  for (staff::DataObject tdoItem = rdoParam.FirstChild(); !tdoItem.IsNull(); tdoItem.SetNextSibling())
  {
    if (tdoItem.GetLocalName() == "ArrayOfFdWsSonderdiensteRequestFilter")
    {
      (rstStruct.ArrayOfFdWsSonderdiensteRequestFilter).resize((rstStruct.ArrayOfFdWsSonderdiensteRequestFilter).size() + 1);
      if (!tdoItem.IsNil()) // Nillable
      {
        tdoItem >> *(rstStruct.ArrayOfFdWsSonderdiensteRequestFilter).back();
      }
    }
  }

  return rdoParam;
}

DataObject& operator<<(DataObject& rdoParam, const struct ::ArrayOfFdWsSonderdiensteRequestFilter& rstStruct)
{
  rdoParam.SetNamespaceUriGenPrefix("http://fdisk.at/");
  for (std::list< staff::Nillable< ::FdWsSonderdiensteRequestFilter > >::const_iterator itItem = (rstStruct.FdWsSonderdiensteRequestFilter).begin(), itItemEnd = (rstStruct.FdWsSonderdiensteRequestFilter).end();
       itItem != itItemEnd; ++itItem)
  {
    if (!((*itItem)).IsNull()) // Nillable
    {
      staff::DataObject tdoParamItem = rdoParam.CreateChild("FdWsSonderdiensteRequestFilter");
      tdoParamItem.SetNamespaceUriGenPrefix("http://fdisk.at/");
      tdoParamItem << *(*itItem);
    }
    else
    {
      rdoParam.CreateChild("FdWsSonderdiensteRequestFilter").SetNil();
    }
  }

  return rdoParam;
}

const DataObject& operator>>(const DataObject& rdoParam, struct ::ArrayOfFdWsSonderdiensteRequestFilter& rstStruct)
{
  for (staff::DataObject tdoItem = rdoParam.FirstChild(); !tdoItem.IsNull(); tdoItem.SetNextSibling())
  {
    if (tdoItem.GetLocalName() == "FdWsSonderdiensteRequestFilter")
    {
      (rstStruct.FdWsSonderdiensteRequestFilter).resize((rstStruct.FdWsSonderdiensteRequestFilter).size() + 1);
      if (!tdoItem.IsNil()) // Nillable
      {
        tdoItem >> *(rstStruct.FdWsSonderdiensteRequestFilter).back();
      }
    }
  }

  return rdoParam;
}

DataObject& operator<<(DataObject& rdoParam, const struct ::FdWsSonderdiensteRequestFilter& rstStruct)
{
  staff::DataObject tdoParamtype = rdoParam.CreateChild("type");
  tdoParamtype.SetNamespaceUriGenPrefix("http://fdisk.at/");
  tdoParamtype << rstStruct.type;
  if (!(rstStruct.value).IsNull()) // Optional
  {
    rdoParam.CreateChild("value", *rstStruct.value).SetNamespaceUriGenPrefix("http://fdisk.at/");
  }
  return rdoParam;
}

const DataObject& operator>>(const DataObject& rdoParam, struct ::FdWsSonderdiensteRequestFilter& rstStruct)
{
  rdoParam.GetChildByLocalName("type") >> rstStruct.type;
  const staff::DataObject& rdoParamvalue = rdoParam.GetChildByLocalNameOpt("value");
  if (!rdoParamvalue.IsNull()) // optional
  {
    rdoParamvalue.GetValue(*rstStruct.value);
  }
  return rdoParam;
}

DataObject& operator<<(DataObject& rdoParam, const struct ::FdWsFWInstanzen144Request& rstStruct)
{
  if (!(rstStruct.filterGroup).IsNull()) // Optional
  {
    staff::DataObject tdoParamfilterGroup = rdoParam.CreateChild("filterGroup");
    tdoParamfilterGroup.SetNamespaceUriGenPrefix("http://fdisk.at/");
    tdoParamfilterGroup << *rstStruct.filterGroup;
  }
  return rdoParam;
}

const DataObject& operator>>(const DataObject& rdoParam, struct ::FdWsFWInstanzen144Request& rstStruct)
{
  const staff::DataObject& rdoParamfilterGroup = rdoParam.GetChildByLocalNameOpt("filterGroup");
  if (!rdoParamfilterGroup.IsNull()) // optional
  {
    rdoParamfilterGroup >> *rstStruct.filterGroup;
  }
  return rdoParam;
}

DataObject& operator<<(DataObject& rdoParam, const struct ::ArrayOfArrayOfFdWsFWInstanzen144RequestFilter& rstStruct)
{
  rdoParam.SetNamespaceUriGenPrefix("http://fdisk.at/");
  for (std::list< staff::Nillable< ::ArrayOfFdWsFWInstanzen144RequestFilter > >::const_iterator itItem = (rstStruct.ArrayOfFdWsFWInstanzen144RequestFilter).begin(), itItemEnd = (rstStruct.ArrayOfFdWsFWInstanzen144RequestFilter).end();
       itItem != itItemEnd; ++itItem)
  {
    if (!((*itItem)).IsNull()) // Nillable
    {
      staff::DataObject tdoParamItem = rdoParam.CreateChild("ArrayOfFdWsFWInstanzen144RequestFilter");
      tdoParamItem.SetNamespaceUriGenPrefix("http://fdisk.at/");
      tdoParamItem << *(*itItem);
    }
    else
    {
      rdoParam.CreateChild("ArrayOfFdWsFWInstanzen144RequestFilter").SetNil();
    }
  }

  return rdoParam;
}

const DataObject& operator>>(const DataObject& rdoParam, struct ::ArrayOfArrayOfFdWsFWInstanzen144RequestFilter& rstStruct)
{
  for (staff::DataObject tdoItem = rdoParam.FirstChild(); !tdoItem.IsNull(); tdoItem.SetNextSibling())
  {
    if (tdoItem.GetLocalName() == "ArrayOfFdWsFWInstanzen144RequestFilter")
    {
      (rstStruct.ArrayOfFdWsFWInstanzen144RequestFilter).resize((rstStruct.ArrayOfFdWsFWInstanzen144RequestFilter).size() + 1);
      if (!tdoItem.IsNil()) // Nillable
      {
        tdoItem >> *(rstStruct.ArrayOfFdWsFWInstanzen144RequestFilter).back();
      }
    }
  }

  return rdoParam;
}

DataObject& operator<<(DataObject& rdoParam, const struct ::ArrayOfFdWsFWInstanzen144RequestFilter& rstStruct)
{
  rdoParam.SetNamespaceUriGenPrefix("http://fdisk.at/");
  for (std::list< staff::Nillable< ::FdWsFWInstanzen144RequestFilter > >::const_iterator itItem = (rstStruct.FdWsFWInstanzen144RequestFilter).begin(), itItemEnd = (rstStruct.FdWsFWInstanzen144RequestFilter).end();
       itItem != itItemEnd; ++itItem)
  {
    if (!((*itItem)).IsNull()) // Nillable
    {
      staff::DataObject tdoParamItem = rdoParam.CreateChild("FdWsFWInstanzen144RequestFilter");
      tdoParamItem.SetNamespaceUriGenPrefix("http://fdisk.at/");
      tdoParamItem << *(*itItem);
    }
    else
    {
      rdoParam.CreateChild("FdWsFWInstanzen144RequestFilter").SetNil();
    }
  }

  return rdoParam;
}

const DataObject& operator>>(const DataObject& rdoParam, struct ::ArrayOfFdWsFWInstanzen144RequestFilter& rstStruct)
{
  for (staff::DataObject tdoItem = rdoParam.FirstChild(); !tdoItem.IsNull(); tdoItem.SetNextSibling())
  {
    if (tdoItem.GetLocalName() == "FdWsFWInstanzen144RequestFilter")
    {
      (rstStruct.FdWsFWInstanzen144RequestFilter).resize((rstStruct.FdWsFWInstanzen144RequestFilter).size() + 1);
      if (!tdoItem.IsNil()) // Nillable
      {
        tdoItem >> *(rstStruct.FdWsFWInstanzen144RequestFilter).back();
      }
    }
  }

  return rdoParam;
}

DataObject& operator<<(DataObject& rdoParam, const struct ::FdWsFWInstanzen144RequestFilter& rstStruct)
{
  staff::DataObject tdoParamtype = rdoParam.CreateChild("type");
  tdoParamtype.SetNamespaceUriGenPrefix("http://fdisk.at/");
  tdoParamtype << rstStruct.type;
  if (!(rstStruct.value).IsNull()) // Optional
  {
    rdoParam.CreateChild("value", *rstStruct.value).SetNamespaceUriGenPrefix("http://fdisk.at/");
  }
  return rdoParam;
}

const DataObject& operator>>(const DataObject& rdoParam, struct ::FdWsFWInstanzen144RequestFilter& rstStruct)
{
  rdoParam.GetChildByLocalName("type") >> rstStruct.type;
  const staff::DataObject& rdoParamvalue = rdoParam.GetChildByLocalNameOpt("value");
  if (!rdoParamvalue.IsNull()) // optional
  {
    rdoParamvalue.GetValue(*rstStruct.value);
  }
  return rdoParam;
}

DataObject& operator<<(DataObject& rdoParam, const struct ::FdWsGeraeteRequest& rstStruct)
{
  if (!(rstStruct.filterGroup).IsNull()) // Optional
  {
    staff::DataObject tdoParamfilterGroup = rdoParam.CreateChild("filterGroup");
    tdoParamfilterGroup.SetNamespaceUriGenPrefix("http://fdisk.at/");
    tdoParamfilterGroup << *rstStruct.filterGroup;
  }
  return rdoParam;
}

const DataObject& operator>>(const DataObject& rdoParam, struct ::FdWsGeraeteRequest& rstStruct)
{
  const staff::DataObject& rdoParamfilterGroup = rdoParam.GetChildByLocalNameOpt("filterGroup");
  if (!rdoParamfilterGroup.IsNull()) // optional
  {
    rdoParamfilterGroup >> *rstStruct.filterGroup;
  }
  return rdoParam;
}

DataObject& operator<<(DataObject& rdoParam, const struct ::ArrayOfArrayOfFdWsGeraeteRequestFilter& rstStruct)
{
  rdoParam.SetNamespaceUriGenPrefix("http://fdisk.at/");
  for (std::list< staff::Nillable< ::ArrayOfFdWsGeraeteRequestFilter > >::const_iterator itItem = (rstStruct.ArrayOfFdWsGeraeteRequestFilter).begin(), itItemEnd = (rstStruct.ArrayOfFdWsGeraeteRequestFilter).end();
       itItem != itItemEnd; ++itItem)
  {
    if (!((*itItem)).IsNull()) // Nillable
    {
      staff::DataObject tdoParamItem = rdoParam.CreateChild("ArrayOfFdWsGeraeteRequestFilter");
      tdoParamItem.SetNamespaceUriGenPrefix("http://fdisk.at/");
      tdoParamItem << *(*itItem);
    }
    else
    {
      rdoParam.CreateChild("ArrayOfFdWsGeraeteRequestFilter").SetNil();
    }
  }

  return rdoParam;
}

const DataObject& operator>>(const DataObject& rdoParam, struct ::ArrayOfArrayOfFdWsGeraeteRequestFilter& rstStruct)
{
  for (staff::DataObject tdoItem = rdoParam.FirstChild(); !tdoItem.IsNull(); tdoItem.SetNextSibling())
  {
    if (tdoItem.GetLocalName() == "ArrayOfFdWsGeraeteRequestFilter")
    {
      (rstStruct.ArrayOfFdWsGeraeteRequestFilter).resize((rstStruct.ArrayOfFdWsGeraeteRequestFilter).size() + 1);
      if (!tdoItem.IsNil()) // Nillable
      {
        tdoItem >> *(rstStruct.ArrayOfFdWsGeraeteRequestFilter).back();
      }
    }
  }

  return rdoParam;
}

DataObject& operator<<(DataObject& rdoParam, const struct ::ArrayOfFdWsGeraeteRequestFilter& rstStruct)
{
  rdoParam.SetNamespaceUriGenPrefix("http://fdisk.at/");
  for (std::list< staff::Nillable< ::FdWsGeraeteRequestFilter > >::const_iterator itItem = (rstStruct.FdWsGeraeteRequestFilter).begin(), itItemEnd = (rstStruct.FdWsGeraeteRequestFilter).end();
       itItem != itItemEnd; ++itItem)
  {
    if (!((*itItem)).IsNull()) // Nillable
    {
      staff::DataObject tdoParamItem = rdoParam.CreateChild("FdWsGeraeteRequestFilter");
      tdoParamItem.SetNamespaceUriGenPrefix("http://fdisk.at/");
      tdoParamItem << *(*itItem);
    }
    else
    {
      rdoParam.CreateChild("FdWsGeraeteRequestFilter").SetNil();
    }
  }

  return rdoParam;
}

const DataObject& operator>>(const DataObject& rdoParam, struct ::ArrayOfFdWsGeraeteRequestFilter& rstStruct)
{
  for (staff::DataObject tdoItem = rdoParam.FirstChild(); !tdoItem.IsNull(); tdoItem.SetNextSibling())
  {
    if (tdoItem.GetLocalName() == "FdWsGeraeteRequestFilter")
    {
      (rstStruct.FdWsGeraeteRequestFilter).resize((rstStruct.FdWsGeraeteRequestFilter).size() + 1);
      if (!tdoItem.IsNil()) // Nillable
      {
        tdoItem >> *(rstStruct.FdWsGeraeteRequestFilter).back();
      }
    }
  }

  return rdoParam;
}

DataObject& operator<<(DataObject& rdoParam, const struct ::FdWsGeraeteRequestFilter& rstStruct)
{
  staff::DataObject tdoParamtype = rdoParam.CreateChild("type");
  tdoParamtype.SetNamespaceUriGenPrefix("http://fdisk.at/");
  tdoParamtype << rstStruct.type;
  if (!(rstStruct.value).IsNull()) // Optional
  {
    rdoParam.CreateChild("value", *rstStruct.value).SetNamespaceUriGenPrefix("http://fdisk.at/");
  }
  return rdoParam;
}

const DataObject& operator>>(const DataObject& rdoParam, struct ::FdWsGeraeteRequestFilter& rstStruct)
{
  rdoParam.GetChildByLocalName("type") >> rstStruct.type;
  const staff::DataObject& rdoParamvalue = rdoParam.GetChildByLocalNameOpt("value");
  if (!rdoParamvalue.IsNull()) // optional
  {
    rdoParamvalue.GetValue(*rstStruct.value);
  }
  return rdoParam;
}

DataObject& operator<<(DataObject& rdoParam, const struct ::FdWsFahrzeugeRequest& rstStruct)
{
  if (!(rstStruct.filterGroup).IsNull()) // Optional
  {
    staff::DataObject tdoParamfilterGroup = rdoParam.CreateChild("filterGroup");
    tdoParamfilterGroup.SetNamespaceUriGenPrefix("http://fdisk.at/");
    tdoParamfilterGroup << *rstStruct.filterGroup;
  }
  return rdoParam;
}

const DataObject& operator>>(const DataObject& rdoParam, struct ::FdWsFahrzeugeRequest& rstStruct)
{
  const staff::DataObject& rdoParamfilterGroup = rdoParam.GetChildByLocalNameOpt("filterGroup");
  if (!rdoParamfilterGroup.IsNull()) // optional
  {
    rdoParamfilterGroup >> *rstStruct.filterGroup;
  }
  return rdoParam;
}

DataObject& operator<<(DataObject& rdoParam, const struct ::ArrayOfArrayOfFdWsFahrzeugeRequestFilter& rstStruct)
{
  rdoParam.SetNamespaceUriGenPrefix("http://fdisk.at/");
  for (std::list< staff::Nillable< ::ArrayOfFdWsFahrzeugeRequestFilter > >::const_iterator itItem = (rstStruct.ArrayOfFdWsFahrzeugeRequestFilter).begin(), itItemEnd = (rstStruct.ArrayOfFdWsFahrzeugeRequestFilter).end();
       itItem != itItemEnd; ++itItem)
  {
    if (!((*itItem)).IsNull()) // Nillable
    {
      staff::DataObject tdoParamItem = rdoParam.CreateChild("ArrayOfFdWsFahrzeugeRequestFilter");
      tdoParamItem.SetNamespaceUriGenPrefix("http://fdisk.at/");
      tdoParamItem << *(*itItem);
    }
    else
    {
      rdoParam.CreateChild("ArrayOfFdWsFahrzeugeRequestFilter").SetNil();
    }
  }

  return rdoParam;
}

const DataObject& operator>>(const DataObject& rdoParam, struct ::ArrayOfArrayOfFdWsFahrzeugeRequestFilter& rstStruct)
{
  for (staff::DataObject tdoItem = rdoParam.FirstChild(); !tdoItem.IsNull(); tdoItem.SetNextSibling())
  {
    if (tdoItem.GetLocalName() == "ArrayOfFdWsFahrzeugeRequestFilter")
    {
      (rstStruct.ArrayOfFdWsFahrzeugeRequestFilter).resize((rstStruct.ArrayOfFdWsFahrzeugeRequestFilter).size() + 1);
      if (!tdoItem.IsNil()) // Nillable
      {
        tdoItem >> *(rstStruct.ArrayOfFdWsFahrzeugeRequestFilter).back();
      }
    }
  }

  return rdoParam;
}

DataObject& operator<<(DataObject& rdoParam, const struct ::ArrayOfFdWsFahrzeugeRequestFilter& rstStruct)
{
  rdoParam.SetNamespaceUriGenPrefix("http://fdisk.at/");
  for (std::list< staff::Nillable< ::FdWsFahrzeugeRequestFilter > >::const_iterator itItem = (rstStruct.FdWsFahrzeugeRequestFilter).begin(), itItemEnd = (rstStruct.FdWsFahrzeugeRequestFilter).end();
       itItem != itItemEnd; ++itItem)
  {
    if (!((*itItem)).IsNull()) // Nillable
    {
      staff::DataObject tdoParamItem = rdoParam.CreateChild("FdWsFahrzeugeRequestFilter");
      tdoParamItem.SetNamespaceUriGenPrefix("http://fdisk.at/");
      tdoParamItem << *(*itItem);
    }
    else
    {
      rdoParam.CreateChild("FdWsFahrzeugeRequestFilter").SetNil();
    }
  }

  return rdoParam;
}

const DataObject& operator>>(const DataObject& rdoParam, struct ::ArrayOfFdWsFahrzeugeRequestFilter& rstStruct)
{
  for (staff::DataObject tdoItem = rdoParam.FirstChild(); !tdoItem.IsNull(); tdoItem.SetNextSibling())
  {
    if (tdoItem.GetLocalName() == "FdWsFahrzeugeRequestFilter")
    {
      (rstStruct.FdWsFahrzeugeRequestFilter).resize((rstStruct.FdWsFahrzeugeRequestFilter).size() + 1);
      if (!tdoItem.IsNil()) // Nillable
      {
        tdoItem >> *(rstStruct.FdWsFahrzeugeRequestFilter).back();
      }
    }
  }

  return rdoParam;
}

DataObject& operator<<(DataObject& rdoParam, const struct ::FdWsFahrzeugeRequestFilter& rstStruct)
{
  staff::DataObject tdoParamtype = rdoParam.CreateChild("type");
  tdoParamtype.SetNamespaceUriGenPrefix("http://fdisk.at/");
  tdoParamtype << rstStruct.type;
  if (!(rstStruct.value).IsNull()) // Optional
  {
    rdoParam.CreateChild("value", *rstStruct.value).SetNamespaceUriGenPrefix("http://fdisk.at/");
  }
  return rdoParam;
}

const DataObject& operator>>(const DataObject& rdoParam, struct ::FdWsFahrzeugeRequestFilter& rstStruct)
{
  rdoParam.GetChildByLocalName("type") >> rstStruct.type;
  const staff::DataObject& rdoParamvalue = rdoParam.GetChildByLocalNameOpt("value");
  if (!rdoParamvalue.IsNull()) // optional
  {
    rdoParamvalue.GetValue(*rstStruct.value);
  }
  return rdoParam;
}

DataObject& operator<<(DataObject& rdoParam, const struct ::FdWsErreichbarkeitenFeuerwehrhaeuserRequest& rstStruct)
{
  if (!(rstStruct.filterGroup).IsNull()) // Optional
  {
    staff::DataObject tdoParamfilterGroup = rdoParam.CreateChild("filterGroup");
    tdoParamfilterGroup.SetNamespaceUriGenPrefix("http://fdisk.at/");
    tdoParamfilterGroup << *rstStruct.filterGroup;
  }
  return rdoParam;
}

const DataObject& operator>>(const DataObject& rdoParam, struct ::FdWsErreichbarkeitenFeuerwehrhaeuserRequest& rstStruct)
{
  const staff::DataObject& rdoParamfilterGroup = rdoParam.GetChildByLocalNameOpt("filterGroup");
  if (!rdoParamfilterGroup.IsNull()) // optional
  {
    rdoParamfilterGroup >> *rstStruct.filterGroup;
  }
  return rdoParam;
}

DataObject& operator<<(DataObject& rdoParam, const struct ::ArrayOfArrayOfFdWsErreichbarkeitenFeuerwehrhaeuserRequestFilter& rstStruct)
{
  rdoParam.SetNamespaceUriGenPrefix("http://fdisk.at/");
  for (std::list< staff::Nillable< ::ArrayOfFdWsErreichbarkeitenFeuerwehrhaeuserRequestFilter > >::const_iterator itItem = (rstStruct.ArrayOfFdWsErreichbarkeitenFeuerwehrhaeuserRequestFilter).begin(), itItemEnd = (rstStruct.ArrayOfFdWsErreichbarkeitenFeuerwehrhaeuserRequestFilter).end();
       itItem != itItemEnd; ++itItem)
  {
    if (!((*itItem)).IsNull()) // Nillable
    {
      staff::DataObject tdoParamItem = rdoParam.CreateChild("ArrayOfFdWsErreichbarkeitenFeuerwehrhaeuserRequestFilter");
      tdoParamItem.SetNamespaceUriGenPrefix("http://fdisk.at/");
      tdoParamItem << *(*itItem);
    }
    else
    {
      rdoParam.CreateChild("ArrayOfFdWsErreichbarkeitenFeuerwehrhaeuserRequestFilter").SetNil();
    }
  }

  return rdoParam;
}

const DataObject& operator>>(const DataObject& rdoParam, struct ::ArrayOfArrayOfFdWsErreichbarkeitenFeuerwehrhaeuserRequestFilter& rstStruct)
{
  for (staff::DataObject tdoItem = rdoParam.FirstChild(); !tdoItem.IsNull(); tdoItem.SetNextSibling())
  {
    if (tdoItem.GetLocalName() == "ArrayOfFdWsErreichbarkeitenFeuerwehrhaeuserRequestFilter")
    {
      (rstStruct.ArrayOfFdWsErreichbarkeitenFeuerwehrhaeuserRequestFilter).resize((rstStruct.ArrayOfFdWsErreichbarkeitenFeuerwehrhaeuserRequestFilter).size() + 1);
      if (!tdoItem.IsNil()) // Nillable
      {
        tdoItem >> *(rstStruct.ArrayOfFdWsErreichbarkeitenFeuerwehrhaeuserRequestFilter).back();
      }
    }
  }

  return rdoParam;
}

DataObject& operator<<(DataObject& rdoParam, const struct ::ArrayOfFdWsErreichbarkeitenFeuerwehrhaeuserRequestFilter& rstStruct)
{
  rdoParam.SetNamespaceUriGenPrefix("http://fdisk.at/");
  for (std::list< staff::Nillable< ::FdWsErreichbarkeitenFeuerwehrhaeuserRequestFilter > >::const_iterator itItem = (rstStruct.FdWsErreichbarkeitenFeuerwehrhaeuserRequestFilter).begin(), itItemEnd = (rstStruct.FdWsErreichbarkeitenFeuerwehrhaeuserRequestFilter).end();
       itItem != itItemEnd; ++itItem)
  {
    if (!((*itItem)).IsNull()) // Nillable
    {
      staff::DataObject tdoParamItem = rdoParam.CreateChild("FdWsErreichbarkeitenFeuerwehrhaeuserRequestFilter");
      tdoParamItem.SetNamespaceUriGenPrefix("http://fdisk.at/");
      tdoParamItem << *(*itItem);
    }
    else
    {
      rdoParam.CreateChild("FdWsErreichbarkeitenFeuerwehrhaeuserRequestFilter").SetNil();
    }
  }

  return rdoParam;
}

const DataObject& operator>>(const DataObject& rdoParam, struct ::ArrayOfFdWsErreichbarkeitenFeuerwehrhaeuserRequestFilter& rstStruct)
{
  for (staff::DataObject tdoItem = rdoParam.FirstChild(); !tdoItem.IsNull(); tdoItem.SetNextSibling())
  {
    if (tdoItem.GetLocalName() == "FdWsErreichbarkeitenFeuerwehrhaeuserRequestFilter")
    {
      (rstStruct.FdWsErreichbarkeitenFeuerwehrhaeuserRequestFilter).resize((rstStruct.FdWsErreichbarkeitenFeuerwehrhaeuserRequestFilter).size() + 1);
      if (!tdoItem.IsNil()) // Nillable
      {
        tdoItem >> *(rstStruct.FdWsErreichbarkeitenFeuerwehrhaeuserRequestFilter).back();
      }
    }
  }

  return rdoParam;
}

DataObject& operator<<(DataObject& rdoParam, const struct ::FdWsErreichbarkeitenFeuerwehrhaeuserRequestFilter& rstStruct)
{
  staff::DataObject tdoParamtype = rdoParam.CreateChild("type");
  tdoParamtype.SetNamespaceUriGenPrefix("http://fdisk.at/");
  tdoParamtype << rstStruct.type;
  if (!(rstStruct.value).IsNull()) // Optional
  {
    rdoParam.CreateChild("value", *rstStruct.value).SetNamespaceUriGenPrefix("http://fdisk.at/");
  }
  return rdoParam;
}

const DataObject& operator>>(const DataObject& rdoParam, struct ::FdWsErreichbarkeitenFeuerwehrhaeuserRequestFilter& rstStruct)
{
  rdoParam.GetChildByLocalName("type") >> rstStruct.type;
  const staff::DataObject& rdoParamvalue = rdoParam.GetChildByLocalNameOpt("value");
  if (!rdoParamvalue.IsNull()) // optional
  {
    rdoParamvalue.GetValue(*rstStruct.value);
  }
  return rdoParam;
}

DataObject& operator<<(DataObject& rdoParam, const struct ::FdWsErreichbarkeitenPersonenRequest& rstStruct)
{
  if (!(rstStruct.filterGroup).IsNull()) // Optional
  {
    staff::DataObject tdoParamfilterGroup = rdoParam.CreateChild("filterGroup");
    tdoParamfilterGroup.SetNamespaceUriGenPrefix("http://fdisk.at/");
    tdoParamfilterGroup << *rstStruct.filterGroup;
  }
  return rdoParam;
}

const DataObject& operator>>(const DataObject& rdoParam, struct ::FdWsErreichbarkeitenPersonenRequest& rstStruct)
{
  const staff::DataObject& rdoParamfilterGroup = rdoParam.GetChildByLocalNameOpt("filterGroup");
  if (!rdoParamfilterGroup.IsNull()) // optional
  {
    rdoParamfilterGroup >> *rstStruct.filterGroup;
  }
  return rdoParam;
}

DataObject& operator<<(DataObject& rdoParam, const struct ::ArrayOfArrayOfFdWsErreichbarkeitenPersonenRequestFilter& rstStruct)
{
  rdoParam.SetNamespaceUriGenPrefix("http://fdisk.at/");
  for (std::list< staff::Nillable< ::ArrayOfFdWsErreichbarkeitenPersonenRequestFilter > >::const_iterator itItem = (rstStruct.ArrayOfFdWsErreichbarkeitenPersonenRequestFilter).begin(), itItemEnd = (rstStruct.ArrayOfFdWsErreichbarkeitenPersonenRequestFilter).end();
       itItem != itItemEnd; ++itItem)
  {
    if (!((*itItem)).IsNull()) // Nillable
    {
      staff::DataObject tdoParamItem = rdoParam.CreateChild("ArrayOfFdWsErreichbarkeitenPersonenRequestFilter");
      tdoParamItem.SetNamespaceUriGenPrefix("http://fdisk.at/");
      tdoParamItem << *(*itItem);
    }
    else
    {
      rdoParam.CreateChild("ArrayOfFdWsErreichbarkeitenPersonenRequestFilter").SetNil();
    }
  }

  return rdoParam;
}

const DataObject& operator>>(const DataObject& rdoParam, struct ::ArrayOfArrayOfFdWsErreichbarkeitenPersonenRequestFilter& rstStruct)
{
  for (staff::DataObject tdoItem = rdoParam.FirstChild(); !tdoItem.IsNull(); tdoItem.SetNextSibling())
  {
    if (tdoItem.GetLocalName() == "ArrayOfFdWsErreichbarkeitenPersonenRequestFilter")
    {
      (rstStruct.ArrayOfFdWsErreichbarkeitenPersonenRequestFilter).resize((rstStruct.ArrayOfFdWsErreichbarkeitenPersonenRequestFilter).size() + 1);
      if (!tdoItem.IsNil()) // Nillable
      {
        tdoItem >> *(rstStruct.ArrayOfFdWsErreichbarkeitenPersonenRequestFilter).back();
      }
    }
  }

  return rdoParam;
}

DataObject& operator<<(DataObject& rdoParam, const struct ::ArrayOfFdWsErreichbarkeitenPersonenRequestFilter& rstStruct)
{
  rdoParam.SetNamespaceUriGenPrefix("http://fdisk.at/");
  for (std::list< staff::Nillable< ::FdWsErreichbarkeitenPersonenRequestFilter > >::const_iterator itItem = (rstStruct.FdWsErreichbarkeitenPersonenRequestFilter).begin(), itItemEnd = (rstStruct.FdWsErreichbarkeitenPersonenRequestFilter).end();
       itItem != itItemEnd; ++itItem)
  {
    if (!((*itItem)).IsNull()) // Nillable
    {
      staff::DataObject tdoParamItem = rdoParam.CreateChild("FdWsErreichbarkeitenPersonenRequestFilter");
      tdoParamItem.SetNamespaceUriGenPrefix("http://fdisk.at/");
      tdoParamItem << *(*itItem);
    }
    else
    {
      rdoParam.CreateChild("FdWsErreichbarkeitenPersonenRequestFilter").SetNil();
    }
  }

  return rdoParam;
}

const DataObject& operator>>(const DataObject& rdoParam, struct ::ArrayOfFdWsErreichbarkeitenPersonenRequestFilter& rstStruct)
{
  for (staff::DataObject tdoItem = rdoParam.FirstChild(); !tdoItem.IsNull(); tdoItem.SetNextSibling())
  {
    if (tdoItem.GetLocalName() == "FdWsErreichbarkeitenPersonenRequestFilter")
    {
      (rstStruct.FdWsErreichbarkeitenPersonenRequestFilter).resize((rstStruct.FdWsErreichbarkeitenPersonenRequestFilter).size() + 1);
      if (!tdoItem.IsNil()) // Nillable
      {
        tdoItem >> *(rstStruct.FdWsErreichbarkeitenPersonenRequestFilter).back();
      }
    }
  }

  return rdoParam;
}

DataObject& operator<<(DataObject& rdoParam, const struct ::FdWsErreichbarkeitenPersonenRequestFilter& rstStruct)
{
  staff::DataObject tdoParamtype = rdoParam.CreateChild("type");
  tdoParamtype.SetNamespaceUriGenPrefix("http://fdisk.at/");
  tdoParamtype << rstStruct.type;
  if (!(rstStruct.value).IsNull()) // Optional
  {
    rdoParam.CreateChild("value", *rstStruct.value).SetNamespaceUriGenPrefix("http://fdisk.at/");
  }
  return rdoParam;
}

const DataObject& operator>>(const DataObject& rdoParam, struct ::FdWsErreichbarkeitenPersonenRequestFilter& rstStruct)
{
  rdoParam.GetChildByLocalName("type") >> rstStruct.type;
  const staff::DataObject& rdoParamvalue = rdoParam.GetChildByLocalNameOpt("value");
  if (!rdoParamvalue.IsNull()) // optional
  {
    rdoParamvalue.GetValue(*rstStruct.value);
  }
  return rdoParam;
}

DataObject& operator<<(DataObject& rdoParam, const struct ::FdWsFeuerwehrhaeuserRequest& rstStruct)
{
  if (!(rstStruct.filterGroup).IsNull()) // Optional
  {
    staff::DataObject tdoParamfilterGroup = rdoParam.CreateChild("filterGroup");
    tdoParamfilterGroup.SetNamespaceUriGenPrefix("http://fdisk.at/");
    tdoParamfilterGroup << *rstStruct.filterGroup;
  }
  return rdoParam;
}

const DataObject& operator>>(const DataObject& rdoParam, struct ::FdWsFeuerwehrhaeuserRequest& rstStruct)
{
  const staff::DataObject& rdoParamfilterGroup = rdoParam.GetChildByLocalNameOpt("filterGroup");
  if (!rdoParamfilterGroup.IsNull()) // optional
  {
    rdoParamfilterGroup >> *rstStruct.filterGroup;
  }
  return rdoParam;
}

DataObject& operator<<(DataObject& rdoParam, const struct ::ArrayOfArrayOfFdWsFeuerwehrhaeuserRequestFilter& rstStruct)
{
  rdoParam.SetNamespaceUriGenPrefix("http://fdisk.at/");
  for (std::list< staff::Nillable< ::ArrayOfFdWsFeuerwehrhaeuserRequestFilter > >::const_iterator itItem = (rstStruct.ArrayOfFdWsFeuerwehrhaeuserRequestFilter).begin(), itItemEnd = (rstStruct.ArrayOfFdWsFeuerwehrhaeuserRequestFilter).end();
       itItem != itItemEnd; ++itItem)
  {
    if (!((*itItem)).IsNull()) // Nillable
    {
      staff::DataObject tdoParamItem = rdoParam.CreateChild("ArrayOfFdWsFeuerwehrhaeuserRequestFilter");
      tdoParamItem.SetNamespaceUriGenPrefix("http://fdisk.at/");
      tdoParamItem << *(*itItem);
    }
    else
    {
      rdoParam.CreateChild("ArrayOfFdWsFeuerwehrhaeuserRequestFilter").SetNil();
    }
  }

  return rdoParam;
}

const DataObject& operator>>(const DataObject& rdoParam, struct ::ArrayOfArrayOfFdWsFeuerwehrhaeuserRequestFilter& rstStruct)
{
  for (staff::DataObject tdoItem = rdoParam.FirstChild(); !tdoItem.IsNull(); tdoItem.SetNextSibling())
  {
    if (tdoItem.GetLocalName() == "ArrayOfFdWsFeuerwehrhaeuserRequestFilter")
    {
      (rstStruct.ArrayOfFdWsFeuerwehrhaeuserRequestFilter).resize((rstStruct.ArrayOfFdWsFeuerwehrhaeuserRequestFilter).size() + 1);
      if (!tdoItem.IsNil()) // Nillable
      {
        tdoItem >> *(rstStruct.ArrayOfFdWsFeuerwehrhaeuserRequestFilter).back();
      }
    }
  }

  return rdoParam;
}

DataObject& operator<<(DataObject& rdoParam, const struct ::ArrayOfFdWsFeuerwehrhaeuserRequestFilter& rstStruct)
{
  rdoParam.SetNamespaceUriGenPrefix("http://fdisk.at/");
  for (std::list< staff::Nillable< ::FdWsFeuerwehrhaeuserRequestFilter > >::const_iterator itItem = (rstStruct.FdWsFeuerwehrhaeuserRequestFilter).begin(), itItemEnd = (rstStruct.FdWsFeuerwehrhaeuserRequestFilter).end();
       itItem != itItemEnd; ++itItem)
  {
    if (!((*itItem)).IsNull()) // Nillable
    {
      staff::DataObject tdoParamItem = rdoParam.CreateChild("FdWsFeuerwehrhaeuserRequestFilter");
      tdoParamItem.SetNamespaceUriGenPrefix("http://fdisk.at/");
      tdoParamItem << *(*itItem);
    }
    else
    {
      rdoParam.CreateChild("FdWsFeuerwehrhaeuserRequestFilter").SetNil();
    }
  }

  return rdoParam;
}

const DataObject& operator>>(const DataObject& rdoParam, struct ::ArrayOfFdWsFeuerwehrhaeuserRequestFilter& rstStruct)
{
  for (staff::DataObject tdoItem = rdoParam.FirstChild(); !tdoItem.IsNull(); tdoItem.SetNextSibling())
  {
    if (tdoItem.GetLocalName() == "FdWsFeuerwehrhaeuserRequestFilter")
    {
      (rstStruct.FdWsFeuerwehrhaeuserRequestFilter).resize((rstStruct.FdWsFeuerwehrhaeuserRequestFilter).size() + 1);
      if (!tdoItem.IsNil()) // Nillable
      {
        tdoItem >> *(rstStruct.FdWsFeuerwehrhaeuserRequestFilter).back();
      }
    }
  }

  return rdoParam;
}

DataObject& operator<<(DataObject& rdoParam, const struct ::FdWsFeuerwehrhaeuserRequestFilter& rstStruct)
{
  staff::DataObject tdoParamtype = rdoParam.CreateChild("type");
  tdoParamtype.SetNamespaceUriGenPrefix("http://fdisk.at/");
  tdoParamtype << rstStruct.type;
  if (!(rstStruct.value).IsNull()) // Optional
  {
    rdoParam.CreateChild("value", *rstStruct.value).SetNamespaceUriGenPrefix("http://fdisk.at/");
  }
  return rdoParam;
}

const DataObject& operator>>(const DataObject& rdoParam, struct ::FdWsFeuerwehrhaeuserRequestFilter& rstStruct)
{
  rdoParam.GetChildByLocalName("type") >> rstStruct.type;
  const staff::DataObject& rdoParamvalue = rdoParam.GetChildByLocalNameOpt("value");
  if (!rdoParamvalue.IsNull()) // optional
  {
    rdoParamvalue.GetValue(*rstStruct.value);
  }
  return rdoParam;
}

DataObject& operator<<(DataObject& rdoParam, const struct ::FdWsFeuerwehrGemeindenRequest& rstStruct)
{
  if (!(rstStruct.filterGroup).IsNull()) // Optional
  {
    staff::DataObject tdoParamfilterGroup = rdoParam.CreateChild("filterGroup");
    tdoParamfilterGroup.SetNamespaceUriGenPrefix("http://fdisk.at/");
    tdoParamfilterGroup << *rstStruct.filterGroup;
  }
  return rdoParam;
}

const DataObject& operator>>(const DataObject& rdoParam, struct ::FdWsFeuerwehrGemeindenRequest& rstStruct)
{
  const staff::DataObject& rdoParamfilterGroup = rdoParam.GetChildByLocalNameOpt("filterGroup");
  if (!rdoParamfilterGroup.IsNull()) // optional
  {
    rdoParamfilterGroup >> *rstStruct.filterGroup;
  }
  return rdoParam;
}

DataObject& operator<<(DataObject& rdoParam, const struct ::ArrayOfArrayOfFdWsFeuerwehrGemeindenRequestFilter& rstStruct)
{
  rdoParam.SetNamespaceUriGenPrefix("http://fdisk.at/");
  for (std::list< staff::Nillable< ::ArrayOfFdWsFeuerwehrGemeindenRequestFilter > >::const_iterator itItem = (rstStruct.ArrayOfFdWsFeuerwehrGemeindenRequestFilter).begin(), itItemEnd = (rstStruct.ArrayOfFdWsFeuerwehrGemeindenRequestFilter).end();
       itItem != itItemEnd; ++itItem)
  {
    if (!((*itItem)).IsNull()) // Nillable
    {
      staff::DataObject tdoParamItem = rdoParam.CreateChild("ArrayOfFdWsFeuerwehrGemeindenRequestFilter");
      tdoParamItem.SetNamespaceUriGenPrefix("http://fdisk.at/");
      tdoParamItem << *(*itItem);
    }
    else
    {
      rdoParam.CreateChild("ArrayOfFdWsFeuerwehrGemeindenRequestFilter").SetNil();
    }
  }

  return rdoParam;
}

const DataObject& operator>>(const DataObject& rdoParam, struct ::ArrayOfArrayOfFdWsFeuerwehrGemeindenRequestFilter& rstStruct)
{
  for (staff::DataObject tdoItem = rdoParam.FirstChild(); !tdoItem.IsNull(); tdoItem.SetNextSibling())
  {
    if (tdoItem.GetLocalName() == "ArrayOfFdWsFeuerwehrGemeindenRequestFilter")
    {
      (rstStruct.ArrayOfFdWsFeuerwehrGemeindenRequestFilter).resize((rstStruct.ArrayOfFdWsFeuerwehrGemeindenRequestFilter).size() + 1);
      if (!tdoItem.IsNil()) // Nillable
      {
        tdoItem >> *(rstStruct.ArrayOfFdWsFeuerwehrGemeindenRequestFilter).back();
      }
    }
  }

  return rdoParam;
}

DataObject& operator<<(DataObject& rdoParam, const struct ::ArrayOfFdWsFeuerwehrGemeindenRequestFilter& rstStruct)
{
  rdoParam.SetNamespaceUriGenPrefix("http://fdisk.at/");
  for (std::list< staff::Nillable< ::FdWsFeuerwehrGemeindenRequestFilter > >::const_iterator itItem = (rstStruct.FdWsFeuerwehrGemeindenRequestFilter).begin(), itItemEnd = (rstStruct.FdWsFeuerwehrGemeindenRequestFilter).end();
       itItem != itItemEnd; ++itItem)
  {
    if (!((*itItem)).IsNull()) // Nillable
    {
      staff::DataObject tdoParamItem = rdoParam.CreateChild("FdWsFeuerwehrGemeindenRequestFilter");
      tdoParamItem.SetNamespaceUriGenPrefix("http://fdisk.at/");
      tdoParamItem << *(*itItem);
    }
    else
    {
      rdoParam.CreateChild("FdWsFeuerwehrGemeindenRequestFilter").SetNil();
    }
  }

  return rdoParam;
}

const DataObject& operator>>(const DataObject& rdoParam, struct ::ArrayOfFdWsFeuerwehrGemeindenRequestFilter& rstStruct)
{
  for (staff::DataObject tdoItem = rdoParam.FirstChild(); !tdoItem.IsNull(); tdoItem.SetNextSibling())
  {
    if (tdoItem.GetLocalName() == "FdWsFeuerwehrGemeindenRequestFilter")
    {
      (rstStruct.FdWsFeuerwehrGemeindenRequestFilter).resize((rstStruct.FdWsFeuerwehrGemeindenRequestFilter).size() + 1);
      if (!tdoItem.IsNil()) // Nillable
      {
        tdoItem >> *(rstStruct.FdWsFeuerwehrGemeindenRequestFilter).back();
      }
    }
  }

  return rdoParam;
}

DataObject& operator<<(DataObject& rdoParam, const struct ::FdWsFeuerwehrGemeindenRequestFilter& rstStruct)
{
  staff::DataObject tdoParamtype = rdoParam.CreateChild("type");
  tdoParamtype.SetNamespaceUriGenPrefix("http://fdisk.at/");
  tdoParamtype << rstStruct.type;
  if (!(rstStruct.value).IsNull()) // Optional
  {
    rdoParam.CreateChild("value", *rstStruct.value).SetNamespaceUriGenPrefix("http://fdisk.at/");
  }
  return rdoParam;
}

const DataObject& operator>>(const DataObject& rdoParam, struct ::FdWsFeuerwehrGemeindenRequestFilter& rstStruct)
{
  rdoParam.GetChildByLocalName("type") >> rstStruct.type;
  const staff::DataObject& rdoParamvalue = rdoParam.GetChildByLocalNameOpt("value");
  if (!rdoParamvalue.IsNull()) // optional
  {
    rdoParamvalue.GetValue(*rstStruct.value);
  }
  return rdoParam;
}

DataObject& operator<<(DataObject& rdoParam, const struct ::FdWsWasserdienstleistungsbewerbeRequest& rstStruct)
{
  if (!(rstStruct.filterGroup).IsNull()) // Optional
  {
    staff::DataObject tdoParamfilterGroup = rdoParam.CreateChild("filterGroup");
    tdoParamfilterGroup.SetNamespaceUriGenPrefix("http://fdisk.at/");
    tdoParamfilterGroup << *rstStruct.filterGroup;
  }
  return rdoParam;
}

const DataObject& operator>>(const DataObject& rdoParam, struct ::FdWsWasserdienstleistungsbewerbeRequest& rstStruct)
{
  const staff::DataObject& rdoParamfilterGroup = rdoParam.GetChildByLocalNameOpt("filterGroup");
  if (!rdoParamfilterGroup.IsNull()) // optional
  {
    rdoParamfilterGroup >> *rstStruct.filterGroup;
  }
  return rdoParam;
}

DataObject& operator<<(DataObject& rdoParam, const struct ::ArrayOfArrayOfFdWsWasserdienstleistungsbewerbeRequestFilter& rstStruct)
{
  rdoParam.SetNamespaceUriGenPrefix("http://fdisk.at/");
  for (std::list< staff::Nillable< ::ArrayOfFdWsWasserdienstleistungsbewerbeRequestFilter > >::const_iterator itItem = (rstStruct.ArrayOfFdWsWasserdienstleistungsbewerbeRequestFilter).begin(), itItemEnd = (rstStruct.ArrayOfFdWsWasserdienstleistungsbewerbeRequestFilter).end();
       itItem != itItemEnd; ++itItem)
  {
    if (!((*itItem)).IsNull()) // Nillable
    {
      staff::DataObject tdoParamItem = rdoParam.CreateChild("ArrayOfFdWsWasserdienstleistungsbewerbeRequestFilter");
      tdoParamItem.SetNamespaceUriGenPrefix("http://fdisk.at/");
      tdoParamItem << *(*itItem);
    }
    else
    {
      rdoParam.CreateChild("ArrayOfFdWsWasserdienstleistungsbewerbeRequestFilter").SetNil();
    }
  }

  return rdoParam;
}

const DataObject& operator>>(const DataObject& rdoParam, struct ::ArrayOfArrayOfFdWsWasserdienstleistungsbewerbeRequestFilter& rstStruct)
{
  for (staff::DataObject tdoItem = rdoParam.FirstChild(); !tdoItem.IsNull(); tdoItem.SetNextSibling())
  {
    if (tdoItem.GetLocalName() == "ArrayOfFdWsWasserdienstleistungsbewerbeRequestFilter")
    {
      (rstStruct.ArrayOfFdWsWasserdienstleistungsbewerbeRequestFilter).resize((rstStruct.ArrayOfFdWsWasserdienstleistungsbewerbeRequestFilter).size() + 1);
      if (!tdoItem.IsNil()) // Nillable
      {
        tdoItem >> *(rstStruct.ArrayOfFdWsWasserdienstleistungsbewerbeRequestFilter).back();
      }
    }
  }

  return rdoParam;
}

DataObject& operator<<(DataObject& rdoParam, const struct ::ArrayOfFdWsWasserdienstleistungsbewerbeRequestFilter& rstStruct)
{
  rdoParam.SetNamespaceUriGenPrefix("http://fdisk.at/");
  for (std::list< staff::Nillable< ::FdWsWasserdienstleistungsbewerbeRequestFilter > >::const_iterator itItem = (rstStruct.FdWsWasserdienstleistungsbewerbeRequestFilter).begin(), itItemEnd = (rstStruct.FdWsWasserdienstleistungsbewerbeRequestFilter).end();
       itItem != itItemEnd; ++itItem)
  {
    if (!((*itItem)).IsNull()) // Nillable
    {
      staff::DataObject tdoParamItem = rdoParam.CreateChild("FdWsWasserdienstleistungsbewerbeRequestFilter");
      tdoParamItem.SetNamespaceUriGenPrefix("http://fdisk.at/");
      tdoParamItem << *(*itItem);
    }
    else
    {
      rdoParam.CreateChild("FdWsWasserdienstleistungsbewerbeRequestFilter").SetNil();
    }
  }

  return rdoParam;
}

const DataObject& operator>>(const DataObject& rdoParam, struct ::ArrayOfFdWsWasserdienstleistungsbewerbeRequestFilter& rstStruct)
{
  for (staff::DataObject tdoItem = rdoParam.FirstChild(); !tdoItem.IsNull(); tdoItem.SetNextSibling())
  {
    if (tdoItem.GetLocalName() == "FdWsWasserdienstleistungsbewerbeRequestFilter")
    {
      (rstStruct.FdWsWasserdienstleistungsbewerbeRequestFilter).resize((rstStruct.FdWsWasserdienstleistungsbewerbeRequestFilter).size() + 1);
      if (!tdoItem.IsNil()) // Nillable
      {
        tdoItem >> *(rstStruct.FdWsWasserdienstleistungsbewerbeRequestFilter).back();
      }
    }
  }

  return rdoParam;
}

DataObject& operator<<(DataObject& rdoParam, const struct ::FdWsWasserdienstleistungsbewerbeRequestFilter& rstStruct)
{
  staff::DataObject tdoParamtype = rdoParam.CreateChild("type");
  tdoParamtype.SetNamespaceUriGenPrefix("http://fdisk.at/");
  tdoParamtype << rstStruct.type;
  if (!(rstStruct.value).IsNull()) // Optional
  {
    rdoParam.CreateChild("value", *rstStruct.value).SetNamespaceUriGenPrefix("http://fdisk.at/");
  }
  return rdoParam;
}

const DataObject& operator>>(const DataObject& rdoParam, struct ::FdWsWasserdienstleistungsbewerbeRequestFilter& rstStruct)
{
  rdoParam.GetChildByLocalName("type") >> rstStruct.type;
  const staff::DataObject& rdoParamvalue = rdoParam.GetChildByLocalNameOpt("value");
  if (!rdoParamvalue.IsNull()) // optional
  {
    rdoParamvalue.GetValue(*rstStruct.value);
  }
  return rdoParam;
}

DataObject& operator<<(DataObject& rdoParam, const struct ::FdWsFeuerwehrleistungsbewerbeRequest& rstStruct)
{
  if (!(rstStruct.filterGroup).IsNull()) // Optional
  {
    staff::DataObject tdoParamfilterGroup = rdoParam.CreateChild("filterGroup");
    tdoParamfilterGroup.SetNamespaceUriGenPrefix("http://fdisk.at/");
    tdoParamfilterGroup << *rstStruct.filterGroup;
  }
  return rdoParam;
}

const DataObject& operator>>(const DataObject& rdoParam, struct ::FdWsFeuerwehrleistungsbewerbeRequest& rstStruct)
{
  const staff::DataObject& rdoParamfilterGroup = rdoParam.GetChildByLocalNameOpt("filterGroup");
  if (!rdoParamfilterGroup.IsNull()) // optional
  {
    rdoParamfilterGroup >> *rstStruct.filterGroup;
  }
  return rdoParam;
}

DataObject& operator<<(DataObject& rdoParam, const struct ::ArrayOfArrayOfFdWsFeuerwehrleistungsbewerbeRequestFilter& rstStruct)
{
  rdoParam.SetNamespaceUriGenPrefix("http://fdisk.at/");
  for (std::list< staff::Nillable< ::ArrayOfFdWsFeuerwehrleistungsbewerbeRequestFilter > >::const_iterator itItem = (rstStruct.ArrayOfFdWsFeuerwehrleistungsbewerbeRequestFilter).begin(), itItemEnd = (rstStruct.ArrayOfFdWsFeuerwehrleistungsbewerbeRequestFilter).end();
       itItem != itItemEnd; ++itItem)
  {
    if (!((*itItem)).IsNull()) // Nillable
    {
      staff::DataObject tdoParamItem = rdoParam.CreateChild("ArrayOfFdWsFeuerwehrleistungsbewerbeRequestFilter");
      tdoParamItem.SetNamespaceUriGenPrefix("http://fdisk.at/");
      tdoParamItem << *(*itItem);
    }
    else
    {
      rdoParam.CreateChild("ArrayOfFdWsFeuerwehrleistungsbewerbeRequestFilter").SetNil();
    }
  }

  return rdoParam;
}

const DataObject& operator>>(const DataObject& rdoParam, struct ::ArrayOfArrayOfFdWsFeuerwehrleistungsbewerbeRequestFilter& rstStruct)
{
  for (staff::DataObject tdoItem = rdoParam.FirstChild(); !tdoItem.IsNull(); tdoItem.SetNextSibling())
  {
    if (tdoItem.GetLocalName() == "ArrayOfFdWsFeuerwehrleistungsbewerbeRequestFilter")
    {
      (rstStruct.ArrayOfFdWsFeuerwehrleistungsbewerbeRequestFilter).resize((rstStruct.ArrayOfFdWsFeuerwehrleistungsbewerbeRequestFilter).size() + 1);
      if (!tdoItem.IsNil()) // Nillable
      {
        tdoItem >> *(rstStruct.ArrayOfFdWsFeuerwehrleistungsbewerbeRequestFilter).back();
      }
    }
  }

  return rdoParam;
}

DataObject& operator<<(DataObject& rdoParam, const struct ::ArrayOfFdWsFeuerwehrleistungsbewerbeRequestFilter& rstStruct)
{
  rdoParam.SetNamespaceUriGenPrefix("http://fdisk.at/");
  for (std::list< staff::Nillable< ::FdWsFeuerwehrleistungsbewerbeRequestFilter > >::const_iterator itItem = (rstStruct.FdWsFeuerwehrleistungsbewerbeRequestFilter).begin(), itItemEnd = (rstStruct.FdWsFeuerwehrleistungsbewerbeRequestFilter).end();
       itItem != itItemEnd; ++itItem)
  {
    if (!((*itItem)).IsNull()) // Nillable
    {
      staff::DataObject tdoParamItem = rdoParam.CreateChild("FdWsFeuerwehrleistungsbewerbeRequestFilter");
      tdoParamItem.SetNamespaceUriGenPrefix("http://fdisk.at/");
      tdoParamItem << *(*itItem);
    }
    else
    {
      rdoParam.CreateChild("FdWsFeuerwehrleistungsbewerbeRequestFilter").SetNil();
    }
  }

  return rdoParam;
}

const DataObject& operator>>(const DataObject& rdoParam, struct ::ArrayOfFdWsFeuerwehrleistungsbewerbeRequestFilter& rstStruct)
{
  for (staff::DataObject tdoItem = rdoParam.FirstChild(); !tdoItem.IsNull(); tdoItem.SetNextSibling())
  {
    if (tdoItem.GetLocalName() == "FdWsFeuerwehrleistungsbewerbeRequestFilter")
    {
      (rstStruct.FdWsFeuerwehrleistungsbewerbeRequestFilter).resize((rstStruct.FdWsFeuerwehrleistungsbewerbeRequestFilter).size() + 1);
      if (!tdoItem.IsNil()) // Nillable
      {
        tdoItem >> *(rstStruct.FdWsFeuerwehrleistungsbewerbeRequestFilter).back();
      }
    }
  }

  return rdoParam;
}

DataObject& operator<<(DataObject& rdoParam, const struct ::FdWsFeuerwehrleistungsbewerbeRequestFilter& rstStruct)
{
  staff::DataObject tdoParamtype = rdoParam.CreateChild("type");
  tdoParamtype.SetNamespaceUriGenPrefix("http://fdisk.at/");
  tdoParamtype << rstStruct.type;
  if (!(rstStruct.value).IsNull()) // Optional
  {
    rdoParam.CreateChild("value", *rstStruct.value).SetNamespaceUriGenPrefix("http://fdisk.at/");
  }
  return rdoParam;
}

const DataObject& operator>>(const DataObject& rdoParam, struct ::FdWsFeuerwehrleistungsbewerbeRequestFilter& rstStruct)
{
  rdoParam.GetChildByLocalName("type") >> rstStruct.type;
  const staff::DataObject& rdoParamvalue = rdoParam.GetChildByLocalNameOpt("value");
  if (!rdoParamvalue.IsNull()) // optional
  {
    rdoParamvalue.GetValue(*rstStruct.value);
  }
  return rdoParam;
}

DataObject& operator<<(DataObject& rdoParam, const struct ::FdWsPrepareDataReturn& rstStruct)
{
  rdoParam.CreateChild("resultCount", rstStruct.resultCount).SetNamespaceUriGenPrefix("http://fdisk.at/");
  if (!(rstStruct.statusMessage).IsNull()) // Optional
  {
    rdoParam.CreateChild("statusMessage", *rstStruct.statusMessage).SetNamespaceUriGenPrefix("http://fdisk.at/");
  }
  staff::DataObject tdoParamstatusCode = rdoParam.CreateChild("statusCode");
  tdoParamstatusCode.SetNamespaceUriGenPrefix("http://fdisk.at/");
  tdoParamstatusCode << rstStruct.statusCode;
  return rdoParam;
}

const DataObject& operator>>(const DataObject& rdoParam, struct ::FdWsPrepareDataReturn& rstStruct)
{
  rdoParam.GetChildValueByLocalName("resultCount", rstStruct.resultCount);
  const staff::DataObject& rdoParamstatusMessage = rdoParam.GetChildByLocalNameOpt("statusMessage");
  if (!rdoParamstatusMessage.IsNull()) // optional
  {
    rdoParamstatusMessage.GetValue(*rstStruct.statusMessage);
  }
  rdoParam.GetChildByLocalName("statusCode") >> rstStruct.statusCode;
  return rdoParam;
}

DataObject& operator<<(DataObject& rdoParam, const struct ::FdWsGetNextDataBlockReturn& rstStruct)
{
  if (!(rstStruct.statusMessage).IsNull()) // Optional
  {
    rdoParam.CreateChild("statusMessage", *rstStruct.statusMessage).SetNamespaceUriGenPrefix("http://fdisk.at/");
  }
  staff::DataObject tdoParamstatusCode = rdoParam.CreateChild("statusCode");
  tdoParamstatusCode.SetNamespaceUriGenPrefix("http://fdisk.at/");
  tdoParamstatusCode << rstStruct.statusCode;
  if (!(rstStruct.fwMitglieder144).IsNull()) // Optional
  {
    staff::DataObject tdoParamfwMitglieder144 = rdoParam.CreateChild("fwMitglieder144");
    tdoParamfwMitglieder144.SetNamespaceUriGenPrefix("http://fdisk.at/");
    tdoParamfwMitglieder144 << *rstStruct.fwMitglieder144;
  }
  if (!(rstStruct.mitglieder).IsNull()) // Optional
  {
    staff::DataObject tdoParammitglieder = rdoParam.CreateChild("mitglieder");
    tdoParammitglieder.SetNamespaceUriGenPrefix("http://fdisk.at/");
    tdoParammitglieder << *rstStruct.mitglieder;
  }
  if (!(rstStruct.ausbildungen).IsNull()) // Optional
  {
    staff::DataObject tdoParamausbildungen = rdoParam.CreateChild("ausbildungen");
    tdoParamausbildungen.SetNamespaceUriGenPrefix("http://fdisk.at/");
    tdoParamausbildungen << *rstStruct.ausbildungen;
  }
  if (!(rstStruct.kurse).IsNull()) // Optional
  {
    staff::DataObject tdoParamkurse = rdoParam.CreateChild("kurse");
    tdoParamkurse.SetNamespaceUriGenPrefix("http://fdisk.at/");
    tdoParamkurse << *rstStruct.kurse;
  }
  if (!(rstStruct.dienstgrade).IsNull()) // Optional
  {
    staff::DataObject tdoParamdienstgrade = rdoParam.CreateChild("dienstgrade");
    tdoParamdienstgrade.SetNamespaceUriGenPrefix("http://fdisk.at/");
    tdoParamdienstgrade << *rstStruct.dienstgrade;
  }
  if (!(rstStruct.sonderdienste).IsNull()) // Optional
  {
    staff::DataObject tdoParamsonderdienste = rdoParam.CreateChild("sonderdienste");
    tdoParamsonderdienste.SetNamespaceUriGenPrefix("http://fdisk.at/");
    tdoParamsonderdienste << *rstStruct.sonderdienste;
  }
  if (!(rstStruct.funktionen).IsNull()) // Optional
  {
    staff::DataObject tdoParamfunktionen = rdoParam.CreateChild("funktionen");
    tdoParamfunktionen.SetNamespaceUriGenPrefix("http://fdisk.at/");
    tdoParamfunktionen << *rstStruct.funktionen;
  }
  if (!(rstStruct.funktionaere).IsNull()) // Optional
  {
    staff::DataObject tdoParamfunktionaere = rdoParam.CreateChild("funktionaere");
    tdoParamfunktionaere.SetNamespaceUriGenPrefix("http://fdisk.at/");
    tdoParamfunktionaere << *rstStruct.funktionaere;
  }
  if (!(rstStruct.instanzen).IsNull()) // Optional
  {
    staff::DataObject tdoParaminstanzen = rdoParam.CreateChild("instanzen");
    tdoParaminstanzen.SetNamespaceUriGenPrefix("http://fdisk.at/");
    tdoParaminstanzen << *rstStruct.instanzen;
  }
  if (!(rstStruct.fwInstanzen144).IsNull()) // Optional
  {
    staff::DataObject tdoParamfwInstanzen144 = rdoParam.CreateChild("fwInstanzen144");
    tdoParamfwInstanzen144.SetNamespaceUriGenPrefix("http://fdisk.at/");
    tdoParamfwInstanzen144 << *rstStruct.fwInstanzen144;
  }
  if (!(rstStruct.geraete).IsNull()) // Optional
  {
    staff::DataObject tdoParamgeraete = rdoParam.CreateChild("geraete");
    tdoParamgeraete.SetNamespaceUriGenPrefix("http://fdisk.at/");
    tdoParamgeraete << *rstStruct.geraete;
  }
  if (!(rstStruct.fahrzeuge).IsNull()) // Optional
  {
    staff::DataObject tdoParamfahrzeuge = rdoParam.CreateChild("fahrzeuge");
    tdoParamfahrzeuge.SetNamespaceUriGenPrefix("http://fdisk.at/");
    tdoParamfahrzeuge << *rstStruct.fahrzeuge;
  }
  if (!(rstStruct.feuerwachen).IsNull()) // Optional
  {
    staff::DataObject tdoParamfeuerwachen = rdoParam.CreateChild("feuerwachen");
    tdoParamfeuerwachen.SetNamespaceUriGenPrefix("http://fdisk.at/");
    tdoParamfeuerwachen << *rstStruct.feuerwachen;
  }
  if (!(rstStruct.erreichbarkeitenfeuerwehrhaeuser).IsNull()) // Optional
  {
    staff::DataObject tdoParamerreichbarkeitenfeuerwehrhaeuser = rdoParam.CreateChild("erreichbarkeitenfeuerwehrhaeuser");
    tdoParamerreichbarkeitenfeuerwehrhaeuser.SetNamespaceUriGenPrefix("http://fdisk.at/");
    tdoParamerreichbarkeitenfeuerwehrhaeuser << *rstStruct.erreichbarkeitenfeuerwehrhaeuser;
  }
  if (!(rstStruct.erreichbarkeitenpersonen).IsNull()) // Optional
  {
    staff::DataObject tdoParamerreichbarkeitenpersonen = rdoParam.CreateChild("erreichbarkeitenpersonen");
    tdoParamerreichbarkeitenpersonen.SetNamespaceUriGenPrefix("http://fdisk.at/");
    tdoParamerreichbarkeitenpersonen << *rstStruct.erreichbarkeitenpersonen;
  }
  if (!(rstStruct.feuerwehrhaeuser).IsNull()) // Optional
  {
    staff::DataObject tdoParamfeuerwehrhaeuser = rdoParam.CreateChild("feuerwehrhaeuser");
    tdoParamfeuerwehrhaeuser.SetNamespaceUriGenPrefix("http://fdisk.at/");
    tdoParamfeuerwehrhaeuser << *rstStruct.feuerwehrhaeuser;
  }
  if (!(rstStruct.feuerwehrgemeinden).IsNull()) // Optional
  {
    staff::DataObject tdoParamfeuerwehrgemeinden = rdoParam.CreateChild("feuerwehrgemeinden");
    tdoParamfeuerwehrgemeinden.SetNamespaceUriGenPrefix("http://fdisk.at/");
    tdoParamfeuerwehrgemeinden << *rstStruct.feuerwehrgemeinden;
  }
  if (!(rstStruct.wasserdienstleistungsbewerbe).IsNull()) // Optional
  {
    staff::DataObject tdoParamwasserdienstleistungsbewerbe = rdoParam.CreateChild("wasserdienstleistungsbewerbe");
    tdoParamwasserdienstleistungsbewerbe.SetNamespaceUriGenPrefix("http://fdisk.at/");
    tdoParamwasserdienstleistungsbewerbe << *rstStruct.wasserdienstleistungsbewerbe;
  }
  if (!(rstStruct.feuerwehrleistungsbewerbe).IsNull()) // Optional
  {
    staff::DataObject tdoParamfeuerwehrleistungsbewerbe = rdoParam.CreateChild("feuerwehrleistungsbewerbe");
    tdoParamfeuerwehrleistungsbewerbe.SetNamespaceUriGenPrefix("http://fdisk.at/");
    tdoParamfeuerwehrleistungsbewerbe << *rstStruct.feuerwehrleistungsbewerbe;
  }
  return rdoParam;
}

const DataObject& operator>>(const DataObject& rdoParam, struct ::FdWsGetNextDataBlockReturn& rstStruct)
{
  const staff::DataObject& rdoParamstatusMessage = rdoParam.GetChildByLocalNameOpt("statusMessage");
  if (!rdoParamstatusMessage.IsNull()) // optional
  {
    rdoParamstatusMessage.GetValue(*rstStruct.statusMessage);
  }
  rdoParam.GetChildByLocalName("statusCode") >> rstStruct.statusCode;
  const staff::DataObject& rdoParamfwMitglieder144 = rdoParam.GetChildByLocalNameOpt("fwMitglieder144");
  if (!rdoParamfwMitglieder144.IsNull()) // optional
  {
    rdoParamfwMitglieder144 >> *rstStruct.fwMitglieder144;
  }
  const staff::DataObject& rdoParammitglieder = rdoParam.GetChildByLocalNameOpt("mitglieder");
  if (!rdoParammitglieder.IsNull()) // optional
  {
    rdoParammitglieder >> *rstStruct.mitglieder;
  }
  const staff::DataObject& rdoParamausbildungen = rdoParam.GetChildByLocalNameOpt("ausbildungen");
  if (!rdoParamausbildungen.IsNull()) // optional
  {
    rdoParamausbildungen >> *rstStruct.ausbildungen;
  }
  const staff::DataObject& rdoParamkurse = rdoParam.GetChildByLocalNameOpt("kurse");
  if (!rdoParamkurse.IsNull()) // optional
  {
    rdoParamkurse >> *rstStruct.kurse;
  }
  const staff::DataObject& rdoParamdienstgrade = rdoParam.GetChildByLocalNameOpt("dienstgrade");
  if (!rdoParamdienstgrade.IsNull()) // optional
  {
    rdoParamdienstgrade >> *rstStruct.dienstgrade;
  }
  const staff::DataObject& rdoParamsonderdienste = rdoParam.GetChildByLocalNameOpt("sonderdienste");
  if (!rdoParamsonderdienste.IsNull()) // optional
  {
    rdoParamsonderdienste >> *rstStruct.sonderdienste;
  }
  const staff::DataObject& rdoParamfunktionen = rdoParam.GetChildByLocalNameOpt("funktionen");
  if (!rdoParamfunktionen.IsNull()) // optional
  {
    rdoParamfunktionen >> *rstStruct.funktionen;
  }
  const staff::DataObject& rdoParamfunktionaere = rdoParam.GetChildByLocalNameOpt("funktionaere");
  if (!rdoParamfunktionaere.IsNull()) // optional
  {
    rdoParamfunktionaere >> *rstStruct.funktionaere;
  }
  const staff::DataObject& rdoParaminstanzen = rdoParam.GetChildByLocalNameOpt("instanzen");
  if (!rdoParaminstanzen.IsNull()) // optional
  {
    rdoParaminstanzen >> *rstStruct.instanzen;
  }
  const staff::DataObject& rdoParamfwInstanzen144 = rdoParam.GetChildByLocalNameOpt("fwInstanzen144");
  if (!rdoParamfwInstanzen144.IsNull()) // optional
  {
    rdoParamfwInstanzen144 >> *rstStruct.fwInstanzen144;
  }
  const staff::DataObject& rdoParamgeraete = rdoParam.GetChildByLocalNameOpt("geraete");
  if (!rdoParamgeraete.IsNull()) // optional
  {
    rdoParamgeraete >> *rstStruct.geraete;
  }
  const staff::DataObject& rdoParamfahrzeuge = rdoParam.GetChildByLocalNameOpt("fahrzeuge");
  if (!rdoParamfahrzeuge.IsNull()) // optional
  {
    rdoParamfahrzeuge >> *rstStruct.fahrzeuge;
  }
  const staff::DataObject& rdoParamfeuerwachen = rdoParam.GetChildByLocalNameOpt("feuerwachen");
  if (!rdoParamfeuerwachen.IsNull()) // optional
  {
    rdoParamfeuerwachen >> *rstStruct.feuerwachen;
  }
  const staff::DataObject& rdoParamerreichbarkeitenfeuerwehrhaeuser = rdoParam.GetChildByLocalNameOpt("erreichbarkeitenfeuerwehrhaeuser");
  if (!rdoParamerreichbarkeitenfeuerwehrhaeuser.IsNull()) // optional
  {
    rdoParamerreichbarkeitenfeuerwehrhaeuser >> *rstStruct.erreichbarkeitenfeuerwehrhaeuser;
  }
  const staff::DataObject& rdoParamerreichbarkeitenpersonen = rdoParam.GetChildByLocalNameOpt("erreichbarkeitenpersonen");
  if (!rdoParamerreichbarkeitenpersonen.IsNull()) // optional
  {
    rdoParamerreichbarkeitenpersonen >> *rstStruct.erreichbarkeitenpersonen;
  }
  const staff::DataObject& rdoParamfeuerwehrhaeuser = rdoParam.GetChildByLocalNameOpt("feuerwehrhaeuser");
  if (!rdoParamfeuerwehrhaeuser.IsNull()) // optional
  {
    rdoParamfeuerwehrhaeuser >> *rstStruct.feuerwehrhaeuser;
  }
  const staff::DataObject& rdoParamfeuerwehrgemeinden = rdoParam.GetChildByLocalNameOpt("feuerwehrgemeinden");
  if (!rdoParamfeuerwehrgemeinden.IsNull()) // optional
  {
    rdoParamfeuerwehrgemeinden >> *rstStruct.feuerwehrgemeinden;
  }
  const staff::DataObject& rdoParamwasserdienstleistungsbewerbe = rdoParam.GetChildByLocalNameOpt("wasserdienstleistungsbewerbe");
  if (!rdoParamwasserdienstleistungsbewerbe.IsNull()) // optional
  {
    rdoParamwasserdienstleistungsbewerbe >> *rstStruct.wasserdienstleistungsbewerbe;
  }
  const staff::DataObject& rdoParamfeuerwehrleistungsbewerbe = rdoParam.GetChildByLocalNameOpt("feuerwehrleistungsbewerbe");
  if (!rdoParamfeuerwehrleistungsbewerbe.IsNull()) // optional
  {
    rdoParamfeuerwehrleistungsbewerbe >> *rstStruct.feuerwehrleistungsbewerbe;
  }
  return rdoParam;
}

DataObject& operator<<(DataObject& rdoParam, const struct ::ArrayOfFdWsFWMitglieder144Struct& rstStruct)
{
  rdoParam.SetNamespaceUriGenPrefix("http://fdisk.at/");
  for (std::list< staff::Nillable< ::FdWsFWMitglieder144Struct > >::const_iterator itItem = (rstStruct.FdWsFWMitglieder144Struct).begin(), itItemEnd = (rstStruct.FdWsFWMitglieder144Struct).end();
       itItem != itItemEnd; ++itItem)
  {
    if (!((*itItem)).IsNull()) // Nillable
    {
      staff::DataObject tdoParamItem = rdoParam.CreateChild("FdWsFWMitglieder144Struct");
      tdoParamItem.SetNamespaceUriGenPrefix("http://fdisk.at/");
      tdoParamItem << *(*itItem);
    }
    else
    {
      rdoParam.CreateChild("FdWsFWMitglieder144Struct").SetNil();
    }
  }

  return rdoParam;
}

const DataObject& operator>>(const DataObject& rdoParam, struct ::ArrayOfFdWsFWMitglieder144Struct& rstStruct)
{
  for (staff::DataObject tdoItem = rdoParam.FirstChild(); !tdoItem.IsNull(); tdoItem.SetNextSibling())
  {
    if (tdoItem.GetLocalName() == "FdWsFWMitglieder144Struct")
    {
      (rstStruct.FdWsFWMitglieder144Struct).resize((rstStruct.FdWsFWMitglieder144Struct).size() + 1);
      if (!tdoItem.IsNil()) // Nillable
      {
        tdoItem >> *(rstStruct.FdWsFWMitglieder144Struct).back();
      }
    }
  }

  return rdoParam;
}

DataObject& operator<<(DataObject& rdoParam, const struct ::TypeMapper& /*rstStruct*/)
{
  return rdoParam;
}

const DataObject& operator>>(const DataObject& rdoParam, struct ::TypeMapper& /*rstStruct*/)
{
  return rdoParam;
}

DataObject& operator<<(DataObject& rdoParam, const struct ::Writer& rstStruct)
{
  // serialize parent struct
  rdoParam << static_cast< const struct ::TypeMapper& >(rstStruct);

  return rdoParam;
}

const DataObject& operator>>(const DataObject& rdoParam, struct ::Writer& rstStruct)
{
  // deserialize parent struct
  rdoParam >> static_cast< struct ::TypeMapper& >(rstStruct);

  return rdoParam;
}

DataObject& operator<<(DataObject& rdoParam, const struct ::FdWsFWMitglieder144Struct& rstStruct)
{
  // serialize parent struct
  rdoParam << static_cast< const struct ::Writer& >(rstStruct);

  rdoParam.CreateChild("FdiskIdInstanzen", rstStruct.FdiskIdInstanzen).SetNamespaceUriGenPrefix("http://fdisk.at/");
  if (!(rstStruct.Instanznummer).IsNull()) // Optional
  {
    rdoParam.CreateChild("Instanznummer", *rstStruct.Instanznummer).SetNamespaceUriGenPrefix("http://fdisk.at/");
  }
  if (!(rstStruct.Standesbuchnummer).IsNull()) // Optional
  {
    rdoParam.CreateChild("Standesbuchnummer", *rstStruct.Standesbuchnummer).SetNamespaceUriGenPrefix("http://fdisk.at/");
  }
  if (!(rstStruct.Vorname).IsNull()) // Optional
  {
    rdoParam.CreateChild("Vorname", *rstStruct.Vorname).SetNamespaceUriGenPrefix("http://fdisk.at/");
  }
  if (!(rstStruct.Zuname).IsNull()) // Optional
  {
    rdoParam.CreateChild("Zuname", *rstStruct.Zuname).SetNamespaceUriGenPrefix("http://fdisk.at/");
  }
  rdoParam.CreateChild("FdiskIdMitglieder", rstStruct.FdiskIdMitglieder).SetNamespaceUriGenPrefix("http://fdisk.at/");
  rdoParam.CreateChild("FdiskIdPersonen", rstStruct.FdiskIdPersonen).SetNamespaceUriGenPrefix("http://fdisk.at/");
  if (!(rstStruct.Titel).IsNull()) // Optional
  {
    rdoParam.CreateChild("Titel", *rstStruct.Titel).SetNamespaceUriGenPrefix("http://fdisk.at/");
  }
  if (!(rstStruct.Namenszusatz).IsNull()) // Optional
  {
    rdoParam.CreateChild("Namenszusatz", *rstStruct.Namenszusatz).SetNamespaceUriGenPrefix("http://fdisk.at/");
  }
  return rdoParam;
}

const DataObject& operator>>(const DataObject& rdoParam, struct ::FdWsFWMitglieder144Struct& rstStruct)
{
  // deserialize parent struct
  rdoParam >> static_cast< struct ::Writer& >(rstStruct);

  rdoParam.GetChildValueByLocalName("FdiskIdInstanzen", rstStruct.FdiskIdInstanzen);
  const staff::DataObject& rdoParamInstanznummer = rdoParam.GetChildByLocalNameOpt("Instanznummer");
  if (!rdoParamInstanznummer.IsNull()) // optional
  {
    rdoParamInstanznummer.GetValue(*rstStruct.Instanznummer);
  }
  const staff::DataObject& rdoParamStandesbuchnummer = rdoParam.GetChildByLocalNameOpt("Standesbuchnummer");
  if (!rdoParamStandesbuchnummer.IsNull()) // optional
  {
    rdoParamStandesbuchnummer.GetValue(*rstStruct.Standesbuchnummer);
  }
  const staff::DataObject& rdoParamVorname = rdoParam.GetChildByLocalNameOpt("Vorname");
  if (!rdoParamVorname.IsNull()) // optional
  {
    rdoParamVorname.GetValue(*rstStruct.Vorname);
  }
  const staff::DataObject& rdoParamZuname = rdoParam.GetChildByLocalNameOpt("Zuname");
  if (!rdoParamZuname.IsNull()) // optional
  {
    rdoParamZuname.GetValue(*rstStruct.Zuname);
  }
  rdoParam.GetChildValueByLocalName("FdiskIdMitglieder", rstStruct.FdiskIdMitglieder);
  rdoParam.GetChildValueByLocalName("FdiskIdPersonen", rstStruct.FdiskIdPersonen);
  const staff::DataObject& rdoParamTitel = rdoParam.GetChildByLocalNameOpt("Titel");
  if (!rdoParamTitel.IsNull()) // optional
  {
    rdoParamTitel.GetValue(*rstStruct.Titel);
  }
  const staff::DataObject& rdoParamNamenszusatz = rdoParam.GetChildByLocalNameOpt("Namenszusatz");
  if (!rdoParamNamenszusatz.IsNull()) // optional
  {
    rdoParamNamenszusatz.GetValue(*rstStruct.Namenszusatz);
  }
  return rdoParam;
}

DataObject& operator<<(DataObject& rdoParam, const struct ::ArrayOfFdWsMitgliederStruct& rstStruct)
{
  rdoParam.SetNamespaceUriGenPrefix("http://fdisk.at/");
  for (std::list< staff::Nillable< ::FdWsMitgliederStruct > >::const_iterator itItem = (rstStruct.FdWsMitgliederStruct).begin(), itItemEnd = (rstStruct.FdWsMitgliederStruct).end();
       itItem != itItemEnd; ++itItem)
  {
    if (!((*itItem)).IsNull()) // Nillable
    {
      staff::DataObject tdoParamItem = rdoParam.CreateChild("FdWsMitgliederStruct");
      tdoParamItem.SetNamespaceUriGenPrefix("http://fdisk.at/");
      tdoParamItem << *(*itItem);
    }
    else
    {
      rdoParam.CreateChild("FdWsMitgliederStruct").SetNil();
    }
  }

  return rdoParam;
}

const DataObject& operator>>(const DataObject& rdoParam, struct ::ArrayOfFdWsMitgliederStruct& rstStruct)
{
  for (staff::DataObject tdoItem = rdoParam.FirstChild(); !tdoItem.IsNull(); tdoItem.SetNextSibling())
  {
    if (tdoItem.GetLocalName() == "FdWsMitgliederStruct")
    {
      (rstStruct.FdWsMitgliederStruct).resize((rstStruct.FdWsMitgliederStruct).size() + 1);
      if (!tdoItem.IsNil()) // Nillable
      {
        tdoItem >> *(rstStruct.FdWsMitgliederStruct).back();
      }
    }
  }

  return rdoParam;
}

DataObject& operator<<(DataObject& rdoParam, const struct ::FdWsMitgliederStruct& rstStruct)
{
  // serialize parent struct
  rdoParam << static_cast< const struct ::Writer& >(rstStruct);

  rdoParam.CreateChild("FdiskIdMitglieder", rstStruct.FdiskIdMitglieder).SetNamespaceUriGenPrefix("http://fdisk.at/");
  rdoParam.CreateChild("FdiskIdPersonen", rstStruct.FdiskIdPersonen).SetNamespaceUriGenPrefix("http://fdisk.at/");
  rdoParam.CreateChild("FdiskIdDienstgrade", rstStruct.FdiskIdDienstgrade).SetNamespaceUriGenPrefix("http://fdisk.at/");
  if (!(rstStruct.Instanznummer).IsNull()) // Optional
  {
    rdoParam.CreateChild("Instanznummer", *rstStruct.Instanznummer).SetNamespaceUriGenPrefix("http://fdisk.at/");
  }
  if (!(rstStruct.Standesbuchnummer).IsNull()) // Optional
  {
    rdoParam.CreateChild("Standesbuchnummer", *rstStruct.Standesbuchnummer).SetNamespaceUriGenPrefix("http://fdisk.at/");
  }
  if (!(rstStruct.Dienstgrad).IsNull()) // Optional
  {
    rdoParam.CreateChild("Dienstgrad", *rstStruct.Dienstgrad).SetNamespaceUriGenPrefix("http://fdisk.at/");
  }
  if (!(rstStruct.DienstgradLang).IsNull()) // Optional
  {
    rdoParam.CreateChild("DienstgradLang", *rstStruct.DienstgradLang).SetNamespaceUriGenPrefix("http://fdisk.at/");
  }
  if (!(rstStruct.Titel).IsNull()) // Optional
  {
    rdoParam.CreateChild("Titel", *rstStruct.Titel).SetNamespaceUriGenPrefix("http://fdisk.at/");
  }
  if (!(rstStruct.Vorname).IsNull()) // Optional
  {
    rdoParam.CreateChild("Vorname", *rstStruct.Vorname).SetNamespaceUriGenPrefix("http://fdisk.at/");
  }
  if (!(rstStruct.Zuname).IsNull()) // Optional
  {
    rdoParam.CreateChild("Zuname", *rstStruct.Zuname).SetNamespaceUriGenPrefix("http://fdisk.at/");
  }
  if (!(rstStruct.Namenszusatz).IsNull()) // Optional
  {
    rdoParam.CreateChild("Namenszusatz", *rstStruct.Namenszusatz).SetNamespaceUriGenPrefix("http://fdisk.at/");
  }
  if (!(rstStruct.Strasse).IsNull()) // Optional
  {
    rdoParam.CreateChild("Strasse", *rstStruct.Strasse).SetNamespaceUriGenPrefix("http://fdisk.at/");
  }
  if (!(rstStruct.Nummer).IsNull()) // Optional
  {
    rdoParam.CreateChild("Nummer", *rstStruct.Nummer).SetNamespaceUriGenPrefix("http://fdisk.at/");
  }
  if (!(rstStruct.Stiege).IsNull()) // Optional
  {
    rdoParam.CreateChild("Stiege", *rstStruct.Stiege).SetNamespaceUriGenPrefix("http://fdisk.at/");
  }
  if (!(rstStruct.Kathastralgemeinde).IsNull()) // Optional
  {
    rdoParam.CreateChild("Kathastralgemeinde", *rstStruct.Kathastralgemeinde).SetNamespaceUriGenPrefix("http://fdisk.at/");
  }
  if (!(rstStruct.PLZ).IsNull()) // Optional
  {
    rdoParam.CreateChild("PLZ", *rstStruct.PLZ).SetNamespaceUriGenPrefix("http://fdisk.at/");
  }
  if (!(rstStruct.Ort).IsNull()) // Optional
  {
    rdoParam.CreateChild("Ort", *rstStruct.Ort).SetNamespaceUriGenPrefix("http://fdisk.at/");
  }
  if (!(rstStruct.Geschlecht).IsNull()) // Optional
  {
    rdoParam.CreateChild("Geschlecht", *rstStruct.Geschlecht).SetNamespaceUriGenPrefix("http://fdisk.at/");
  }
  if (!(rstStruct.ErreichbarkeitMail).IsNull()) // Optional
  {
    rdoParam.CreateChild("ErreichbarkeitMail", *rstStruct.ErreichbarkeitMail).SetNamespaceUriGenPrefix("http://fdisk.at/");
  }
  if (!(rstStruct.ErreichbarkeitMobil).IsNull()) // Optional
  {
    rdoParam.CreateChild("ErreichbarkeitMobil", *rstStruct.ErreichbarkeitMobil).SetNamespaceUriGenPrefix("http://fdisk.at/");
  }
  if (!(rstStruct.ErreichbarkeitFestnetz).IsNull()) // Optional
  {
    rdoParam.CreateChild("ErreichbarkeitFestnetz", *rstStruct.ErreichbarkeitFestnetz).SetNamespaceUriGenPrefix("http://fdisk.at/");
  }
  if (!(rstStruct.ErreichbarkeitFax).IsNull()) // Optional
  {
    rdoParam.CreateChild("ErreichbarkeitFax", *rstStruct.ErreichbarkeitFax).SetNamespaceUriGenPrefix("http://fdisk.at/");
  }
  if (!(rstStruct.ErreichbarkeitGruppenRic).IsNull()) // Optional
  {
    rdoParam.CreateChild("ErreichbarkeitGruppenRic", *rstStruct.ErreichbarkeitGruppenRic).SetNamespaceUriGenPrefix("http://fdisk.at/");
  }
  if (!(rstStruct.ErreichbarkeitUrl).IsNull()) // Optional
  {
    rdoParam.CreateChild("ErreichbarkeitUrl", *rstStruct.ErreichbarkeitUrl).SetNamespaceUriGenPrefix("http://fdisk.at/");
  }
  rdoParam.CreateChild("Geburtsdatum", rstStruct.Geburtsdatum).SetNamespaceUriGenPrefix("http://fdisk.at/");
  if (!(rstStruct.Versicherungsnummer).IsNull()) // Optional
  {
    rdoParam.CreateChild("Versicherungsnummer", *rstStruct.Versicherungsnummer).SetNamespaceUriGenPrefix("http://fdisk.at/");
  }
  rdoParam.CreateChild("DatumAbmeldung", rstStruct.DatumAbmeldung).SetNamespaceUriGenPrefix("http://fdisk.at/");
  rdoParam.CreateChild("DatumEhrenmitglied", rstStruct.DatumEhrenmitglied).SetNamespaceUriGenPrefix("http://fdisk.at/");
  rdoParam.CreateChild("DatumJugend", rstStruct.DatumJugend).SetNamespaceUriGenPrefix("http://fdisk.at/");
  rdoParam.CreateChild("DatumReserve", rstStruct.DatumReserve).SetNamespaceUriGenPrefix("http://fdisk.at/");
  rdoParam.CreateChild("DatumAktiv", rstStruct.DatumAktiv).SetNamespaceUriGenPrefix("http://fdisk.at/");
  rdoParam.CreateChild("DatumEintritt", rstStruct.DatumEintritt).SetNamespaceUriGenPrefix("http://fdisk.at/");
  rdoParam.CreateChild("FlagAktiv", rstStruct.FlagAktiv).SetNamespaceUriGenPrefix("http://fdisk.at/");
  rdoParam.CreateChild("FlagEhrenmitglied", rstStruct.FlagEhrenmitglied).SetNamespaceUriGenPrefix("http://fdisk.at/");
  rdoParam.CreateChild("FlagJugend", rstStruct.FlagJugend).SetNamespaceUriGenPrefix("http://fdisk.at/");
  rdoParam.CreateChild("FlagAbgemeldet", rstStruct.FlagAbgemeldet).SetNamespaceUriGenPrefix("http://fdisk.at/");
  rdoParam.CreateChild("FlagReserve", rstStruct.FlagReserve).SetNamespaceUriGenPrefix("http://fdisk.at/");
  rdoParam.CreateChild("FlagZivildienst", rstStruct.FlagZivildienst).SetNamespaceUriGenPrefix("http://fdisk.at/");
  rdoParam.CreateChild("LetzteAenderung", rstStruct.LetzteAenderung).SetNamespaceUriGenPrefix("http://fdisk.at/");
  if (!(rstStruct.ErreichbarkeitMobilFirma).IsNull()) // Optional
  {
    rdoParam.CreateChild("ErreichbarkeitMobilFirma", *rstStruct.ErreichbarkeitMobilFirma).SetNamespaceUriGenPrefix("http://fdisk.at/");
  }
  if (!(rstStruct.ErreichbarkeitFestnetzFirma).IsNull()) // Optional
  {
    rdoParam.CreateChild("ErreichbarkeitFestnetzFirma", *rstStruct.ErreichbarkeitFestnetzFirma).SetNamespaceUriGenPrefix("http://fdisk.at/");
  }
  if (!(rstStruct.Firma).IsNull()) // Optional
  {
    rdoParam.CreateChild("Firma", *rstStruct.Firma).SetNamespaceUriGenPrefix("http://fdisk.at/");
  }
  if (!(rstStruct.Branche).IsNull()) // Optional
  {
    rdoParam.CreateChild("Branche", *rstStruct.Branche).SetNamespaceUriGenPrefix("http://fdisk.at/");
  }
  if (!(rstStruct.FirmaStrasse).IsNull()) // Optional
  {
    rdoParam.CreateChild("FirmaStrasse", *rstStruct.FirmaStrasse).SetNamespaceUriGenPrefix("http://fdisk.at/");
  }
  if (!(rstStruct.FirmaNummer).IsNull()) // Optional
  {
    rdoParam.CreateChild("FirmaNummer", *rstStruct.FirmaNummer).SetNamespaceUriGenPrefix("http://fdisk.at/");
  }
  if (!(rstStruct.FirmaPlz).IsNull()) // Optional
  {
    rdoParam.CreateChild("FirmaPlz", *rstStruct.FirmaPlz).SetNamespaceUriGenPrefix("http://fdisk.at/");
  }
  if (!(rstStruct.FirmaOrt).IsNull()) // Optional
  {
    rdoParam.CreateChild("FirmaOrt", *rstStruct.FirmaOrt).SetNamespaceUriGenPrefix("http://fdisk.at/");
  }
  if (!(rstStruct.Fuehrerscheinklassen).IsNull()) // Optional
  {
    rdoParam.CreateChild("Fuehrerscheinklassen", *rstStruct.Fuehrerscheinklassen).SetNamespaceUriGenPrefix("http://fdisk.at/");
  }
  if (!(rstStruct.HasJugendfoerderung).IsNull()) // Optional
  {
    rdoParam.CreateChild("HasJugendfoerderung", *rstStruct.HasJugendfoerderung).SetNamespaceUriGenPrefix("http://fdisk.at/");
  }
  rdoParam.CreateChild("Feuerwachen", rstStruct.Feuerwachen).SetNamespaceUriGenPrefix("http://fdisk.at/");
  rdoParam.CreateChild("Vordienstzeiten", rstStruct.Vordienstzeiten).SetNamespaceUriGenPrefix("http://fdisk.at/");
  return rdoParam;
}

const DataObject& operator>>(const DataObject& rdoParam, struct ::FdWsMitgliederStruct& rstStruct)
{
  // deserialize parent struct
  rdoParam >> static_cast< struct ::Writer& >(rstStruct);

  rdoParam.GetChildValueByLocalName("FdiskIdMitglieder", rstStruct.FdiskIdMitglieder);
  rdoParam.GetChildValueByLocalName("FdiskIdPersonen", rstStruct.FdiskIdPersonen);
  rdoParam.GetChildValueByLocalName("FdiskIdDienstgrade", rstStruct.FdiskIdDienstgrade);
  const staff::DataObject& rdoParamInstanznummer = rdoParam.GetChildByLocalNameOpt("Instanznummer");
  if (!rdoParamInstanznummer.IsNull()) // optional
  {
    rdoParamInstanznummer.GetValue(*rstStruct.Instanznummer);
  }
  const staff::DataObject& rdoParamStandesbuchnummer = rdoParam.GetChildByLocalNameOpt("Standesbuchnummer");
  if (!rdoParamStandesbuchnummer.IsNull()) // optional
  {
    rdoParamStandesbuchnummer.GetValue(*rstStruct.Standesbuchnummer);
  }
  const staff::DataObject& rdoParamDienstgrad = rdoParam.GetChildByLocalNameOpt("Dienstgrad");
  if (!rdoParamDienstgrad.IsNull()) // optional
  {
    rdoParamDienstgrad.GetValue(*rstStruct.Dienstgrad);
  }
  const staff::DataObject& rdoParamDienstgradLang = rdoParam.GetChildByLocalNameOpt("DienstgradLang");
  if (!rdoParamDienstgradLang.IsNull()) // optional
  {
    rdoParamDienstgradLang.GetValue(*rstStruct.DienstgradLang);
  }
  const staff::DataObject& rdoParamTitel = rdoParam.GetChildByLocalNameOpt("Titel");
  if (!rdoParamTitel.IsNull()) // optional
  {
    rdoParamTitel.GetValue(*rstStruct.Titel);
  }
  const staff::DataObject& rdoParamVorname = rdoParam.GetChildByLocalNameOpt("Vorname");
  if (!rdoParamVorname.IsNull()) // optional
  {
    rdoParamVorname.GetValue(*rstStruct.Vorname);
  }
  const staff::DataObject& rdoParamZuname = rdoParam.GetChildByLocalNameOpt("Zuname");
  if (!rdoParamZuname.IsNull()) // optional
  {
    rdoParamZuname.GetValue(*rstStruct.Zuname);
  }
  const staff::DataObject& rdoParamNamenszusatz = rdoParam.GetChildByLocalNameOpt("Namenszusatz");
  if (!rdoParamNamenszusatz.IsNull()) // optional
  {
    rdoParamNamenszusatz.GetValue(*rstStruct.Namenszusatz);
  }
  const staff::DataObject& rdoParamStrasse = rdoParam.GetChildByLocalNameOpt("Strasse");
  if (!rdoParamStrasse.IsNull()) // optional
  {
    rdoParamStrasse.GetValue(*rstStruct.Strasse);
  }
  const staff::DataObject& rdoParamNummer = rdoParam.GetChildByLocalNameOpt("Nummer");
  if (!rdoParamNummer.IsNull()) // optional
  {
    rdoParamNummer.GetValue(*rstStruct.Nummer);
  }
  const staff::DataObject& rdoParamStiege = rdoParam.GetChildByLocalNameOpt("Stiege");
  if (!rdoParamStiege.IsNull()) // optional
  {
    rdoParamStiege.GetValue(*rstStruct.Stiege);
  }
  const staff::DataObject& rdoParamKathastralgemeinde = rdoParam.GetChildByLocalNameOpt("Kathastralgemeinde");
  if (!rdoParamKathastralgemeinde.IsNull()) // optional
  {
    rdoParamKathastralgemeinde.GetValue(*rstStruct.Kathastralgemeinde);
  }
  const staff::DataObject& rdoParamPLZ = rdoParam.GetChildByLocalNameOpt("PLZ");
  if (!rdoParamPLZ.IsNull()) // optional
  {
    rdoParamPLZ.GetValue(*rstStruct.PLZ);
  }
  const staff::DataObject& rdoParamOrt = rdoParam.GetChildByLocalNameOpt("Ort");
  if (!rdoParamOrt.IsNull()) // optional
  {
    rdoParamOrt.GetValue(*rstStruct.Ort);
  }
  const staff::DataObject& rdoParamGeschlecht = rdoParam.GetChildByLocalNameOpt("Geschlecht");
  if (!rdoParamGeschlecht.IsNull()) // optional
  {
    rdoParamGeschlecht.GetValue(*rstStruct.Geschlecht);
  }
  const staff::DataObject& rdoParamErreichbarkeitMail = rdoParam.GetChildByLocalNameOpt("ErreichbarkeitMail");
  if (!rdoParamErreichbarkeitMail.IsNull()) // optional
  {
    rdoParamErreichbarkeitMail.GetValue(*rstStruct.ErreichbarkeitMail);
  }
  const staff::DataObject& rdoParamErreichbarkeitMobil = rdoParam.GetChildByLocalNameOpt("ErreichbarkeitMobil");
  if (!rdoParamErreichbarkeitMobil.IsNull()) // optional
  {
    rdoParamErreichbarkeitMobil.GetValue(*rstStruct.ErreichbarkeitMobil);
  }
  const staff::DataObject& rdoParamErreichbarkeitFestnetz = rdoParam.GetChildByLocalNameOpt("ErreichbarkeitFestnetz");
  if (!rdoParamErreichbarkeitFestnetz.IsNull()) // optional
  {
    rdoParamErreichbarkeitFestnetz.GetValue(*rstStruct.ErreichbarkeitFestnetz);
  }
  const staff::DataObject& rdoParamErreichbarkeitFax = rdoParam.GetChildByLocalNameOpt("ErreichbarkeitFax");
  if (!rdoParamErreichbarkeitFax.IsNull()) // optional
  {
    rdoParamErreichbarkeitFax.GetValue(*rstStruct.ErreichbarkeitFax);
  }
  const staff::DataObject& rdoParamErreichbarkeitGruppenRic = rdoParam.GetChildByLocalNameOpt("ErreichbarkeitGruppenRic");
  if (!rdoParamErreichbarkeitGruppenRic.IsNull()) // optional
  {
    rdoParamErreichbarkeitGruppenRic.GetValue(*rstStruct.ErreichbarkeitGruppenRic);
  }
  const staff::DataObject& rdoParamErreichbarkeitUrl = rdoParam.GetChildByLocalNameOpt("ErreichbarkeitUrl");
  if (!rdoParamErreichbarkeitUrl.IsNull()) // optional
  {
    rdoParamErreichbarkeitUrl.GetValue(*rstStruct.ErreichbarkeitUrl);
  }
  rdoParam.GetChildValueByLocalName("Geburtsdatum", rstStruct.Geburtsdatum);
  const staff::DataObject& rdoParamVersicherungsnummer = rdoParam.GetChildByLocalNameOpt("Versicherungsnummer");
  if (!rdoParamVersicherungsnummer.IsNull()) // optional
  {
    rdoParamVersicherungsnummer.GetValue(*rstStruct.Versicherungsnummer);
  }
  rdoParam.GetChildValueByLocalName("DatumAbmeldung", rstStruct.DatumAbmeldung);
  rdoParam.GetChildValueByLocalName("DatumEhrenmitglied", rstStruct.DatumEhrenmitglied);
  rdoParam.GetChildValueByLocalName("DatumJugend", rstStruct.DatumJugend);
  rdoParam.GetChildValueByLocalName("DatumReserve", rstStruct.DatumReserve);
  rdoParam.GetChildValueByLocalName("DatumAktiv", rstStruct.DatumAktiv);
  rdoParam.GetChildValueByLocalName("DatumEintritt", rstStruct.DatumEintritt);
  rdoParam.GetChildValueByLocalName("FlagAktiv", rstStruct.FlagAktiv);
  rdoParam.GetChildValueByLocalName("FlagEhrenmitglied", rstStruct.FlagEhrenmitglied);
  rdoParam.GetChildValueByLocalName("FlagJugend", rstStruct.FlagJugend);
  rdoParam.GetChildValueByLocalName("FlagAbgemeldet", rstStruct.FlagAbgemeldet);
  rdoParam.GetChildValueByLocalName("FlagReserve", rstStruct.FlagReserve);
  rdoParam.GetChildValueByLocalName("FlagZivildienst", rstStruct.FlagZivildienst);
  rdoParam.GetChildValueByLocalName("LetzteAenderung", rstStruct.LetzteAenderung);
  const staff::DataObject& rdoParamErreichbarkeitMobilFirma = rdoParam.GetChildByLocalNameOpt("ErreichbarkeitMobilFirma");
  if (!rdoParamErreichbarkeitMobilFirma.IsNull()) // optional
  {
    rdoParamErreichbarkeitMobilFirma.GetValue(*rstStruct.ErreichbarkeitMobilFirma);
  }
  const staff::DataObject& rdoParamErreichbarkeitFestnetzFirma = rdoParam.GetChildByLocalNameOpt("ErreichbarkeitFestnetzFirma");
  if (!rdoParamErreichbarkeitFestnetzFirma.IsNull()) // optional
  {
    rdoParamErreichbarkeitFestnetzFirma.GetValue(*rstStruct.ErreichbarkeitFestnetzFirma);
  }
  const staff::DataObject& rdoParamFirma = rdoParam.GetChildByLocalNameOpt("Firma");
  if (!rdoParamFirma.IsNull()) // optional
  {
    rdoParamFirma.GetValue(*rstStruct.Firma);
  }
  const staff::DataObject& rdoParamBranche = rdoParam.GetChildByLocalNameOpt("Branche");
  if (!rdoParamBranche.IsNull()) // optional
  {
    rdoParamBranche.GetValue(*rstStruct.Branche);
  }
  const staff::DataObject& rdoParamFirmaStrasse = rdoParam.GetChildByLocalNameOpt("FirmaStrasse");
  if (!rdoParamFirmaStrasse.IsNull()) // optional
  {
    rdoParamFirmaStrasse.GetValue(*rstStruct.FirmaStrasse);
  }
  const staff::DataObject& rdoParamFirmaNummer = rdoParam.GetChildByLocalNameOpt("FirmaNummer");
  if (!rdoParamFirmaNummer.IsNull()) // optional
  {
    rdoParamFirmaNummer.GetValue(*rstStruct.FirmaNummer);
  }
  const staff::DataObject& rdoParamFirmaPlz = rdoParam.GetChildByLocalNameOpt("FirmaPlz");
  if (!rdoParamFirmaPlz.IsNull()) // optional
  {
    rdoParamFirmaPlz.GetValue(*rstStruct.FirmaPlz);
  }
  const staff::DataObject& rdoParamFirmaOrt = rdoParam.GetChildByLocalNameOpt("FirmaOrt");
  if (!rdoParamFirmaOrt.IsNull()) // optional
  {
    rdoParamFirmaOrt.GetValue(*rstStruct.FirmaOrt);
  }
  const staff::DataObject& rdoParamFuehrerscheinklassen = rdoParam.GetChildByLocalNameOpt("Fuehrerscheinklassen");
  if (!rdoParamFuehrerscheinklassen.IsNull()) // optional
  {
    rdoParamFuehrerscheinklassen.GetValue(*rstStruct.Fuehrerscheinklassen);
  }
  const staff::DataObject& rdoParamHasJugendfoerderung = rdoParam.GetChildByLocalNameOpt("HasJugendfoerderung");
  if (!rdoParamHasJugendfoerderung.IsNull()) // optional
  {
    rdoParamHasJugendfoerderung.GetValue(*rstStruct.HasJugendfoerderung);
  }
  rdoParam.GetChildValueByLocalName("Feuerwachen", rstStruct.Feuerwachen);
  rdoParam.GetChildValueByLocalName("Vordienstzeiten", rstStruct.Vordienstzeiten);
  return rdoParam;
}

DataObject& operator<<(DataObject& rdoParam, const struct ::ArrayOfFdWsAusbildungenStruct& rstStruct)
{
  rdoParam.SetNamespaceUriGenPrefix("http://fdisk.at/");
  for (std::list< staff::Nillable< ::FdWsAusbildungenStruct > >::const_iterator itItem = (rstStruct.FdWsAusbildungenStruct).begin(), itItemEnd = (rstStruct.FdWsAusbildungenStruct).end();
       itItem != itItemEnd; ++itItem)
  {
    if (!((*itItem)).IsNull()) // Nillable
    {
      staff::DataObject tdoParamItem = rdoParam.CreateChild("FdWsAusbildungenStruct");
      tdoParamItem.SetNamespaceUriGenPrefix("http://fdisk.at/");
      tdoParamItem << *(*itItem);
    }
    else
    {
      rdoParam.CreateChild("FdWsAusbildungenStruct").SetNil();
    }
  }

  return rdoParam;
}

const DataObject& operator>>(const DataObject& rdoParam, struct ::ArrayOfFdWsAusbildungenStruct& rstStruct)
{
  for (staff::DataObject tdoItem = rdoParam.FirstChild(); !tdoItem.IsNull(); tdoItem.SetNextSibling())
  {
    if (tdoItem.GetLocalName() == "FdWsAusbildungenStruct")
    {
      (rstStruct.FdWsAusbildungenStruct).resize((rstStruct.FdWsAusbildungenStruct).size() + 1);
      if (!tdoItem.IsNil()) // Nillable
      {
        tdoItem >> *(rstStruct.FdWsAusbildungenStruct).back();
      }
    }
  }

  return rdoParam;
}

DataObject& operator<<(DataObject& rdoParam, const struct ::FdWsAusbildungenStruct& rstStruct)
{
  // serialize parent struct
  rdoParam << static_cast< const struct ::Writer& >(rstStruct);

  rdoParam.CreateChild("FdiskIdAusbildungen", rstStruct.FdiskIdAusbildungen).SetNamespaceUriGenPrefix("http://fdisk.at/");
  rdoParam.CreateChild("FdiskIdErsatzlehrgaenge", rstStruct.FdiskIdErsatzlehrgaenge).SetNamespaceUriGenPrefix("http://fdisk.at/");
  if (!(rstStruct.Bezeichnung).IsNull()) // Optional
  {
    rdoParam.CreateChild("Bezeichnung", *rstStruct.Bezeichnung).SetNamespaceUriGenPrefix("http://fdisk.at/");
  }
  if (!(rstStruct.Anmerkung).IsNull()) // Optional
  {
    rdoParam.CreateChild("Anmerkung", *rstStruct.Anmerkung).SetNamespaceUriGenPrefix("http://fdisk.at/");
  }
  rdoParam.CreateChild("Datum", rstStruct.Datum).SetNamespaceUriGenPrefix("http://fdisk.at/");
  return rdoParam;
}

const DataObject& operator>>(const DataObject& rdoParam, struct ::FdWsAusbildungenStruct& rstStruct)
{
  // deserialize parent struct
  rdoParam >> static_cast< struct ::Writer& >(rstStruct);

  rdoParam.GetChildValueByLocalName("FdiskIdAusbildungen", rstStruct.FdiskIdAusbildungen);
  rdoParam.GetChildValueByLocalName("FdiskIdErsatzlehrgaenge", rstStruct.FdiskIdErsatzlehrgaenge);
  const staff::DataObject& rdoParamBezeichnung = rdoParam.GetChildByLocalNameOpt("Bezeichnung");
  if (!rdoParamBezeichnung.IsNull()) // optional
  {
    rdoParamBezeichnung.GetValue(*rstStruct.Bezeichnung);
  }
  const staff::DataObject& rdoParamAnmerkung = rdoParam.GetChildByLocalNameOpt("Anmerkung");
  if (!rdoParamAnmerkung.IsNull()) // optional
  {
    rdoParamAnmerkung.GetValue(*rstStruct.Anmerkung);
  }
  rdoParam.GetChildValueByLocalName("Datum", rstStruct.Datum);
  return rdoParam;
}

DataObject& operator<<(DataObject& rdoParam, const struct ::ArrayOfFdWsKurseStruct& rstStruct)
{
  rdoParam.SetNamespaceUriGenPrefix("http://fdisk.at/");
  for (std::list< staff::Nillable< ::FdWsKurseStruct > >::const_iterator itItem = (rstStruct.FdWsKurseStruct).begin(), itItemEnd = (rstStruct.FdWsKurseStruct).end();
       itItem != itItemEnd; ++itItem)
  {
    if (!((*itItem)).IsNull()) // Nillable
    {
      staff::DataObject tdoParamItem = rdoParam.CreateChild("FdWsKurseStruct");
      tdoParamItem.SetNamespaceUriGenPrefix("http://fdisk.at/");
      tdoParamItem << *(*itItem);
    }
    else
    {
      rdoParam.CreateChild("FdWsKurseStruct").SetNil();
    }
  }

  return rdoParam;
}

const DataObject& operator>>(const DataObject& rdoParam, struct ::ArrayOfFdWsKurseStruct& rstStruct)
{
  for (staff::DataObject tdoItem = rdoParam.FirstChild(); !tdoItem.IsNull(); tdoItem.SetNextSibling())
  {
    if (tdoItem.GetLocalName() == "FdWsKurseStruct")
    {
      (rstStruct.FdWsKurseStruct).resize((rstStruct.FdWsKurseStruct).size() + 1);
      if (!tdoItem.IsNil()) // Nillable
      {
        tdoItem >> *(rstStruct.FdWsKurseStruct).back();
      }
    }
  }

  return rdoParam;
}

DataObject& operator<<(DataObject& rdoParam, const struct ::FdWsKurseStruct& rstStruct)
{
  // serialize parent struct
  rdoParam << static_cast< const struct ::Writer& >(rstStruct);

  rdoParam.CreateChild("FdiskIdKurse", rstStruct.FdiskIdKurse).SetNamespaceUriGenPrefix("http://fdisk.at/");
  if (!(rstStruct.Kursnummer).IsNull()) // Optional
  {
    rdoParam.CreateChild("Kursnummer", *rstStruct.Kursnummer).SetNamespaceUriGenPrefix("http://fdisk.at/");
  }
  if (!(rstStruct.Bezeichnung).IsNull()) // Optional
  {
    rdoParam.CreateChild("Bezeichnung", *rstStruct.Bezeichnung).SetNamespaceUriGenPrefix("http://fdisk.at/");
  }
  if (!(rstStruct.Leistungsart).IsNull()) // Optional
  {
    rdoParam.CreateChild("Leistungsart", *rstStruct.Leistungsart).SetNamespaceUriGenPrefix("http://fdisk.at/");
  }
  rdoParam.CreateChild("Von", rstStruct.Von).SetNamespaceUriGenPrefix("http://fdisk.at/");
  rdoParam.CreateChild("Bis", rstStruct.Bis).SetNamespaceUriGenPrefix("http://fdisk.at/");
  return rdoParam;
}

const DataObject& operator>>(const DataObject& rdoParam, struct ::FdWsKurseStruct& rstStruct)
{
  // deserialize parent struct
  rdoParam >> static_cast< struct ::Writer& >(rstStruct);

  rdoParam.GetChildValueByLocalName("FdiskIdKurse", rstStruct.FdiskIdKurse);
  const staff::DataObject& rdoParamKursnummer = rdoParam.GetChildByLocalNameOpt("Kursnummer");
  if (!rdoParamKursnummer.IsNull()) // optional
  {
    rdoParamKursnummer.GetValue(*rstStruct.Kursnummer);
  }
  const staff::DataObject& rdoParamBezeichnung = rdoParam.GetChildByLocalNameOpt("Bezeichnung");
  if (!rdoParamBezeichnung.IsNull()) // optional
  {
    rdoParamBezeichnung.GetValue(*rstStruct.Bezeichnung);
  }
  const staff::DataObject& rdoParamLeistungsart = rdoParam.GetChildByLocalNameOpt("Leistungsart");
  if (!rdoParamLeistungsart.IsNull()) // optional
  {
    rdoParamLeistungsart.GetValue(*rstStruct.Leistungsart);
  }
  rdoParam.GetChildValueByLocalName("Von", rstStruct.Von);
  rdoParam.GetChildValueByLocalName("Bis", rstStruct.Bis);
  return rdoParam;
}

DataObject& operator<<(DataObject& rdoParam, const struct ::ArrayOfFdWsDienstgradeStruct& rstStruct)
{
  rdoParam.SetNamespaceUriGenPrefix("http://fdisk.at/");
  for (std::list< staff::Nillable< ::FdWsDienstgradeStruct > >::const_iterator itItem = (rstStruct.FdWsDienstgradeStruct).begin(), itItemEnd = (rstStruct.FdWsDienstgradeStruct).end();
       itItem != itItemEnd; ++itItem)
  {
    if (!((*itItem)).IsNull()) // Nillable
    {
      staff::DataObject tdoParamItem = rdoParam.CreateChild("FdWsDienstgradeStruct");
      tdoParamItem.SetNamespaceUriGenPrefix("http://fdisk.at/");
      tdoParamItem << *(*itItem);
    }
    else
    {
      rdoParam.CreateChild("FdWsDienstgradeStruct").SetNil();
    }
  }

  return rdoParam;
}

const DataObject& operator>>(const DataObject& rdoParam, struct ::ArrayOfFdWsDienstgradeStruct& rstStruct)
{
  for (staff::DataObject tdoItem = rdoParam.FirstChild(); !tdoItem.IsNull(); tdoItem.SetNextSibling())
  {
    if (tdoItem.GetLocalName() == "FdWsDienstgradeStruct")
    {
      (rstStruct.FdWsDienstgradeStruct).resize((rstStruct.FdWsDienstgradeStruct).size() + 1);
      if (!tdoItem.IsNil()) // Nillable
      {
        tdoItem >> *(rstStruct.FdWsDienstgradeStruct).back();
      }
    }
  }

  return rdoParam;
}

DataObject& operator<<(DataObject& rdoParam, const struct ::FdWsDienstgradeStruct& rstStruct)
{
  // serialize parent struct
  rdoParam << static_cast< const struct ::Writer& >(rstStruct);

  rdoParam.CreateChild("FdiskIdDienstgrade", rstStruct.FdiskIdDienstgrade).SetNamespaceUriGenPrefix("http://fdisk.at/");
  if (!(rstStruct.Langbezeichnung).IsNull()) // Optional
  {
    rdoParam.CreateChild("Langbezeichnung", *rstStruct.Langbezeichnung).SetNamespaceUriGenPrefix("http://fdisk.at/");
  }
  if (!(rstStruct.Kurzbezeichnung).IsNull()) // Optional
  {
    rdoParam.CreateChild("Kurzbezeichnung", *rstStruct.Kurzbezeichnung).SetNamespaceUriGenPrefix("http://fdisk.at/");
  }
  rdoParam.CreateChild("Rang", rstStruct.Rang).SetNamespaceUriGenPrefix("http://fdisk.at/");
  rdoParam.CreateChild("LetzteAenderung", rstStruct.LetzteAenderung).SetNamespaceUriGenPrefix("http://fdisk.at/");
  return rdoParam;
}

const DataObject& operator>>(const DataObject& rdoParam, struct ::FdWsDienstgradeStruct& rstStruct)
{
  // deserialize parent struct
  rdoParam >> static_cast< struct ::Writer& >(rstStruct);

  rdoParam.GetChildValueByLocalName("FdiskIdDienstgrade", rstStruct.FdiskIdDienstgrade);
  const staff::DataObject& rdoParamLangbezeichnung = rdoParam.GetChildByLocalNameOpt("Langbezeichnung");
  if (!rdoParamLangbezeichnung.IsNull()) // optional
  {
    rdoParamLangbezeichnung.GetValue(*rstStruct.Langbezeichnung);
  }
  const staff::DataObject& rdoParamKurzbezeichnung = rdoParam.GetChildByLocalNameOpt("Kurzbezeichnung");
  if (!rdoParamKurzbezeichnung.IsNull()) // optional
  {
    rdoParamKurzbezeichnung.GetValue(*rstStruct.Kurzbezeichnung);
  }
  rdoParam.GetChildValueByLocalName("Rang", rstStruct.Rang);
  rdoParam.GetChildValueByLocalName("LetzteAenderung", rstStruct.LetzteAenderung);
  return rdoParam;
}

DataObject& operator<<(DataObject& rdoParam, const struct ::ArrayOfFdWsSonderdiensteStruct& rstStruct)
{
  rdoParam.SetNamespaceUriGenPrefix("http://fdisk.at/");
  for (std::list< staff::Nillable< ::FdWsSonderdiensteStruct > >::const_iterator itItem = (rstStruct.FdWsSonderdiensteStruct).begin(), itItemEnd = (rstStruct.FdWsSonderdiensteStruct).end();
       itItem != itItemEnd; ++itItem)
  {
    if (!((*itItem)).IsNull()) // Nillable
    {
      staff::DataObject tdoParamItem = rdoParam.CreateChild("FdWsSonderdiensteStruct");
      tdoParamItem.SetNamespaceUriGenPrefix("http://fdisk.at/");
      tdoParamItem << *(*itItem);
    }
    else
    {
      rdoParam.CreateChild("FdWsSonderdiensteStruct").SetNil();
    }
  }

  return rdoParam;
}

const DataObject& operator>>(const DataObject& rdoParam, struct ::ArrayOfFdWsSonderdiensteStruct& rstStruct)
{
  for (staff::DataObject tdoItem = rdoParam.FirstChild(); !tdoItem.IsNull(); tdoItem.SetNextSibling())
  {
    if (tdoItem.GetLocalName() == "FdWsSonderdiensteStruct")
    {
      (rstStruct.FdWsSonderdiensteStruct).resize((rstStruct.FdWsSonderdiensteStruct).size() + 1);
      if (!tdoItem.IsNil()) // Nillable
      {
        tdoItem >> *(rstStruct.FdWsSonderdiensteStruct).back();
      }
    }
  }

  return rdoParam;
}

DataObject& operator<<(DataObject& rdoParam, const struct ::FdWsSonderdiensteStruct& rstStruct)
{
  // serialize parent struct
  rdoParam << static_cast< const struct ::Writer& >(rstStruct);

  rdoParam.CreateChild("FdiskIdInstanzen", rstStruct.FdiskIdInstanzen).SetNamespaceUriGenPrefix("http://fdisk.at/");
  rdoParam.CreateChild("Gruendungsdatum", rstStruct.Gruendungsdatum).SetNamespaceUriGenPrefix("http://fdisk.at/");
  if (!(rstStruct.Instanznummer).IsNull()) // Optional
  {
    rdoParam.CreateChild("Instanznummer", *rstStruct.Instanznummer).SetNamespaceUriGenPrefix("http://fdisk.at/");
  }
  if (!(rstStruct.Instanzname).IsNull()) // Optional
  {
    rdoParam.CreateChild("Instanzname", *rstStruct.Instanzname).SetNamespaceUriGenPrefix("http://fdisk.at/");
  }
  if (!(rstStruct.InstanzArt).IsNull()) // Optional
  {
    rdoParam.CreateChild("InstanzArt", *rstStruct.InstanzArt).SetNamespaceUriGenPrefix("http://fdisk.at/");
  }
  if (!(rstStruct.InstanzTyp).IsNull()) // Optional
  {
    rdoParam.CreateChild("InstanzTyp", *rstStruct.InstanzTyp).SetNamespaceUriGenPrefix("http://fdisk.at/");
  }
  if (!(rstStruct.Strasse).IsNull()) // Optional
  {
    rdoParam.CreateChild("Strasse", *rstStruct.Strasse).SetNamespaceUriGenPrefix("http://fdisk.at/");
  }
  if (!(rstStruct.Nummer).IsNull()) // Optional
  {
    rdoParam.CreateChild("Nummer", *rstStruct.Nummer).SetNamespaceUriGenPrefix("http://fdisk.at/");
  }
  if (!(rstStruct.Stiege).IsNull()) // Optional
  {
    rdoParam.CreateChild("Stiege", *rstStruct.Stiege).SetNamespaceUriGenPrefix("http://fdisk.at/");
  }
  if (!(rstStruct.Kathastralgemeinde).IsNull()) // Optional
  {
    rdoParam.CreateChild("Kathastralgemeinde", *rstStruct.Kathastralgemeinde).SetNamespaceUriGenPrefix("http://fdisk.at/");
  }
  if (!(rstStruct.PLZ).IsNull()) // Optional
  {
    rdoParam.CreateChild("PLZ", *rstStruct.PLZ).SetNamespaceUriGenPrefix("http://fdisk.at/");
  }
  if (!(rstStruct.Ort).IsNull()) // Optional
  {
    rdoParam.CreateChild("Ort", *rstStruct.Ort).SetNamespaceUriGenPrefix("http://fdisk.at/");
  }
  if (!(rstStruct.ErreichbarkeitMail).IsNull()) // Optional
  {
    rdoParam.CreateChild("ErreichbarkeitMail", *rstStruct.ErreichbarkeitMail).SetNamespaceUriGenPrefix("http://fdisk.at/");
  }
  if (!(rstStruct.ErreichbarkeitMobil).IsNull()) // Optional
  {
    rdoParam.CreateChild("ErreichbarkeitMobil", *rstStruct.ErreichbarkeitMobil).SetNamespaceUriGenPrefix("http://fdisk.at/");
  }
  if (!(rstStruct.ErreichbarkeitFestnetz).IsNull()) // Optional
  {
    rdoParam.CreateChild("ErreichbarkeitFestnetz", *rstStruct.ErreichbarkeitFestnetz).SetNamespaceUriGenPrefix("http://fdisk.at/");
  }
  if (!(rstStruct.ErreichbarkeitFax).IsNull()) // Optional
  {
    rdoParam.CreateChild("ErreichbarkeitFax", *rstStruct.ErreichbarkeitFax).SetNamespaceUriGenPrefix("http://fdisk.at/");
  }
  if (!(rstStruct.ErreichbarkeitGruppenRic).IsNull()) // Optional
  {
    rdoParam.CreateChild("ErreichbarkeitGruppenRic", *rstStruct.ErreichbarkeitGruppenRic).SetNamespaceUriGenPrefix("http://fdisk.at/");
  }
  if (!(rstStruct.ErreichbarkeitUrl).IsNull()) // Optional
  {
    rdoParam.CreateChild("ErreichbarkeitUrl", *rstStruct.ErreichbarkeitUrl).SetNamespaceUriGenPrefix("http://fdisk.at/");
  }
  rdoParam.CreateChild("LetzteAenderung", rstStruct.LetzteAenderung).SetNamespaceUriGenPrefix("http://fdisk.at/");
  if (!(rstStruct.UAFKDONummer).IsNull()) // Optional
  {
    rdoParam.CreateChild("UAFKDONummer", *rstStruct.UAFKDONummer).SetNamespaceUriGenPrefix("http://fdisk.at/");
  }
  if (!(rstStruct.UAFKDOName).IsNull()) // Optional
  {
    rdoParam.CreateChild("UAFKDOName", *rstStruct.UAFKDOName).SetNamespaceUriGenPrefix("http://fdisk.at/");
  }
  if (!(rstStruct.UAFKDOInstanzartLang).IsNull()) // Optional
  {
    rdoParam.CreateChild("UAFKDOInstanzartLang", *rstStruct.UAFKDOInstanzartLang).SetNamespaceUriGenPrefix("http://fdisk.at/");
  }
  if (!(rstStruct.BFKDONummer).IsNull()) // Optional
  {
    rdoParam.CreateChild("BFKDONummer", *rstStruct.BFKDONummer).SetNamespaceUriGenPrefix("http://fdisk.at/");
  }
  if (!(rstStruct.BFKDOName).IsNull()) // Optional
  {
    rdoParam.CreateChild("BFKDOName", *rstStruct.BFKDOName).SetNamespaceUriGenPrefix("http://fdisk.at/");
  }
  if (!(rstStruct.BFKDOInstanzartLang).IsNull()) // Optional
  {
    rdoParam.CreateChild("BFKDOInstanzartLang", *rstStruct.BFKDOInstanzartLang).SetNamespaceUriGenPrefix("http://fdisk.at/");
  }
  if (!(rstStruct.AFKDONummer).IsNull()) // Optional
  {
    rdoParam.CreateChild("AFKDONummer", *rstStruct.AFKDONummer).SetNamespaceUriGenPrefix("http://fdisk.at/");
  }
  if (!(rstStruct.AFKDOName).IsNull()) // Optional
  {
    rdoParam.CreateChild("AFKDOName", *rstStruct.AFKDOName).SetNamespaceUriGenPrefix("http://fdisk.at/");
  }
  if (!(rstStruct.AFKDOInstanzartLang).IsNull()) // Optional
  {
    rdoParam.CreateChild("AFKDOInstanzartLang", *rstStruct.AFKDOInstanzartLang).SetNamespaceUriGenPrefix("http://fdisk.at/");
  }
  return rdoParam;
}

const DataObject& operator>>(const DataObject& rdoParam, struct ::FdWsSonderdiensteStruct& rstStruct)
{
  // deserialize parent struct
  rdoParam >> static_cast< struct ::Writer& >(rstStruct);

  rdoParam.GetChildValueByLocalName("FdiskIdInstanzen", rstStruct.FdiskIdInstanzen);
  rdoParam.GetChildValueByLocalName("Gruendungsdatum", rstStruct.Gruendungsdatum);
  const staff::DataObject& rdoParamInstanznummer = rdoParam.GetChildByLocalNameOpt("Instanznummer");
  if (!rdoParamInstanznummer.IsNull()) // optional
  {
    rdoParamInstanznummer.GetValue(*rstStruct.Instanznummer);
  }
  const staff::DataObject& rdoParamInstanzname = rdoParam.GetChildByLocalNameOpt("Instanzname");
  if (!rdoParamInstanzname.IsNull()) // optional
  {
    rdoParamInstanzname.GetValue(*rstStruct.Instanzname);
  }
  const staff::DataObject& rdoParamInstanzArt = rdoParam.GetChildByLocalNameOpt("InstanzArt");
  if (!rdoParamInstanzArt.IsNull()) // optional
  {
    rdoParamInstanzArt.GetValue(*rstStruct.InstanzArt);
  }
  const staff::DataObject& rdoParamInstanzTyp = rdoParam.GetChildByLocalNameOpt("InstanzTyp");
  if (!rdoParamInstanzTyp.IsNull()) // optional
  {
    rdoParamInstanzTyp.GetValue(*rstStruct.InstanzTyp);
  }
  const staff::DataObject& rdoParamStrasse = rdoParam.GetChildByLocalNameOpt("Strasse");
  if (!rdoParamStrasse.IsNull()) // optional
  {
    rdoParamStrasse.GetValue(*rstStruct.Strasse);
  }
  const staff::DataObject& rdoParamNummer = rdoParam.GetChildByLocalNameOpt("Nummer");
  if (!rdoParamNummer.IsNull()) // optional
  {
    rdoParamNummer.GetValue(*rstStruct.Nummer);
  }
  const staff::DataObject& rdoParamStiege = rdoParam.GetChildByLocalNameOpt("Stiege");
  if (!rdoParamStiege.IsNull()) // optional
  {
    rdoParamStiege.GetValue(*rstStruct.Stiege);
  }
  const staff::DataObject& rdoParamKathastralgemeinde = rdoParam.GetChildByLocalNameOpt("Kathastralgemeinde");
  if (!rdoParamKathastralgemeinde.IsNull()) // optional
  {
    rdoParamKathastralgemeinde.GetValue(*rstStruct.Kathastralgemeinde);
  }
  const staff::DataObject& rdoParamPLZ = rdoParam.GetChildByLocalNameOpt("PLZ");
  if (!rdoParamPLZ.IsNull()) // optional
  {
    rdoParamPLZ.GetValue(*rstStruct.PLZ);
  }
  const staff::DataObject& rdoParamOrt = rdoParam.GetChildByLocalNameOpt("Ort");
  if (!rdoParamOrt.IsNull()) // optional
  {
    rdoParamOrt.GetValue(*rstStruct.Ort);
  }
  const staff::DataObject& rdoParamErreichbarkeitMail = rdoParam.GetChildByLocalNameOpt("ErreichbarkeitMail");
  if (!rdoParamErreichbarkeitMail.IsNull()) // optional
  {
    rdoParamErreichbarkeitMail.GetValue(*rstStruct.ErreichbarkeitMail);
  }
  const staff::DataObject& rdoParamErreichbarkeitMobil = rdoParam.GetChildByLocalNameOpt("ErreichbarkeitMobil");
  if (!rdoParamErreichbarkeitMobil.IsNull()) // optional
  {
    rdoParamErreichbarkeitMobil.GetValue(*rstStruct.ErreichbarkeitMobil);
  }
  const staff::DataObject& rdoParamErreichbarkeitFestnetz = rdoParam.GetChildByLocalNameOpt("ErreichbarkeitFestnetz");
  if (!rdoParamErreichbarkeitFestnetz.IsNull()) // optional
  {
    rdoParamErreichbarkeitFestnetz.GetValue(*rstStruct.ErreichbarkeitFestnetz);
  }
  const staff::DataObject& rdoParamErreichbarkeitFax = rdoParam.GetChildByLocalNameOpt("ErreichbarkeitFax");
  if (!rdoParamErreichbarkeitFax.IsNull()) // optional
  {
    rdoParamErreichbarkeitFax.GetValue(*rstStruct.ErreichbarkeitFax);
  }
  const staff::DataObject& rdoParamErreichbarkeitGruppenRic = rdoParam.GetChildByLocalNameOpt("ErreichbarkeitGruppenRic");
  if (!rdoParamErreichbarkeitGruppenRic.IsNull()) // optional
  {
    rdoParamErreichbarkeitGruppenRic.GetValue(*rstStruct.ErreichbarkeitGruppenRic);
  }
  const staff::DataObject& rdoParamErreichbarkeitUrl = rdoParam.GetChildByLocalNameOpt("ErreichbarkeitUrl");
  if (!rdoParamErreichbarkeitUrl.IsNull()) // optional
  {
    rdoParamErreichbarkeitUrl.GetValue(*rstStruct.ErreichbarkeitUrl);
  }
  rdoParam.GetChildValueByLocalName("LetzteAenderung", rstStruct.LetzteAenderung);
  const staff::DataObject& rdoParamUAFKDONummer = rdoParam.GetChildByLocalNameOpt("UAFKDONummer");
  if (!rdoParamUAFKDONummer.IsNull()) // optional
  {
    rdoParamUAFKDONummer.GetValue(*rstStruct.UAFKDONummer);
  }
  const staff::DataObject& rdoParamUAFKDOName = rdoParam.GetChildByLocalNameOpt("UAFKDOName");
  if (!rdoParamUAFKDOName.IsNull()) // optional
  {
    rdoParamUAFKDOName.GetValue(*rstStruct.UAFKDOName);
  }
  const staff::DataObject& rdoParamUAFKDOInstanzartLang = rdoParam.GetChildByLocalNameOpt("UAFKDOInstanzartLang");
  if (!rdoParamUAFKDOInstanzartLang.IsNull()) // optional
  {
    rdoParamUAFKDOInstanzartLang.GetValue(*rstStruct.UAFKDOInstanzartLang);
  }
  const staff::DataObject& rdoParamBFKDONummer = rdoParam.GetChildByLocalNameOpt("BFKDONummer");
  if (!rdoParamBFKDONummer.IsNull()) // optional
  {
    rdoParamBFKDONummer.GetValue(*rstStruct.BFKDONummer);
  }
  const staff::DataObject& rdoParamBFKDOName = rdoParam.GetChildByLocalNameOpt("BFKDOName");
  if (!rdoParamBFKDOName.IsNull()) // optional
  {
    rdoParamBFKDOName.GetValue(*rstStruct.BFKDOName);
  }
  const staff::DataObject& rdoParamBFKDOInstanzartLang = rdoParam.GetChildByLocalNameOpt("BFKDOInstanzartLang");
  if (!rdoParamBFKDOInstanzartLang.IsNull()) // optional
  {
    rdoParamBFKDOInstanzartLang.GetValue(*rstStruct.BFKDOInstanzartLang);
  }
  const staff::DataObject& rdoParamAFKDONummer = rdoParam.GetChildByLocalNameOpt("AFKDONummer");
  if (!rdoParamAFKDONummer.IsNull()) // optional
  {
    rdoParamAFKDONummer.GetValue(*rstStruct.AFKDONummer);
  }
  const staff::DataObject& rdoParamAFKDOName = rdoParam.GetChildByLocalNameOpt("AFKDOName");
  if (!rdoParamAFKDOName.IsNull()) // optional
  {
    rdoParamAFKDOName.GetValue(*rstStruct.AFKDOName);
  }
  const staff::DataObject& rdoParamAFKDOInstanzartLang = rdoParam.GetChildByLocalNameOpt("AFKDOInstanzartLang");
  if (!rdoParamAFKDOInstanzartLang.IsNull()) // optional
  {
    rdoParamAFKDOInstanzartLang.GetValue(*rstStruct.AFKDOInstanzartLang);
  }
  return rdoParam;
}

DataObject& operator<<(DataObject& rdoParam, const struct ::ArrayOfFdWsFunktionenStruct& rstStruct)
{
  rdoParam.SetNamespaceUriGenPrefix("http://fdisk.at/");
  for (std::list< staff::Nillable< ::FdWsFunktionenStruct > >::const_iterator itItem = (rstStruct.FdWsFunktionenStruct).begin(), itItemEnd = (rstStruct.FdWsFunktionenStruct).end();
       itItem != itItemEnd; ++itItem)
  {
    if (!((*itItem)).IsNull()) // Nillable
    {
      staff::DataObject tdoParamItem = rdoParam.CreateChild("FdWsFunktionenStruct");
      tdoParamItem.SetNamespaceUriGenPrefix("http://fdisk.at/");
      tdoParamItem << *(*itItem);
    }
    else
    {
      rdoParam.CreateChild("FdWsFunktionenStruct").SetNil();
    }
  }

  return rdoParam;
}

const DataObject& operator>>(const DataObject& rdoParam, struct ::ArrayOfFdWsFunktionenStruct& rstStruct)
{
  for (staff::DataObject tdoItem = rdoParam.FirstChild(); !tdoItem.IsNull(); tdoItem.SetNextSibling())
  {
    if (tdoItem.GetLocalName() == "FdWsFunktionenStruct")
    {
      (rstStruct.FdWsFunktionenStruct).resize((rstStruct.FdWsFunktionenStruct).size() + 1);
      if (!tdoItem.IsNil()) // Nillable
      {
        tdoItem >> *(rstStruct.FdWsFunktionenStruct).back();
      }
    }
  }

  return rdoParam;
}

DataObject& operator<<(DataObject& rdoParam, const struct ::FdWsFunktionenStruct& rstStruct)
{
  // serialize parent struct
  rdoParam << static_cast< const struct ::Writer& >(rstStruct);

  rdoParam.CreateChild("FdiskIdFunktionen", rstStruct.FdiskIdFunktionen).SetNamespaceUriGenPrefix("http://fdisk.at/");
  if (!(rstStruct.Langbezeichnung).IsNull()) // Optional
  {
    rdoParam.CreateChild("Langbezeichnung", *rstStruct.Langbezeichnung).SetNamespaceUriGenPrefix("http://fdisk.at/");
  }
  if (!(rstStruct.Kurzbezeichnung).IsNull()) // Optional
  {
    rdoParam.CreateChild("Kurzbezeichnung", *rstStruct.Kurzbezeichnung).SetNamespaceUriGenPrefix("http://fdisk.at/");
  }
  rdoParam.CreateChild("LetzteAenderung", rstStruct.LetzteAenderung).SetNamespaceUriGenPrefix("http://fdisk.at/");
  return rdoParam;
}

const DataObject& operator>>(const DataObject& rdoParam, struct ::FdWsFunktionenStruct& rstStruct)
{
  // deserialize parent struct
  rdoParam >> static_cast< struct ::Writer& >(rstStruct);

  rdoParam.GetChildValueByLocalName("FdiskIdFunktionen", rstStruct.FdiskIdFunktionen);
  const staff::DataObject& rdoParamLangbezeichnung = rdoParam.GetChildByLocalNameOpt("Langbezeichnung");
  if (!rdoParamLangbezeichnung.IsNull()) // optional
  {
    rdoParamLangbezeichnung.GetValue(*rstStruct.Langbezeichnung);
  }
  const staff::DataObject& rdoParamKurzbezeichnung = rdoParam.GetChildByLocalNameOpt("Kurzbezeichnung");
  if (!rdoParamKurzbezeichnung.IsNull()) // optional
  {
    rdoParamKurzbezeichnung.GetValue(*rstStruct.Kurzbezeichnung);
  }
  rdoParam.GetChildValueByLocalName("LetzteAenderung", rstStruct.LetzteAenderung);
  return rdoParam;
}

DataObject& operator<<(DataObject& rdoParam, const struct ::ArrayOfFdWsFunktionaereStruct& rstStruct)
{
  rdoParam.SetNamespaceUriGenPrefix("http://fdisk.at/");
  for (std::list< staff::Nillable< ::FdWsFunktionaereStruct > >::const_iterator itItem = (rstStruct.FdWsFunktionaereStruct).begin(), itItemEnd = (rstStruct.FdWsFunktionaereStruct).end();
       itItem != itItemEnd; ++itItem)
  {
    if (!((*itItem)).IsNull()) // Nillable
    {
      staff::DataObject tdoParamItem = rdoParam.CreateChild("FdWsFunktionaereStruct");
      tdoParamItem.SetNamespaceUriGenPrefix("http://fdisk.at/");
      tdoParamItem << *(*itItem);
    }
    else
    {
      rdoParam.CreateChild("FdWsFunktionaereStruct").SetNil();
    }
  }

  return rdoParam;
}

const DataObject& operator>>(const DataObject& rdoParam, struct ::ArrayOfFdWsFunktionaereStruct& rstStruct)
{
  for (staff::DataObject tdoItem = rdoParam.FirstChild(); !tdoItem.IsNull(); tdoItem.SetNextSibling())
  {
    if (tdoItem.GetLocalName() == "FdWsFunktionaereStruct")
    {
      (rstStruct.FdWsFunktionaereStruct).resize((rstStruct.FdWsFunktionaereStruct).size() + 1);
      if (!tdoItem.IsNil()) // Nillable
      {
        tdoItem >> *(rstStruct.FdWsFunktionaereStruct).back();
      }
    }
  }

  return rdoParam;
}

DataObject& operator<<(DataObject& rdoParam, const struct ::FdWsFunktionaereStruct& rstStruct)
{
  // serialize parent struct
  rdoParam << static_cast< const struct ::Writer& >(rstStruct);

  rdoParam.CreateChild("FdiskIdFunktionen", rstStruct.FdiskIdFunktionen).SetNamespaceUriGenPrefix("http://fdisk.at/");
  rdoParam.CreateChild("FdiskIdMitglieder", rstStruct.FdiskIdMitglieder).SetNamespaceUriGenPrefix("http://fdisk.at/");
  if (!(rstStruct.InstanzNummer).IsNull()) // Optional
  {
    rdoParam.CreateChild("InstanzNummer", *rstStruct.InstanzNummer).SetNamespaceUriGenPrefix("http://fdisk.at/");
  }
  if (!(rstStruct.Standesbuchnummer).IsNull()) // Optional
  {
    rdoParam.CreateChild("Standesbuchnummer", *rstStruct.Standesbuchnummer).SetNamespaceUriGenPrefix("http://fdisk.at/");
  }
  rdoParam.CreateChild("GueltigVon", rstStruct.GueltigVon).SetNamespaceUriGenPrefix("http://fdisk.at/");
  rdoParam.CreateChild("GueltigBis", rstStruct.GueltigBis).SetNamespaceUriGenPrefix("http://fdisk.at/");
  rdoParam.CreateChild("LetzteAenderung", rstStruct.LetzteAenderung).SetNamespaceUriGenPrefix("http://fdisk.at/");
  if (!(rstStruct.Vorname).IsNull()) // Optional
  {
    rdoParam.CreateChild("Vorname", *rstStruct.Vorname).SetNamespaceUriGenPrefix("http://fdisk.at/");
  }
  if (!(rstStruct.Zuname).IsNull()) // Optional
  {
    rdoParam.CreateChild("Zuname", *rstStruct.Zuname).SetNamespaceUriGenPrefix("http://fdisk.at/");
  }
  if (!(rstStruct.DienstgradKurzbezeichnung).IsNull()) // Optional
  {
    rdoParam.CreateChild("DienstgradKurzbezeichnung", *rstStruct.DienstgradKurzbezeichnung).SetNamespaceUriGenPrefix("http://fdisk.at/");
  }
  if (!(rstStruct.FunktionenKurzBezeichnung).IsNull()) // Optional
  {
    rdoParam.CreateChild("FunktionenKurzBezeichnung", *rstStruct.FunktionenKurzBezeichnung).SetNamespaceUriGenPrefix("http://fdisk.at/");
  }
  if (!(rstStruct.InstanzArt).IsNull()) // Optional
  {
    rdoParam.CreateChild("InstanzArt", *rstStruct.InstanzArt).SetNamespaceUriGenPrefix("http://fdisk.at/");
  }
  rdoParam.CreateChild("FdiskIdPersonen", rstStruct.FdiskIdPersonen).SetNamespaceUriGenPrefix("http://fdisk.at/");
  return rdoParam;
}

const DataObject& operator>>(const DataObject& rdoParam, struct ::FdWsFunktionaereStruct& rstStruct)
{
  // deserialize parent struct
  rdoParam >> static_cast< struct ::Writer& >(rstStruct);

  rdoParam.GetChildValueByLocalName("FdiskIdFunktionen", rstStruct.FdiskIdFunktionen);
  rdoParam.GetChildValueByLocalName("FdiskIdMitglieder", rstStruct.FdiskIdMitglieder);
  const staff::DataObject& rdoParamInstanzNummer = rdoParam.GetChildByLocalNameOpt("InstanzNummer");
  if (!rdoParamInstanzNummer.IsNull()) // optional
  {
    rdoParamInstanzNummer.GetValue(*rstStruct.InstanzNummer);
  }
  const staff::DataObject& rdoParamStandesbuchnummer = rdoParam.GetChildByLocalNameOpt("Standesbuchnummer");
  if (!rdoParamStandesbuchnummer.IsNull()) // optional
  {
    rdoParamStandesbuchnummer.GetValue(*rstStruct.Standesbuchnummer);
  }
  rdoParam.GetChildValueByLocalName("GueltigVon", rstStruct.GueltigVon);
  rdoParam.GetChildValueByLocalName("GueltigBis", rstStruct.GueltigBis);
  rdoParam.GetChildValueByLocalName("LetzteAenderung", rstStruct.LetzteAenderung);
  const staff::DataObject& rdoParamVorname = rdoParam.GetChildByLocalNameOpt("Vorname");
  if (!rdoParamVorname.IsNull()) // optional
  {
    rdoParamVorname.GetValue(*rstStruct.Vorname);
  }
  const staff::DataObject& rdoParamZuname = rdoParam.GetChildByLocalNameOpt("Zuname");
  if (!rdoParamZuname.IsNull()) // optional
  {
    rdoParamZuname.GetValue(*rstStruct.Zuname);
  }
  const staff::DataObject& rdoParamDienstgradKurzbezeichnung = rdoParam.GetChildByLocalNameOpt("DienstgradKurzbezeichnung");
  if (!rdoParamDienstgradKurzbezeichnung.IsNull()) // optional
  {
    rdoParamDienstgradKurzbezeichnung.GetValue(*rstStruct.DienstgradKurzbezeichnung);
  }
  const staff::DataObject& rdoParamFunktionenKurzBezeichnung = rdoParam.GetChildByLocalNameOpt("FunktionenKurzBezeichnung");
  if (!rdoParamFunktionenKurzBezeichnung.IsNull()) // optional
  {
    rdoParamFunktionenKurzBezeichnung.GetValue(*rstStruct.FunktionenKurzBezeichnung);
  }
  const staff::DataObject& rdoParamInstanzArt = rdoParam.GetChildByLocalNameOpt("InstanzArt");
  if (!rdoParamInstanzArt.IsNull()) // optional
  {
    rdoParamInstanzArt.GetValue(*rstStruct.InstanzArt);
  }
  rdoParam.GetChildValueByLocalName("FdiskIdPersonen", rstStruct.FdiskIdPersonen);
  return rdoParam;
}

DataObject& operator<<(DataObject& rdoParam, const struct ::ArrayOfFdWsInstanzenStruct& rstStruct)
{
  rdoParam.SetNamespaceUriGenPrefix("http://fdisk.at/");
  for (std::list< staff::Nillable< ::FdWsInstanzenStruct > >::const_iterator itItem = (rstStruct.FdWsInstanzenStruct).begin(), itItemEnd = (rstStruct.FdWsInstanzenStruct).end();
       itItem != itItemEnd; ++itItem)
  {
    if (!((*itItem)).IsNull()) // Nillable
    {
      staff::DataObject tdoParamItem = rdoParam.CreateChild("FdWsInstanzenStruct");
      tdoParamItem.SetNamespaceUriGenPrefix("http://fdisk.at/");
      tdoParamItem << *(*itItem);
    }
    else
    {
      rdoParam.CreateChild("FdWsInstanzenStruct").SetNil();
    }
  }

  return rdoParam;
}

const DataObject& operator>>(const DataObject& rdoParam, struct ::ArrayOfFdWsInstanzenStruct& rstStruct)
{
  for (staff::DataObject tdoItem = rdoParam.FirstChild(); !tdoItem.IsNull(); tdoItem.SetNextSibling())
  {
    if (tdoItem.GetLocalName() == "FdWsInstanzenStruct")
    {
      (rstStruct.FdWsInstanzenStruct).resize((rstStruct.FdWsInstanzenStruct).size() + 1);
      if (!tdoItem.IsNil()) // Nillable
      {
        tdoItem >> *(rstStruct.FdWsInstanzenStruct).back();
      }
    }
  }

  return rdoParam;
}

DataObject& operator<<(DataObject& rdoParam, const struct ::FdWsInstanzenStruct& rstStruct)
{
  // serialize parent struct
  rdoParam << static_cast< const struct ::Writer& >(rstStruct);

  rdoParam.CreateChild("FdiskIdInstanzen", rstStruct.FdiskIdInstanzen).SetNamespaceUriGenPrefix("http://fdisk.at/");
  rdoParam.CreateChild("Gruendungsdatum", rstStruct.Gruendungsdatum).SetNamespaceUriGenPrefix("http://fdisk.at/");
  if (!(rstStruct.Instanznummer).IsNull()) // Optional
  {
    rdoParam.CreateChild("Instanznummer", *rstStruct.Instanznummer).SetNamespaceUriGenPrefix("http://fdisk.at/");
  }
  if (!(rstStruct.Instanzname).IsNull()) // Optional
  {
    rdoParam.CreateChild("Instanzname", *rstStruct.Instanzname).SetNamespaceUriGenPrefix("http://fdisk.at/");
  }
  if (!(rstStruct.InstanzArt).IsNull()) // Optional
  {
    rdoParam.CreateChild("InstanzArt", *rstStruct.InstanzArt).SetNamespaceUriGenPrefix("http://fdisk.at/");
  }
  if (!(rstStruct.InstanzTyp).IsNull()) // Optional
  {
    rdoParam.CreateChild("InstanzTyp", *rstStruct.InstanzTyp).SetNamespaceUriGenPrefix("http://fdisk.at/");
  }
  if (!(rstStruct.Strasse).IsNull()) // Optional
  {
    rdoParam.CreateChild("Strasse", *rstStruct.Strasse).SetNamespaceUriGenPrefix("http://fdisk.at/");
  }
  if (!(rstStruct.Nummer).IsNull()) // Optional
  {
    rdoParam.CreateChild("Nummer", *rstStruct.Nummer).SetNamespaceUriGenPrefix("http://fdisk.at/");
  }
  if (!(rstStruct.Stiege).IsNull()) // Optional
  {
    rdoParam.CreateChild("Stiege", *rstStruct.Stiege).SetNamespaceUriGenPrefix("http://fdisk.at/");
  }
  if (!(rstStruct.Kathastralgemeinde).IsNull()) // Optional
  {
    rdoParam.CreateChild("Kathastralgemeinde", *rstStruct.Kathastralgemeinde).SetNamespaceUriGenPrefix("http://fdisk.at/");
  }
  if (!(rstStruct.PLZ).IsNull()) // Optional
  {
    rdoParam.CreateChild("PLZ", *rstStruct.PLZ).SetNamespaceUriGenPrefix("http://fdisk.at/");
  }
  if (!(rstStruct.Ort).IsNull()) // Optional
  {
    rdoParam.CreateChild("Ort", *rstStruct.Ort).SetNamespaceUriGenPrefix("http://fdisk.at/");
  }
  if (!(rstStruct.ErreichbarkeitMail).IsNull()) // Optional
  {
    rdoParam.CreateChild("ErreichbarkeitMail", *rstStruct.ErreichbarkeitMail).SetNamespaceUriGenPrefix("http://fdisk.at/");
  }
  if (!(rstStruct.ErreichbarkeitMobil).IsNull()) // Optional
  {
    rdoParam.CreateChild("ErreichbarkeitMobil", *rstStruct.ErreichbarkeitMobil).SetNamespaceUriGenPrefix("http://fdisk.at/");
  }
  if (!(rstStruct.ErreichbarkeitFestnetz).IsNull()) // Optional
  {
    rdoParam.CreateChild("ErreichbarkeitFestnetz", *rstStruct.ErreichbarkeitFestnetz).SetNamespaceUriGenPrefix("http://fdisk.at/");
  }
  if (!(rstStruct.ErreichbarkeitFax).IsNull()) // Optional
  {
    rdoParam.CreateChild("ErreichbarkeitFax", *rstStruct.ErreichbarkeitFax).SetNamespaceUriGenPrefix("http://fdisk.at/");
  }
  if (!(rstStruct.ErreichbarkeitGruppenRic).IsNull()) // Optional
  {
    rdoParam.CreateChild("ErreichbarkeitGruppenRic", *rstStruct.ErreichbarkeitGruppenRic).SetNamespaceUriGenPrefix("http://fdisk.at/");
  }
  if (!(rstStruct.ErreichbarkeitUrl).IsNull()) // Optional
  {
    rdoParam.CreateChild("ErreichbarkeitUrl", *rstStruct.ErreichbarkeitUrl).SetNamespaceUriGenPrefix("http://fdisk.at/");
  }
  rdoParam.CreateChild("LetzteAenderung", rstStruct.LetzteAenderung).SetNamespaceUriGenPrefix("http://fdisk.at/");
  if (!(rstStruct.UAFKDONummer).IsNull()) // Optional
  {
    rdoParam.CreateChild("UAFKDONummer", *rstStruct.UAFKDONummer).SetNamespaceUriGenPrefix("http://fdisk.at/");
  }
  if (!(rstStruct.UAFKDOName).IsNull()) // Optional
  {
    rdoParam.CreateChild("UAFKDOName", *rstStruct.UAFKDOName).SetNamespaceUriGenPrefix("http://fdisk.at/");
  }
  if (!(rstStruct.UAFKDOInstanzartLang).IsNull()) // Optional
  {
    rdoParam.CreateChild("UAFKDOInstanzartLang", *rstStruct.UAFKDOInstanzartLang).SetNamespaceUriGenPrefix("http://fdisk.at/");
  }
  if (!(rstStruct.BFKDONummer).IsNull()) // Optional
  {
    rdoParam.CreateChild("BFKDONummer", *rstStruct.BFKDONummer).SetNamespaceUriGenPrefix("http://fdisk.at/");
  }
  if (!(rstStruct.BFKDOName).IsNull()) // Optional
  {
    rdoParam.CreateChild("BFKDOName", *rstStruct.BFKDOName).SetNamespaceUriGenPrefix("http://fdisk.at/");
  }
  if (!(rstStruct.BFKDOInstanzartLang).IsNull()) // Optional
  {
    rdoParam.CreateChild("BFKDOInstanzartLang", *rstStruct.BFKDOInstanzartLang).SetNamespaceUriGenPrefix("http://fdisk.at/");
  }
  if (!(rstStruct.AFKDONummer).IsNull()) // Optional
  {
    rdoParam.CreateChild("AFKDONummer", *rstStruct.AFKDONummer).SetNamespaceUriGenPrefix("http://fdisk.at/");
  }
  if (!(rstStruct.AFKDOName).IsNull()) // Optional
  {
    rdoParam.CreateChild("AFKDOName", *rstStruct.AFKDOName).SetNamespaceUriGenPrefix("http://fdisk.at/");
  }
  if (!(rstStruct.AFKDOInstanzartLang).IsNull()) // Optional
  {
    rdoParam.CreateChild("AFKDOInstanzartLang", *rstStruct.AFKDOInstanzartLang).SetNamespaceUriGenPrefix("http://fdisk.at/");
  }
  if (!(rstStruct.GemeindeName).IsNull()) // Optional
  {
    rdoParam.CreateChild("GemeindeName", *rstStruct.GemeindeName).SetNamespaceUriGenPrefix("http://fdisk.at/");
  }
  rdoParam.CreateChild("Feuerwachen", rstStruct.Feuerwachen).SetNamespaceUriGenPrefix("http://fdisk.at/");
  rdoParam.CreateChild("HatJugend", rstStruct.HatJugend).SetNamespaceUriGenPrefix("http://fdisk.at/");
  return rdoParam;
}

const DataObject& operator>>(const DataObject& rdoParam, struct ::FdWsInstanzenStruct& rstStruct)
{
  // deserialize parent struct
  rdoParam >> static_cast< struct ::Writer& >(rstStruct);

  rdoParam.GetChildValueByLocalName("FdiskIdInstanzen", rstStruct.FdiskIdInstanzen);
  rdoParam.GetChildValueByLocalName("Gruendungsdatum", rstStruct.Gruendungsdatum);
  const staff::DataObject& rdoParamInstanznummer = rdoParam.GetChildByLocalNameOpt("Instanznummer");
  if (!rdoParamInstanznummer.IsNull()) // optional
  {
    rdoParamInstanznummer.GetValue(*rstStruct.Instanznummer);
  }
  const staff::DataObject& rdoParamInstanzname = rdoParam.GetChildByLocalNameOpt("Instanzname");
  if (!rdoParamInstanzname.IsNull()) // optional
  {
    rdoParamInstanzname.GetValue(*rstStruct.Instanzname);
  }
  const staff::DataObject& rdoParamInstanzArt = rdoParam.GetChildByLocalNameOpt("InstanzArt");
  if (!rdoParamInstanzArt.IsNull()) // optional
  {
    rdoParamInstanzArt.GetValue(*rstStruct.InstanzArt);
  }
  const staff::DataObject& rdoParamInstanzTyp = rdoParam.GetChildByLocalNameOpt("InstanzTyp");
  if (!rdoParamInstanzTyp.IsNull()) // optional
  {
    rdoParamInstanzTyp.GetValue(*rstStruct.InstanzTyp);
  }
  const staff::DataObject& rdoParamStrasse = rdoParam.GetChildByLocalNameOpt("Strasse");
  if (!rdoParamStrasse.IsNull()) // optional
  {
    rdoParamStrasse.GetValue(*rstStruct.Strasse);
  }
  const staff::DataObject& rdoParamNummer = rdoParam.GetChildByLocalNameOpt("Nummer");
  if (!rdoParamNummer.IsNull()) // optional
  {
    rdoParamNummer.GetValue(*rstStruct.Nummer);
  }
  const staff::DataObject& rdoParamStiege = rdoParam.GetChildByLocalNameOpt("Stiege");
  if (!rdoParamStiege.IsNull()) // optional
  {
    rdoParamStiege.GetValue(*rstStruct.Stiege);
  }
  const staff::DataObject& rdoParamKathastralgemeinde = rdoParam.GetChildByLocalNameOpt("Kathastralgemeinde");
  if (!rdoParamKathastralgemeinde.IsNull()) // optional
  {
    rdoParamKathastralgemeinde.GetValue(*rstStruct.Kathastralgemeinde);
  }
  const staff::DataObject& rdoParamPLZ = rdoParam.GetChildByLocalNameOpt("PLZ");
  if (!rdoParamPLZ.IsNull()) // optional
  {
    rdoParamPLZ.GetValue(*rstStruct.PLZ);
  }
  const staff::DataObject& rdoParamOrt = rdoParam.GetChildByLocalNameOpt("Ort");
  if (!rdoParamOrt.IsNull()) // optional
  {
    rdoParamOrt.GetValue(*rstStruct.Ort);
  }
  const staff::DataObject& rdoParamErreichbarkeitMail = rdoParam.GetChildByLocalNameOpt("ErreichbarkeitMail");
  if (!rdoParamErreichbarkeitMail.IsNull()) // optional
  {
    rdoParamErreichbarkeitMail.GetValue(*rstStruct.ErreichbarkeitMail);
  }
  const staff::DataObject& rdoParamErreichbarkeitMobil = rdoParam.GetChildByLocalNameOpt("ErreichbarkeitMobil");
  if (!rdoParamErreichbarkeitMobil.IsNull()) // optional
  {
    rdoParamErreichbarkeitMobil.GetValue(*rstStruct.ErreichbarkeitMobil);
  }
  const staff::DataObject& rdoParamErreichbarkeitFestnetz = rdoParam.GetChildByLocalNameOpt("ErreichbarkeitFestnetz");
  if (!rdoParamErreichbarkeitFestnetz.IsNull()) // optional
  {
    rdoParamErreichbarkeitFestnetz.GetValue(*rstStruct.ErreichbarkeitFestnetz);
  }
  const staff::DataObject& rdoParamErreichbarkeitFax = rdoParam.GetChildByLocalNameOpt("ErreichbarkeitFax");
  if (!rdoParamErreichbarkeitFax.IsNull()) // optional
  {
    rdoParamErreichbarkeitFax.GetValue(*rstStruct.ErreichbarkeitFax);
  }
  const staff::DataObject& rdoParamErreichbarkeitGruppenRic = rdoParam.GetChildByLocalNameOpt("ErreichbarkeitGruppenRic");
  if (!rdoParamErreichbarkeitGruppenRic.IsNull()) // optional
  {
    rdoParamErreichbarkeitGruppenRic.GetValue(*rstStruct.ErreichbarkeitGruppenRic);
  }
  const staff::DataObject& rdoParamErreichbarkeitUrl = rdoParam.GetChildByLocalNameOpt("ErreichbarkeitUrl");
  if (!rdoParamErreichbarkeitUrl.IsNull()) // optional
  {
    rdoParamErreichbarkeitUrl.GetValue(*rstStruct.ErreichbarkeitUrl);
  }
  rdoParam.GetChildValueByLocalName("LetzteAenderung", rstStruct.LetzteAenderung);
  const staff::DataObject& rdoParamUAFKDONummer = rdoParam.GetChildByLocalNameOpt("UAFKDONummer");
  if (!rdoParamUAFKDONummer.IsNull()) // optional
  {
    rdoParamUAFKDONummer.GetValue(*rstStruct.UAFKDONummer);
  }
  const staff::DataObject& rdoParamUAFKDOName = rdoParam.GetChildByLocalNameOpt("UAFKDOName");
  if (!rdoParamUAFKDOName.IsNull()) // optional
  {
    rdoParamUAFKDOName.GetValue(*rstStruct.UAFKDOName);
  }
  const staff::DataObject& rdoParamUAFKDOInstanzartLang = rdoParam.GetChildByLocalNameOpt("UAFKDOInstanzartLang");
  if (!rdoParamUAFKDOInstanzartLang.IsNull()) // optional
  {
    rdoParamUAFKDOInstanzartLang.GetValue(*rstStruct.UAFKDOInstanzartLang);
  }
  const staff::DataObject& rdoParamBFKDONummer = rdoParam.GetChildByLocalNameOpt("BFKDONummer");
  if (!rdoParamBFKDONummer.IsNull()) // optional
  {
    rdoParamBFKDONummer.GetValue(*rstStruct.BFKDONummer);
  }
  const staff::DataObject& rdoParamBFKDOName = rdoParam.GetChildByLocalNameOpt("BFKDOName");
  if (!rdoParamBFKDOName.IsNull()) // optional
  {
    rdoParamBFKDOName.GetValue(*rstStruct.BFKDOName);
  }
  const staff::DataObject& rdoParamBFKDOInstanzartLang = rdoParam.GetChildByLocalNameOpt("BFKDOInstanzartLang");
  if (!rdoParamBFKDOInstanzartLang.IsNull()) // optional
  {
    rdoParamBFKDOInstanzartLang.GetValue(*rstStruct.BFKDOInstanzartLang);
  }
  const staff::DataObject& rdoParamAFKDONummer = rdoParam.GetChildByLocalNameOpt("AFKDONummer");
  if (!rdoParamAFKDONummer.IsNull()) // optional
  {
    rdoParamAFKDONummer.GetValue(*rstStruct.AFKDONummer);
  }
  const staff::DataObject& rdoParamAFKDOName = rdoParam.GetChildByLocalNameOpt("AFKDOName");
  if (!rdoParamAFKDOName.IsNull()) // optional
  {
    rdoParamAFKDOName.GetValue(*rstStruct.AFKDOName);
  }
  const staff::DataObject& rdoParamAFKDOInstanzartLang = rdoParam.GetChildByLocalNameOpt("AFKDOInstanzartLang");
  if (!rdoParamAFKDOInstanzartLang.IsNull()) // optional
  {
    rdoParamAFKDOInstanzartLang.GetValue(*rstStruct.AFKDOInstanzartLang);
  }
  const staff::DataObject& rdoParamGemeindeName = rdoParam.GetChildByLocalNameOpt("GemeindeName");
  if (!rdoParamGemeindeName.IsNull()) // optional
  {
    rdoParamGemeindeName.GetValue(*rstStruct.GemeindeName);
  }
  rdoParam.GetChildValueByLocalName("Feuerwachen", rstStruct.Feuerwachen);
  rdoParam.GetChildValueByLocalName("HatJugend", rstStruct.HatJugend);
  return rdoParam;
}

DataObject& operator<<(DataObject& rdoParam, const struct ::ArrayOfFdWsFWInstanzen144Struct& rstStruct)
{
  rdoParam.SetNamespaceUriGenPrefix("http://fdisk.at/");
  for (std::list< staff::Nillable< ::FdWsFWInstanzen144Struct > >::const_iterator itItem = (rstStruct.FdWsFWInstanzen144Struct).begin(), itItemEnd = (rstStruct.FdWsFWInstanzen144Struct).end();
       itItem != itItemEnd; ++itItem)
  {
    if (!((*itItem)).IsNull()) // Nillable
    {
      staff::DataObject tdoParamItem = rdoParam.CreateChild("FdWsFWInstanzen144Struct");
      tdoParamItem.SetNamespaceUriGenPrefix("http://fdisk.at/");
      tdoParamItem << *(*itItem);
    }
    else
    {
      rdoParam.CreateChild("FdWsFWInstanzen144Struct").SetNil();
    }
  }

  return rdoParam;
}

const DataObject& operator>>(const DataObject& rdoParam, struct ::ArrayOfFdWsFWInstanzen144Struct& rstStruct)
{
  for (staff::DataObject tdoItem = rdoParam.FirstChild(); !tdoItem.IsNull(); tdoItem.SetNextSibling())
  {
    if (tdoItem.GetLocalName() == "FdWsFWInstanzen144Struct")
    {
      (rstStruct.FdWsFWInstanzen144Struct).resize((rstStruct.FdWsFWInstanzen144Struct).size() + 1);
      if (!tdoItem.IsNil()) // Nillable
      {
        tdoItem >> *(rstStruct.FdWsFWInstanzen144Struct).back();
      }
    }
  }

  return rdoParam;
}

DataObject& operator<<(DataObject& rdoParam, const struct ::FdWsFWInstanzen144Struct& rstStruct)
{
  // serialize parent struct
  rdoParam << static_cast< const struct ::Writer& >(rstStruct);

  rdoParam.CreateChild("FdiskIdInstanzen", rstStruct.FdiskIdInstanzen).SetNamespaceUriGenPrefix("http://fdisk.at/");
  if (!(rstStruct.Instanznummer).IsNull()) // Optional
  {
    rdoParam.CreateChild("Instanznummer", *rstStruct.Instanznummer).SetNamespaceUriGenPrefix("http://fdisk.at/");
  }
  if (!(rstStruct.Instanzname).IsNull()) // Optional
  {
    rdoParam.CreateChild("Instanzname", *rstStruct.Instanzname).SetNamespaceUriGenPrefix("http://fdisk.at/");
  }
  if (!(rstStruct.InstanzArt).IsNull()) // Optional
  {
    rdoParam.CreateChild("InstanzArt", *rstStruct.InstanzArt).SetNamespaceUriGenPrefix("http://fdisk.at/");
  }
  if (!(rstStruct.InstanzArtLang).IsNull()) // Optional
  {
    rdoParam.CreateChild("InstanzArtLang", *rstStruct.InstanzArtLang).SetNamespaceUriGenPrefix("http://fdisk.at/");
  }
  return rdoParam;
}

const DataObject& operator>>(const DataObject& rdoParam, struct ::FdWsFWInstanzen144Struct& rstStruct)
{
  // deserialize parent struct
  rdoParam >> static_cast< struct ::Writer& >(rstStruct);

  rdoParam.GetChildValueByLocalName("FdiskIdInstanzen", rstStruct.FdiskIdInstanzen);
  const staff::DataObject& rdoParamInstanznummer = rdoParam.GetChildByLocalNameOpt("Instanznummer");
  if (!rdoParamInstanznummer.IsNull()) // optional
  {
    rdoParamInstanznummer.GetValue(*rstStruct.Instanznummer);
  }
  const staff::DataObject& rdoParamInstanzname = rdoParam.GetChildByLocalNameOpt("Instanzname");
  if (!rdoParamInstanzname.IsNull()) // optional
  {
    rdoParamInstanzname.GetValue(*rstStruct.Instanzname);
  }
  const staff::DataObject& rdoParamInstanzArt = rdoParam.GetChildByLocalNameOpt("InstanzArt");
  if (!rdoParamInstanzArt.IsNull()) // optional
  {
    rdoParamInstanzArt.GetValue(*rstStruct.InstanzArt);
  }
  const staff::DataObject& rdoParamInstanzArtLang = rdoParam.GetChildByLocalNameOpt("InstanzArtLang");
  if (!rdoParamInstanzArtLang.IsNull()) // optional
  {
    rdoParamInstanzArtLang.GetValue(*rstStruct.InstanzArtLang);
  }
  return rdoParam;
}

DataObject& operator<<(DataObject& rdoParam, const struct ::ArrayOfFdWsGeraeteStruct& rstStruct)
{
  rdoParam.SetNamespaceUriGenPrefix("http://fdisk.at/");
  for (std::list< staff::Nillable< ::FdWsGeraeteStruct > >::const_iterator itItem = (rstStruct.FdWsGeraeteStruct).begin(), itItemEnd = (rstStruct.FdWsGeraeteStruct).end();
       itItem != itItemEnd; ++itItem)
  {
    if (!((*itItem)).IsNull()) // Nillable
    {
      staff::DataObject tdoParamItem = rdoParam.CreateChild("FdWsGeraeteStruct");
      tdoParamItem.SetNamespaceUriGenPrefix("http://fdisk.at/");
      tdoParamItem << *(*itItem);
    }
    else
    {
      rdoParam.CreateChild("FdWsGeraeteStruct").SetNil();
    }
  }

  return rdoParam;
}

const DataObject& operator>>(const DataObject& rdoParam, struct ::ArrayOfFdWsGeraeteStruct& rstStruct)
{
  for (staff::DataObject tdoItem = rdoParam.FirstChild(); !tdoItem.IsNull(); tdoItem.SetNextSibling())
  {
    if (tdoItem.GetLocalName() == "FdWsGeraeteStruct")
    {
      (rstStruct.FdWsGeraeteStruct).resize((rstStruct.FdWsGeraeteStruct).size() + 1);
      if (!tdoItem.IsNil()) // Nillable
      {
        tdoItem >> *(rstStruct.FdWsGeraeteStruct).back();
      }
    }
  }

  return rdoParam;
}

DataObject& operator<<(DataObject& rdoParam, const struct ::FdWsGeraeteStruct& rstStruct)
{
  // serialize parent struct
  rdoParam << static_cast< const struct ::Writer& >(rstStruct);

  rdoParam.CreateChild("FdiskIdGeraete", rstStruct.FdiskIdGeraete).SetNamespaceUriGenPrefix("http://fdisk.at/");
  rdoParam.CreateChild("FdiskIdInstanzen", rstStruct.FdiskIdInstanzen).SetNamespaceUriGenPrefix("http://fdisk.at/");
  if (!(rstStruct.InstanzNummer).IsNull()) // Optional
  {
    rdoParam.CreateChild("InstanzNummer", *rstStruct.InstanzNummer).SetNamespaceUriGenPrefix("http://fdisk.at/");
  }
  if (!(rstStruct.GeraeteBezeichnung).IsNull()) // Optional
  {
    rdoParam.CreateChild("GeraeteBezeichnung", *rstStruct.GeraeteBezeichnung).SetNamespaceUriGenPrefix("http://fdisk.at/");
  }
  if (!(rstStruct.GeraeteGruppe).IsNull()) // Optional
  {
    rdoParam.CreateChild("GeraeteGruppe", *rstStruct.GeraeteGruppe).SetNamespaceUriGenPrefix("http://fdisk.at/");
  }
  if (!(rstStruct.GeraeteStandard).IsNull()) // Optional
  {
    rdoParam.CreateChild("GeraeteStandard", *rstStruct.GeraeteStandard).SetNamespaceUriGenPrefix("http://fdisk.at/");
  }
  rdoParam.CreateChild("GeraeteAnzahl", rstStruct.GeraeteAnzahl).SetNamespaceUriGenPrefix("http://fdisk.at/");
  if (!(rstStruct.GeraeteStatus).IsNull()) // Optional
  {
    rdoParam.CreateChild("GeraeteStatus", *rstStruct.GeraeteStatus).SetNamespaceUriGenPrefix("http://fdisk.at/");
  }
  rdoParam.CreateChild("LetzteAenderung", rstStruct.LetzteAenderung).SetNamespaceUriGenPrefix("http://fdisk.at/");
  return rdoParam;
}

const DataObject& operator>>(const DataObject& rdoParam, struct ::FdWsGeraeteStruct& rstStruct)
{
  // deserialize parent struct
  rdoParam >> static_cast< struct ::Writer& >(rstStruct);

  rdoParam.GetChildValueByLocalName("FdiskIdGeraete", rstStruct.FdiskIdGeraete);
  rdoParam.GetChildValueByLocalName("FdiskIdInstanzen", rstStruct.FdiskIdInstanzen);
  const staff::DataObject& rdoParamInstanzNummer = rdoParam.GetChildByLocalNameOpt("InstanzNummer");
  if (!rdoParamInstanzNummer.IsNull()) // optional
  {
    rdoParamInstanzNummer.GetValue(*rstStruct.InstanzNummer);
  }
  const staff::DataObject& rdoParamGeraeteBezeichnung = rdoParam.GetChildByLocalNameOpt("GeraeteBezeichnung");
  if (!rdoParamGeraeteBezeichnung.IsNull()) // optional
  {
    rdoParamGeraeteBezeichnung.GetValue(*rstStruct.GeraeteBezeichnung);
  }
  const staff::DataObject& rdoParamGeraeteGruppe = rdoParam.GetChildByLocalNameOpt("GeraeteGruppe");
  if (!rdoParamGeraeteGruppe.IsNull()) // optional
  {
    rdoParamGeraeteGruppe.GetValue(*rstStruct.GeraeteGruppe);
  }
  const staff::DataObject& rdoParamGeraeteStandard = rdoParam.GetChildByLocalNameOpt("GeraeteStandard");
  if (!rdoParamGeraeteStandard.IsNull()) // optional
  {
    rdoParamGeraeteStandard.GetValue(*rstStruct.GeraeteStandard);
  }
  rdoParam.GetChildValueByLocalName("GeraeteAnzahl", rstStruct.GeraeteAnzahl);
  const staff::DataObject& rdoParamGeraeteStatus = rdoParam.GetChildByLocalNameOpt("GeraeteStatus");
  if (!rdoParamGeraeteStatus.IsNull()) // optional
  {
    rdoParamGeraeteStatus.GetValue(*rstStruct.GeraeteStatus);
  }
  rdoParam.GetChildValueByLocalName("LetzteAenderung", rstStruct.LetzteAenderung);
  return rdoParam;
}

DataObject& operator<<(DataObject& rdoParam, const struct ::ArrayOfFdWsFahrzeugeStruct& rstStruct)
{
  rdoParam.SetNamespaceUriGenPrefix("http://fdisk.at/");
  for (std::list< staff::Nillable< ::FdWsFahrzeugeStruct > >::const_iterator itItem = (rstStruct.FdWsFahrzeugeStruct).begin(), itItemEnd = (rstStruct.FdWsFahrzeugeStruct).end();
       itItem != itItemEnd; ++itItem)
  {
    if (!((*itItem)).IsNull()) // Nillable
    {
      staff::DataObject tdoParamItem = rdoParam.CreateChild("FdWsFahrzeugeStruct");
      tdoParamItem.SetNamespaceUriGenPrefix("http://fdisk.at/");
      tdoParamItem << *(*itItem);
    }
    else
    {
      rdoParam.CreateChild("FdWsFahrzeugeStruct").SetNil();
    }
  }

  return rdoParam;
}

const DataObject& operator>>(const DataObject& rdoParam, struct ::ArrayOfFdWsFahrzeugeStruct& rstStruct)
{
  for (staff::DataObject tdoItem = rdoParam.FirstChild(); !tdoItem.IsNull(); tdoItem.SetNextSibling())
  {
    if (tdoItem.GetLocalName() == "FdWsFahrzeugeStruct")
    {
      (rstStruct.FdWsFahrzeugeStruct).resize((rstStruct.FdWsFahrzeugeStruct).size() + 1);
      if (!tdoItem.IsNil()) // Nillable
      {
        tdoItem >> *(rstStruct.FdWsFahrzeugeStruct).back();
      }
    }
  }

  return rdoParam;
}

DataObject& operator<<(DataObject& rdoParam, const struct ::FdWsFahrzeugeStruct& rstStruct)
{
  // serialize parent struct
  rdoParam << static_cast< const struct ::Writer& >(rstStruct);

  rdoParam.CreateChild("FdiskIdFahrzeuge", rstStruct.FdiskIdFahrzeuge).SetNamespaceUriGenPrefix("http://fdisk.at/");
  rdoParam.CreateChild("FdiskIdInstanzen", rstStruct.FdiskIdInstanzen).SetNamespaceUriGenPrefix("http://fdisk.at/");
  if (!(rstStruct.InstanzNummer).IsNull()) // Optional
  {
    rdoParam.CreateChild("InstanzNummer", *rstStruct.InstanzNummer).SetNamespaceUriGenPrefix("http://fdisk.at/");
  }
  if (!(rstStruct.FzgStatus).IsNull()) // Optional
  {
    rdoParam.CreateChild("FzgStatus", *rstStruct.FzgStatus).SetNamespaceUriGenPrefix("http://fdisk.at/");
  }
  if (!(rstStruct.TaktischeBezeichnung).IsNull()) // Optional
  {
    rdoParam.CreateChild("TaktischeBezeichnung", *rstStruct.TaktischeBezeichnung).SetNamespaceUriGenPrefix("http://fdisk.at/");
  }
  rdoParam.CreateChild("Baujahr", rstStruct.Baujahr).SetNamespaceUriGenPrefix("http://fdisk.at/");
  if (!(rstStruct.Feuerwache).IsNull()) // Optional
  {
    rdoParam.CreateChild("Feuerwache", *rstStruct.Feuerwache).SetNamespaceUriGenPrefix("http://fdisk.at/");
  }
  if (!(rstStruct.KfzKennzeichen).IsNull()) // Optional
  {
    rdoParam.CreateChild("KfzKennzeichen", *rstStruct.KfzKennzeichen).SetNamespaceUriGenPrefix("http://fdisk.at/");
  }
  if (!(rstStruct.Treibstoffart).IsNull()) // Optional
  {
    rdoParam.CreateChild("Treibstoffart", *rstStruct.Treibstoffart).SetNamespaceUriGenPrefix("http://fdisk.at/");
  }
  if (!(rstStruct.Funkrufzeichen).IsNull()) // Optional
  {
    rdoParam.CreateChild("Funkrufzeichen", *rstStruct.Funkrufzeichen).SetNamespaceUriGenPrefix("http://fdisk.at/");
  }
  if (!(rstStruct.Fahrzeugart).IsNull()) // Optional
  {
    rdoParam.CreateChild("Fahrzeugart", *rstStruct.Fahrzeugart).SetNamespaceUriGenPrefix("http://fdisk.at/");
  }
  if (!(rstStruct.Fahrzeugtyp).IsNull()) // Optional
  {
    rdoParam.CreateChild("Fahrzeugtyp", *rstStruct.Fahrzeugtyp).SetNamespaceUriGenPrefix("http://fdisk.at/");
  }
  if (!(rstStruct.Fahrzeugmarke).IsNull()) // Optional
  {
    rdoParam.CreateChild("Fahrzeugmarke", *rstStruct.Fahrzeugmarke).SetNamespaceUriGenPrefix("http://fdisk.at/");
  }
  if (!(rstStruct.Sonderausstattung).IsNull()) // Optional
  {
    rdoParam.CreateChild("Sonderausstattung", *rstStruct.Sonderausstattung).SetNamespaceUriGenPrefix("http://fdisk.at/");
  }
  rdoParam.CreateChild("LetzteAenderung", rstStruct.LetzteAenderung).SetNamespaceUriGenPrefix("http://fdisk.at/");
  return rdoParam;
}

const DataObject& operator>>(const DataObject& rdoParam, struct ::FdWsFahrzeugeStruct& rstStruct)
{
  // deserialize parent struct
  rdoParam >> static_cast< struct ::Writer& >(rstStruct);

  rdoParam.GetChildValueByLocalName("FdiskIdFahrzeuge", rstStruct.FdiskIdFahrzeuge);
  rdoParam.GetChildValueByLocalName("FdiskIdInstanzen", rstStruct.FdiskIdInstanzen);
  const staff::DataObject& rdoParamInstanzNummer = rdoParam.GetChildByLocalNameOpt("InstanzNummer");
  if (!rdoParamInstanzNummer.IsNull()) // optional
  {
    rdoParamInstanzNummer.GetValue(*rstStruct.InstanzNummer);
  }
  const staff::DataObject& rdoParamFzgStatus = rdoParam.GetChildByLocalNameOpt("FzgStatus");
  if (!rdoParamFzgStatus.IsNull()) // optional
  {
    rdoParamFzgStatus.GetValue(*rstStruct.FzgStatus);
  }
  const staff::DataObject& rdoParamTaktischeBezeichnung = rdoParam.GetChildByLocalNameOpt("TaktischeBezeichnung");
  if (!rdoParamTaktischeBezeichnung.IsNull()) // optional
  {
    rdoParamTaktischeBezeichnung.GetValue(*rstStruct.TaktischeBezeichnung);
  }
  rdoParam.GetChildValueByLocalName("Baujahr", rstStruct.Baujahr);
  const staff::DataObject& rdoParamFeuerwache = rdoParam.GetChildByLocalNameOpt("Feuerwache");
  if (!rdoParamFeuerwache.IsNull()) // optional
  {
    rdoParamFeuerwache.GetValue(*rstStruct.Feuerwache);
  }
  const staff::DataObject& rdoParamKfzKennzeichen = rdoParam.GetChildByLocalNameOpt("KfzKennzeichen");
  if (!rdoParamKfzKennzeichen.IsNull()) // optional
  {
    rdoParamKfzKennzeichen.GetValue(*rstStruct.KfzKennzeichen);
  }
  const staff::DataObject& rdoParamTreibstoffart = rdoParam.GetChildByLocalNameOpt("Treibstoffart");
  if (!rdoParamTreibstoffart.IsNull()) // optional
  {
    rdoParamTreibstoffart.GetValue(*rstStruct.Treibstoffart);
  }
  const staff::DataObject& rdoParamFunkrufzeichen = rdoParam.GetChildByLocalNameOpt("Funkrufzeichen");
  if (!rdoParamFunkrufzeichen.IsNull()) // optional
  {
    rdoParamFunkrufzeichen.GetValue(*rstStruct.Funkrufzeichen);
  }
  const staff::DataObject& rdoParamFahrzeugart = rdoParam.GetChildByLocalNameOpt("Fahrzeugart");
  if (!rdoParamFahrzeugart.IsNull()) // optional
  {
    rdoParamFahrzeugart.GetValue(*rstStruct.Fahrzeugart);
  }
  const staff::DataObject& rdoParamFahrzeugtyp = rdoParam.GetChildByLocalNameOpt("Fahrzeugtyp");
  if (!rdoParamFahrzeugtyp.IsNull()) // optional
  {
    rdoParamFahrzeugtyp.GetValue(*rstStruct.Fahrzeugtyp);
  }
  const staff::DataObject& rdoParamFahrzeugmarke = rdoParam.GetChildByLocalNameOpt("Fahrzeugmarke");
  if (!rdoParamFahrzeugmarke.IsNull()) // optional
  {
    rdoParamFahrzeugmarke.GetValue(*rstStruct.Fahrzeugmarke);
  }
  const staff::DataObject& rdoParamSonderausstattung = rdoParam.GetChildByLocalNameOpt("Sonderausstattung");
  if (!rdoParamSonderausstattung.IsNull()) // optional
  {
    rdoParamSonderausstattung.GetValue(*rstStruct.Sonderausstattung);
  }
  rdoParam.GetChildValueByLocalName("LetzteAenderung", rstStruct.LetzteAenderung);
  return rdoParam;
}

DataObject& operator<<(DataObject& rdoParam, const struct ::ArrayOfFdWsFeuerwachenStruct& rstStruct)
{
  rdoParam.SetNamespaceUriGenPrefix("http://fdisk.at/");
  for (std::list< staff::Nillable< ::FdWsFeuerwachenStruct > >::const_iterator itItem = (rstStruct.FdWsFeuerwachenStruct).begin(), itItemEnd = (rstStruct.FdWsFeuerwachenStruct).end();
       itItem != itItemEnd; ++itItem)
  {
    if (!((*itItem)).IsNull()) // Nillable
    {
      staff::DataObject tdoParamItem = rdoParam.CreateChild("FdWsFeuerwachenStruct");
      tdoParamItem.SetNamespaceUriGenPrefix("http://fdisk.at/");
      tdoParamItem << *(*itItem);
    }
    else
    {
      rdoParam.CreateChild("FdWsFeuerwachenStruct").SetNil();
    }
  }

  return rdoParam;
}

const DataObject& operator>>(const DataObject& rdoParam, struct ::ArrayOfFdWsFeuerwachenStruct& rstStruct)
{
  for (staff::DataObject tdoItem = rdoParam.FirstChild(); !tdoItem.IsNull(); tdoItem.SetNextSibling())
  {
    if (tdoItem.GetLocalName() == "FdWsFeuerwachenStruct")
    {
      (rstStruct.FdWsFeuerwachenStruct).resize((rstStruct.FdWsFeuerwachenStruct).size() + 1);
      if (!tdoItem.IsNil()) // Nillable
      {
        tdoItem >> *(rstStruct.FdWsFeuerwachenStruct).back();
      }
    }
  }

  return rdoParam;
}

DataObject& operator<<(DataObject& rdoParam, const struct ::FdWsFeuerwachenStruct& rstStruct)
{
  // serialize parent struct
  rdoParam << static_cast< const struct ::Writer& >(rstStruct);

  rdoParam.CreateChild("FdiskIdInstanzen", rstStruct.FdiskIdInstanzen).SetNamespaceUriGenPrefix("http://fdisk.at/");
  rdoParam.CreateChild("Gruendungsdatum", rstStruct.Gruendungsdatum).SetNamespaceUriGenPrefix("http://fdisk.at/");
  if (!(rstStruct.Instanznummer).IsNull()) // Optional
  {
    rdoParam.CreateChild("Instanznummer", *rstStruct.Instanznummer).SetNamespaceUriGenPrefix("http://fdisk.at/");
  }
  if (!(rstStruct.Instanzname).IsNull()) // Optional
  {
    rdoParam.CreateChild("Instanzname", *rstStruct.Instanzname).SetNamespaceUriGenPrefix("http://fdisk.at/");
  }
  if (!(rstStruct.Feuerwachenname).IsNull()) // Optional
  {
    rdoParam.CreateChild("Feuerwachenname", *rstStruct.Feuerwachenname).SetNamespaceUriGenPrefix("http://fdisk.at/");
  }
  if (!(rstStruct.Feuerwachennummer).IsNull()) // Optional
  {
    rdoParam.CreateChild("Feuerwachennummer", *rstStruct.Feuerwachennummer).SetNamespaceUriGenPrefix("http://fdisk.at/");
  }
  if (!(rstStruct.InstanzArt).IsNull()) // Optional
  {
    rdoParam.CreateChild("InstanzArt", *rstStruct.InstanzArt).SetNamespaceUriGenPrefix("http://fdisk.at/");
  }
  if (!(rstStruct.InstanzTyp).IsNull()) // Optional
  {
    rdoParam.CreateChild("InstanzTyp", *rstStruct.InstanzTyp).SetNamespaceUriGenPrefix("http://fdisk.at/");
  }
  if (!(rstStruct.Strasse).IsNull()) // Optional
  {
    rdoParam.CreateChild("Strasse", *rstStruct.Strasse).SetNamespaceUriGenPrefix("http://fdisk.at/");
  }
  if (!(rstStruct.Nummer).IsNull()) // Optional
  {
    rdoParam.CreateChild("Nummer", *rstStruct.Nummer).SetNamespaceUriGenPrefix("http://fdisk.at/");
  }
  if (!(rstStruct.Stiege).IsNull()) // Optional
  {
    rdoParam.CreateChild("Stiege", *rstStruct.Stiege).SetNamespaceUriGenPrefix("http://fdisk.at/");
  }
  if (!(rstStruct.Kathastralgemeinde).IsNull()) // Optional
  {
    rdoParam.CreateChild("Kathastralgemeinde", *rstStruct.Kathastralgemeinde).SetNamespaceUriGenPrefix("http://fdisk.at/");
  }
  if (!(rstStruct.PLZ).IsNull()) // Optional
  {
    rdoParam.CreateChild("PLZ", *rstStruct.PLZ).SetNamespaceUriGenPrefix("http://fdisk.at/");
  }
  if (!(rstStruct.Ort).IsNull()) // Optional
  {
    rdoParam.CreateChild("Ort", *rstStruct.Ort).SetNamespaceUriGenPrefix("http://fdisk.at/");
  }
  rdoParam.CreateChild("LetzteAenderung", rstStruct.LetzteAenderung).SetNamespaceUriGenPrefix("http://fdisk.at/");
  if (!(rstStruct.UAFKDONummer).IsNull()) // Optional
  {
    rdoParam.CreateChild("UAFKDONummer", *rstStruct.UAFKDONummer).SetNamespaceUriGenPrefix("http://fdisk.at/");
  }
  if (!(rstStruct.UAFKDOName).IsNull()) // Optional
  {
    rdoParam.CreateChild("UAFKDOName", *rstStruct.UAFKDOName).SetNamespaceUriGenPrefix("http://fdisk.at/");
  }
  if (!(rstStruct.UAFKDOInstanzartLang).IsNull()) // Optional
  {
    rdoParam.CreateChild("UAFKDOInstanzartLang", *rstStruct.UAFKDOInstanzartLang).SetNamespaceUriGenPrefix("http://fdisk.at/");
  }
  if (!(rstStruct.BFKDONummer).IsNull()) // Optional
  {
    rdoParam.CreateChild("BFKDONummer", *rstStruct.BFKDONummer).SetNamespaceUriGenPrefix("http://fdisk.at/");
  }
  if (!(rstStruct.BFKDOName).IsNull()) // Optional
  {
    rdoParam.CreateChild("BFKDOName", *rstStruct.BFKDOName).SetNamespaceUriGenPrefix("http://fdisk.at/");
  }
  if (!(rstStruct.BFKDOInstanzartLang).IsNull()) // Optional
  {
    rdoParam.CreateChild("BFKDOInstanzartLang", *rstStruct.BFKDOInstanzartLang).SetNamespaceUriGenPrefix("http://fdisk.at/");
  }
  if (!(rstStruct.AFKDONummer).IsNull()) // Optional
  {
    rdoParam.CreateChild("AFKDONummer", *rstStruct.AFKDONummer).SetNamespaceUriGenPrefix("http://fdisk.at/");
  }
  if (!(rstStruct.AFKDOName).IsNull()) // Optional
  {
    rdoParam.CreateChild("AFKDOName", *rstStruct.AFKDOName).SetNamespaceUriGenPrefix("http://fdisk.at/");
  }
  if (!(rstStruct.AFKDOInstanzartLang).IsNull()) // Optional
  {
    rdoParam.CreateChild("AFKDOInstanzartLang", *rstStruct.AFKDOInstanzartLang).SetNamespaceUriGenPrefix("http://fdisk.at/");
  }
  if (!(rstStruct.GemeindeName).IsNull()) // Optional
  {
    rdoParam.CreateChild("GemeindeName", *rstStruct.GemeindeName).SetNamespaceUriGenPrefix("http://fdisk.at/");
  }
  return rdoParam;
}

const DataObject& operator>>(const DataObject& rdoParam, struct ::FdWsFeuerwachenStruct& rstStruct)
{
  // deserialize parent struct
  rdoParam >> static_cast< struct ::Writer& >(rstStruct);

  rdoParam.GetChildValueByLocalName("FdiskIdInstanzen", rstStruct.FdiskIdInstanzen);
  rdoParam.GetChildValueByLocalName("Gruendungsdatum", rstStruct.Gruendungsdatum);
  const staff::DataObject& rdoParamInstanznummer = rdoParam.GetChildByLocalNameOpt("Instanznummer");
  if (!rdoParamInstanznummer.IsNull()) // optional
  {
    rdoParamInstanznummer.GetValue(*rstStruct.Instanznummer);
  }
  const staff::DataObject& rdoParamInstanzname = rdoParam.GetChildByLocalNameOpt("Instanzname");
  if (!rdoParamInstanzname.IsNull()) // optional
  {
    rdoParamInstanzname.GetValue(*rstStruct.Instanzname);
  }
  const staff::DataObject& rdoParamFeuerwachenname = rdoParam.GetChildByLocalNameOpt("Feuerwachenname");
  if (!rdoParamFeuerwachenname.IsNull()) // optional
  {
    rdoParamFeuerwachenname.GetValue(*rstStruct.Feuerwachenname);
  }
  const staff::DataObject& rdoParamFeuerwachennummer = rdoParam.GetChildByLocalNameOpt("Feuerwachennummer");
  if (!rdoParamFeuerwachennummer.IsNull()) // optional
  {
    rdoParamFeuerwachennummer.GetValue(*rstStruct.Feuerwachennummer);
  }
  const staff::DataObject& rdoParamInstanzArt = rdoParam.GetChildByLocalNameOpt("InstanzArt");
  if (!rdoParamInstanzArt.IsNull()) // optional
  {
    rdoParamInstanzArt.GetValue(*rstStruct.InstanzArt);
  }
  const staff::DataObject& rdoParamInstanzTyp = rdoParam.GetChildByLocalNameOpt("InstanzTyp");
  if (!rdoParamInstanzTyp.IsNull()) // optional
  {
    rdoParamInstanzTyp.GetValue(*rstStruct.InstanzTyp);
  }
  const staff::DataObject& rdoParamStrasse = rdoParam.GetChildByLocalNameOpt("Strasse");
  if (!rdoParamStrasse.IsNull()) // optional
  {
    rdoParamStrasse.GetValue(*rstStruct.Strasse);
  }
  const staff::DataObject& rdoParamNummer = rdoParam.GetChildByLocalNameOpt("Nummer");
  if (!rdoParamNummer.IsNull()) // optional
  {
    rdoParamNummer.GetValue(*rstStruct.Nummer);
  }
  const staff::DataObject& rdoParamStiege = rdoParam.GetChildByLocalNameOpt("Stiege");
  if (!rdoParamStiege.IsNull()) // optional
  {
    rdoParamStiege.GetValue(*rstStruct.Stiege);
  }
  const staff::DataObject& rdoParamKathastralgemeinde = rdoParam.GetChildByLocalNameOpt("Kathastralgemeinde");
  if (!rdoParamKathastralgemeinde.IsNull()) // optional
  {
    rdoParamKathastralgemeinde.GetValue(*rstStruct.Kathastralgemeinde);
  }
  const staff::DataObject& rdoParamPLZ = rdoParam.GetChildByLocalNameOpt("PLZ");
  if (!rdoParamPLZ.IsNull()) // optional
  {
    rdoParamPLZ.GetValue(*rstStruct.PLZ);
  }
  const staff::DataObject& rdoParamOrt = rdoParam.GetChildByLocalNameOpt("Ort");
  if (!rdoParamOrt.IsNull()) // optional
  {
    rdoParamOrt.GetValue(*rstStruct.Ort);
  }
  rdoParam.GetChildValueByLocalName("LetzteAenderung", rstStruct.LetzteAenderung);
  const staff::DataObject& rdoParamUAFKDONummer = rdoParam.GetChildByLocalNameOpt("UAFKDONummer");
  if (!rdoParamUAFKDONummer.IsNull()) // optional
  {
    rdoParamUAFKDONummer.GetValue(*rstStruct.UAFKDONummer);
  }
  const staff::DataObject& rdoParamUAFKDOName = rdoParam.GetChildByLocalNameOpt("UAFKDOName");
  if (!rdoParamUAFKDOName.IsNull()) // optional
  {
    rdoParamUAFKDOName.GetValue(*rstStruct.UAFKDOName);
  }
  const staff::DataObject& rdoParamUAFKDOInstanzartLang = rdoParam.GetChildByLocalNameOpt("UAFKDOInstanzartLang");
  if (!rdoParamUAFKDOInstanzartLang.IsNull()) // optional
  {
    rdoParamUAFKDOInstanzartLang.GetValue(*rstStruct.UAFKDOInstanzartLang);
  }
  const staff::DataObject& rdoParamBFKDONummer = rdoParam.GetChildByLocalNameOpt("BFKDONummer");
  if (!rdoParamBFKDONummer.IsNull()) // optional
  {
    rdoParamBFKDONummer.GetValue(*rstStruct.BFKDONummer);
  }
  const staff::DataObject& rdoParamBFKDOName = rdoParam.GetChildByLocalNameOpt("BFKDOName");
  if (!rdoParamBFKDOName.IsNull()) // optional
  {
    rdoParamBFKDOName.GetValue(*rstStruct.BFKDOName);
  }
  const staff::DataObject& rdoParamBFKDOInstanzartLang = rdoParam.GetChildByLocalNameOpt("BFKDOInstanzartLang");
  if (!rdoParamBFKDOInstanzartLang.IsNull()) // optional
  {
    rdoParamBFKDOInstanzartLang.GetValue(*rstStruct.BFKDOInstanzartLang);
  }
  const staff::DataObject& rdoParamAFKDONummer = rdoParam.GetChildByLocalNameOpt("AFKDONummer");
  if (!rdoParamAFKDONummer.IsNull()) // optional
  {
    rdoParamAFKDONummer.GetValue(*rstStruct.AFKDONummer);
  }
  const staff::DataObject& rdoParamAFKDOName = rdoParam.GetChildByLocalNameOpt("AFKDOName");
  if (!rdoParamAFKDOName.IsNull()) // optional
  {
    rdoParamAFKDOName.GetValue(*rstStruct.AFKDOName);
  }
  const staff::DataObject& rdoParamAFKDOInstanzartLang = rdoParam.GetChildByLocalNameOpt("AFKDOInstanzartLang");
  if (!rdoParamAFKDOInstanzartLang.IsNull()) // optional
  {
    rdoParamAFKDOInstanzartLang.GetValue(*rstStruct.AFKDOInstanzartLang);
  }
  const staff::DataObject& rdoParamGemeindeName = rdoParam.GetChildByLocalNameOpt("GemeindeName");
  if (!rdoParamGemeindeName.IsNull()) // optional
  {
    rdoParamGemeindeName.GetValue(*rstStruct.GemeindeName);
  }
  return rdoParam;
}

DataObject& operator<<(DataObject& rdoParam, const struct ::ArrayOfFdWsErreichbarkeitenFeuerwehrhaeuserStruct& rstStruct)
{
  rdoParam.SetNamespaceUriGenPrefix("http://fdisk.at/");
  for (std::list< staff::Nillable< ::FdWsErreichbarkeitenFeuerwehrhaeuserStruct > >::const_iterator itItem = (rstStruct.FdWsErreichbarkeitenFeuerwehrhaeuserStruct).begin(), itItemEnd = (rstStruct.FdWsErreichbarkeitenFeuerwehrhaeuserStruct).end();
       itItem != itItemEnd; ++itItem)
  {
    if (!((*itItem)).IsNull()) // Nillable
    {
      staff::DataObject tdoParamItem = rdoParam.CreateChild("FdWsErreichbarkeitenFeuerwehrhaeuserStruct");
      tdoParamItem.SetNamespaceUriGenPrefix("http://fdisk.at/");
      tdoParamItem << *(*itItem);
    }
    else
    {
      rdoParam.CreateChild("FdWsErreichbarkeitenFeuerwehrhaeuserStruct").SetNil();
    }
  }

  return rdoParam;
}

const DataObject& operator>>(const DataObject& rdoParam, struct ::ArrayOfFdWsErreichbarkeitenFeuerwehrhaeuserStruct& rstStruct)
{
  for (staff::DataObject tdoItem = rdoParam.FirstChild(); !tdoItem.IsNull(); tdoItem.SetNextSibling())
  {
    if (tdoItem.GetLocalName() == "FdWsErreichbarkeitenFeuerwehrhaeuserStruct")
    {
      (rstStruct.FdWsErreichbarkeitenFeuerwehrhaeuserStruct).resize((rstStruct.FdWsErreichbarkeitenFeuerwehrhaeuserStruct).size() + 1);
      if (!tdoItem.IsNil()) // Nillable
      {
        tdoItem >> *(rstStruct.FdWsErreichbarkeitenFeuerwehrhaeuserStruct).back();
      }
    }
  }

  return rdoParam;
}

DataObject& operator<<(DataObject& rdoParam, const struct ::FdWsErreichbarkeitenFeuerwehrhaeuserStruct& rstStruct)
{
  // serialize parent struct
  rdoParam << static_cast< const struct ::Writer& >(rstStruct);

  rdoParam.CreateChild("FdiskIdFeuerwehrhaeuser", rstStruct.FdiskIdFeuerwehrhaeuser).SetNamespaceUriGenPrefix("http://fdisk.at/");
  if (!(rstStruct.Feuerwache).IsNull()) // Optional
  {
    rdoParam.CreateChild("Feuerwache", *rstStruct.Feuerwache).SetNamespaceUriGenPrefix("http://fdisk.at/");
  }
  if (!(rstStruct.InstanzNummer).IsNull()) // Optional
  {
    rdoParam.CreateChild("InstanzNummer", *rstStruct.InstanzNummer).SetNamespaceUriGenPrefix("http://fdisk.at/");
  }
  if (!(rstStruct.InstanzArt).IsNull()) // Optional
  {
    rdoParam.CreateChild("InstanzArt", *rstStruct.InstanzArt).SetNamespaceUriGenPrefix("http://fdisk.at/");
  }
  if (!(rstStruct.ErreichbarkeitArt).IsNull()) // Optional
  {
    rdoParam.CreateChild("ErreichbarkeitArt", *rstStruct.ErreichbarkeitArt).SetNamespaceUriGenPrefix("http://fdisk.at/");
  }
  if (!(rstStruct.Erreichbarkeit).IsNull()) // Optional
  {
    rdoParam.CreateChild("Erreichbarkeit", *rstStruct.Erreichbarkeit).SetNamespaceUriGenPrefix("http://fdisk.at/");
  }
  rdoParam.CreateChild("LetzteAenderung", rstStruct.LetzteAenderung).SetNamespaceUriGenPrefix("http://fdisk.at/");
  return rdoParam;
}

const DataObject& operator>>(const DataObject& rdoParam, struct ::FdWsErreichbarkeitenFeuerwehrhaeuserStruct& rstStruct)
{
  // deserialize parent struct
  rdoParam >> static_cast< struct ::Writer& >(rstStruct);

  rdoParam.GetChildValueByLocalName("FdiskIdFeuerwehrhaeuser", rstStruct.FdiskIdFeuerwehrhaeuser);
  const staff::DataObject& rdoParamFeuerwache = rdoParam.GetChildByLocalNameOpt("Feuerwache");
  if (!rdoParamFeuerwache.IsNull()) // optional
  {
    rdoParamFeuerwache.GetValue(*rstStruct.Feuerwache);
  }
  const staff::DataObject& rdoParamInstanzNummer = rdoParam.GetChildByLocalNameOpt("InstanzNummer");
  if (!rdoParamInstanzNummer.IsNull()) // optional
  {
    rdoParamInstanzNummer.GetValue(*rstStruct.InstanzNummer);
  }
  const staff::DataObject& rdoParamInstanzArt = rdoParam.GetChildByLocalNameOpt("InstanzArt");
  if (!rdoParamInstanzArt.IsNull()) // optional
  {
    rdoParamInstanzArt.GetValue(*rstStruct.InstanzArt);
  }
  const staff::DataObject& rdoParamErreichbarkeitArt = rdoParam.GetChildByLocalNameOpt("ErreichbarkeitArt");
  if (!rdoParamErreichbarkeitArt.IsNull()) // optional
  {
    rdoParamErreichbarkeitArt.GetValue(*rstStruct.ErreichbarkeitArt);
  }
  const staff::DataObject& rdoParamErreichbarkeit = rdoParam.GetChildByLocalNameOpt("Erreichbarkeit");
  if (!rdoParamErreichbarkeit.IsNull()) // optional
  {
    rdoParamErreichbarkeit.GetValue(*rstStruct.Erreichbarkeit);
  }
  rdoParam.GetChildValueByLocalName("LetzteAenderung", rstStruct.LetzteAenderung);
  return rdoParam;
}

DataObject& operator<<(DataObject& rdoParam, const struct ::ArrayOfFdWsErreichbarkeitenPersonenStruct& rstStruct)
{
  rdoParam.SetNamespaceUriGenPrefix("http://fdisk.at/");
  for (std::list< staff::Nillable< ::FdWsErreichbarkeitenPersonenStruct > >::const_iterator itItem = (rstStruct.FdWsErreichbarkeitenPersonenStruct).begin(), itItemEnd = (rstStruct.FdWsErreichbarkeitenPersonenStruct).end();
       itItem != itItemEnd; ++itItem)
  {
    if (!((*itItem)).IsNull()) // Nillable
    {
      staff::DataObject tdoParamItem = rdoParam.CreateChild("FdWsErreichbarkeitenPersonenStruct");
      tdoParamItem.SetNamespaceUriGenPrefix("http://fdisk.at/");
      tdoParamItem << *(*itItem);
    }
    else
    {
      rdoParam.CreateChild("FdWsErreichbarkeitenPersonenStruct").SetNil();
    }
  }

  return rdoParam;
}

const DataObject& operator>>(const DataObject& rdoParam, struct ::ArrayOfFdWsErreichbarkeitenPersonenStruct& rstStruct)
{
  for (staff::DataObject tdoItem = rdoParam.FirstChild(); !tdoItem.IsNull(); tdoItem.SetNextSibling())
  {
    if (tdoItem.GetLocalName() == "FdWsErreichbarkeitenPersonenStruct")
    {
      (rstStruct.FdWsErreichbarkeitenPersonenStruct).resize((rstStruct.FdWsErreichbarkeitenPersonenStruct).size() + 1);
      if (!tdoItem.IsNil()) // Nillable
      {
        tdoItem >> *(rstStruct.FdWsErreichbarkeitenPersonenStruct).back();
      }
    }
  }

  return rdoParam;
}

DataObject& operator<<(DataObject& rdoParam, const struct ::FdWsErreichbarkeitenPersonenStruct& rstStruct)
{
  // serialize parent struct
  rdoParam << static_cast< const struct ::Writer& >(rstStruct);

  rdoParam.CreateChild("FdiskIdPersonen", rstStruct.FdiskIdPersonen).SetNamespaceUriGenPrefix("http://fdisk.at/");
  if (!(rstStruct.ErreichbarkeitArt).IsNull()) // Optional
  {
    rdoParam.CreateChild("ErreichbarkeitArt", *rstStruct.ErreichbarkeitArt).SetNamespaceUriGenPrefix("http://fdisk.at/");
  }
  if (!(rstStruct.Erreichbarkeit).IsNull()) // Optional
  {
    rdoParam.CreateChild("Erreichbarkeit", *rstStruct.Erreichbarkeit).SetNamespaceUriGenPrefix("http://fdisk.at/");
  }
  rdoParam.CreateChild("LetzteAenderung", rstStruct.LetzteAenderung).SetNamespaceUriGenPrefix("http://fdisk.at/");
  return rdoParam;
}

const DataObject& operator>>(const DataObject& rdoParam, struct ::FdWsErreichbarkeitenPersonenStruct& rstStruct)
{
  // deserialize parent struct
  rdoParam >> static_cast< struct ::Writer& >(rstStruct);

  rdoParam.GetChildValueByLocalName("FdiskIdPersonen", rstStruct.FdiskIdPersonen);
  const staff::DataObject& rdoParamErreichbarkeitArt = rdoParam.GetChildByLocalNameOpt("ErreichbarkeitArt");
  if (!rdoParamErreichbarkeitArt.IsNull()) // optional
  {
    rdoParamErreichbarkeitArt.GetValue(*rstStruct.ErreichbarkeitArt);
  }
  const staff::DataObject& rdoParamErreichbarkeit = rdoParam.GetChildByLocalNameOpt("Erreichbarkeit");
  if (!rdoParamErreichbarkeit.IsNull()) // optional
  {
    rdoParamErreichbarkeit.GetValue(*rstStruct.Erreichbarkeit);
  }
  rdoParam.GetChildValueByLocalName("LetzteAenderung", rstStruct.LetzteAenderung);
  return rdoParam;
}

DataObject& operator<<(DataObject& rdoParam, const struct ::ArrayOfFdWsFeuerwehrhaeuserStruct& rstStruct)
{
  rdoParam.SetNamespaceUriGenPrefix("http://fdisk.at/");
  for (std::list< staff::Nillable< ::FdWsFeuerwehrhaeuserStruct > >::const_iterator itItem = (rstStruct.FdWsFeuerwehrhaeuserStruct).begin(), itItemEnd = (rstStruct.FdWsFeuerwehrhaeuserStruct).end();
       itItem != itItemEnd; ++itItem)
  {
    if (!((*itItem)).IsNull()) // Nillable
    {
      staff::DataObject tdoParamItem = rdoParam.CreateChild("FdWsFeuerwehrhaeuserStruct");
      tdoParamItem.SetNamespaceUriGenPrefix("http://fdisk.at/");
      tdoParamItem << *(*itItem);
    }
    else
    {
      rdoParam.CreateChild("FdWsFeuerwehrhaeuserStruct").SetNil();
    }
  }

  return rdoParam;
}

const DataObject& operator>>(const DataObject& rdoParam, struct ::ArrayOfFdWsFeuerwehrhaeuserStruct& rstStruct)
{
  for (staff::DataObject tdoItem = rdoParam.FirstChild(); !tdoItem.IsNull(); tdoItem.SetNextSibling())
  {
    if (tdoItem.GetLocalName() == "FdWsFeuerwehrhaeuserStruct")
    {
      (rstStruct.FdWsFeuerwehrhaeuserStruct).resize((rstStruct.FdWsFeuerwehrhaeuserStruct).size() + 1);
      if (!tdoItem.IsNil()) // Nillable
      {
        tdoItem >> *(rstStruct.FdWsFeuerwehrhaeuserStruct).back();
      }
    }
  }

  return rdoParam;
}

DataObject& operator<<(DataObject& rdoParam, const struct ::FdWsFeuerwehrhaeuserStruct& rstStruct)
{
  // serialize parent struct
  rdoParam << static_cast< const struct ::Writer& >(rstStruct);

  rdoParam.CreateChild("FdiskIdFeuerwehrhaeuser", rstStruct.FdiskIdFeuerwehrhaeuser).SetNamespaceUriGenPrefix("http://fdisk.at/");
  rdoParam.CreateChild("FdiskIdFeuerwehren", rstStruct.FdiskIdFeuerwehren).SetNamespaceUriGenPrefix("http://fdisk.at/");
  rdoParam.CreateChild("FdiskIdInstanzen", rstStruct.FdiskIdInstanzen).SetNamespaceUriGenPrefix("http://fdisk.at/");
  if (!(rstStruct.Instanznummer).IsNull()) // Optional
  {
    rdoParam.CreateChild("Instanznummer", *rstStruct.Instanznummer).SetNamespaceUriGenPrefix("http://fdisk.at/");
  }
  if (!(rstStruct.Instanzname).IsNull()) // Optional
  {
    rdoParam.CreateChild("Instanzname", *rstStruct.Instanzname).SetNamespaceUriGenPrefix("http://fdisk.at/");
  }
  rdoParam.CreateChild("Gruendungsdatum", rstStruct.Gruendungsdatum).SetNamespaceUriGenPrefix("http://fdisk.at/");
  if (!(rstStruct.Hausbezeichnung).IsNull()) // Optional
  {
    rdoParam.CreateChild("Hausbezeichnung", *rstStruct.Hausbezeichnung).SetNamespaceUriGenPrefix("http://fdisk.at/");
  }
  if (!(rstStruct.Strasse).IsNull()) // Optional
  {
    rdoParam.CreateChild("Strasse", *rstStruct.Strasse).SetNamespaceUriGenPrefix("http://fdisk.at/");
  }
  if (!(rstStruct.Nummer).IsNull()) // Optional
  {
    rdoParam.CreateChild("Nummer", *rstStruct.Nummer).SetNamespaceUriGenPrefix("http://fdisk.at/");
  }
  if (!(rstStruct.Stiege).IsNull()) // Optional
  {
    rdoParam.CreateChild("Stiege", *rstStruct.Stiege).SetNamespaceUriGenPrefix("http://fdisk.at/");
  }
  if (!(rstStruct.Kathastralgemeinde).IsNull()) // Optional
  {
    rdoParam.CreateChild("Kathastralgemeinde", *rstStruct.Kathastralgemeinde).SetNamespaceUriGenPrefix("http://fdisk.at/");
  }
  if (!(rstStruct.PLZ).IsNull()) // Optional
  {
    rdoParam.CreateChild("PLZ", *rstStruct.PLZ).SetNamespaceUriGenPrefix("http://fdisk.at/");
  }
  if (!(rstStruct.Ort).IsNull()) // Optional
  {
    rdoParam.CreateChild("Ort", *rstStruct.Ort).SetNamespaceUriGenPrefix("http://fdisk.at/");
  }
  if (!(rstStruct.ErreichbarkeitMail).IsNull()) // Optional
  {
    rdoParam.CreateChild("ErreichbarkeitMail", *rstStruct.ErreichbarkeitMail).SetNamespaceUriGenPrefix("http://fdisk.at/");
  }
  if (!(rstStruct.ErreichbarkeitMobil).IsNull()) // Optional
  {
    rdoParam.CreateChild("ErreichbarkeitMobil", *rstStruct.ErreichbarkeitMobil).SetNamespaceUriGenPrefix("http://fdisk.at/");
  }
  if (!(rstStruct.ErreichbarkeitFestnetz).IsNull()) // Optional
  {
    rdoParam.CreateChild("ErreichbarkeitFestnetz", *rstStruct.ErreichbarkeitFestnetz).SetNamespaceUriGenPrefix("http://fdisk.at/");
  }
  if (!(rstStruct.ErreichbarkeitFax).IsNull()) // Optional
  {
    rdoParam.CreateChild("ErreichbarkeitFax", *rstStruct.ErreichbarkeitFax).SetNamespaceUriGenPrefix("http://fdisk.at/");
  }
  if (!(rstStruct.ErreichbarkeitGruppenRic).IsNull()) // Optional
  {
    rdoParam.CreateChild("ErreichbarkeitGruppenRic", *rstStruct.ErreichbarkeitGruppenRic).SetNamespaceUriGenPrefix("http://fdisk.at/");
  }
  if (!(rstStruct.ErreichbarkeitUrl).IsNull()) // Optional
  {
    rdoParam.CreateChild("ErreichbarkeitUrl", *rstStruct.ErreichbarkeitUrl).SetNamespaceUriGenPrefix("http://fdisk.at/");
  }
  if (!(rstStruct.Koordinaten).IsNull()) // Optional
  {
    rdoParam.CreateChild("Koordinaten", *rstStruct.Koordinaten).SetNamespaceUriGenPrefix("http://fdisk.at/");
  }
  rdoParam.CreateChild("LetzteAenderung", rstStruct.LetzteAenderung).SetNamespaceUriGenPrefix("http://fdisk.at/");
  if (!(rstStruct.Feuerwache).IsNull()) // Optional
  {
    rdoParam.CreateChild("Feuerwache", *rstStruct.Feuerwache).SetNamespaceUriGenPrefix("http://fdisk.at/");
  }
  return rdoParam;
}

const DataObject& operator>>(const DataObject& rdoParam, struct ::FdWsFeuerwehrhaeuserStruct& rstStruct)
{
  // deserialize parent struct
  rdoParam >> static_cast< struct ::Writer& >(rstStruct);

  rdoParam.GetChildValueByLocalName("FdiskIdFeuerwehrhaeuser", rstStruct.FdiskIdFeuerwehrhaeuser);
  rdoParam.GetChildValueByLocalName("FdiskIdFeuerwehren", rstStruct.FdiskIdFeuerwehren);
  rdoParam.GetChildValueByLocalName("FdiskIdInstanzen", rstStruct.FdiskIdInstanzen);
  const staff::DataObject& rdoParamInstanznummer = rdoParam.GetChildByLocalNameOpt("Instanznummer");
  if (!rdoParamInstanznummer.IsNull()) // optional
  {
    rdoParamInstanznummer.GetValue(*rstStruct.Instanznummer);
  }
  const staff::DataObject& rdoParamInstanzname = rdoParam.GetChildByLocalNameOpt("Instanzname");
  if (!rdoParamInstanzname.IsNull()) // optional
  {
    rdoParamInstanzname.GetValue(*rstStruct.Instanzname);
  }
  rdoParam.GetChildValueByLocalName("Gruendungsdatum", rstStruct.Gruendungsdatum);
  const staff::DataObject& rdoParamHausbezeichnung = rdoParam.GetChildByLocalNameOpt("Hausbezeichnung");
  if (!rdoParamHausbezeichnung.IsNull()) // optional
  {
    rdoParamHausbezeichnung.GetValue(*rstStruct.Hausbezeichnung);
  }
  const staff::DataObject& rdoParamStrasse = rdoParam.GetChildByLocalNameOpt("Strasse");
  if (!rdoParamStrasse.IsNull()) // optional
  {
    rdoParamStrasse.GetValue(*rstStruct.Strasse);
  }
  const staff::DataObject& rdoParamNummer = rdoParam.GetChildByLocalNameOpt("Nummer");
  if (!rdoParamNummer.IsNull()) // optional
  {
    rdoParamNummer.GetValue(*rstStruct.Nummer);
  }
  const staff::DataObject& rdoParamStiege = rdoParam.GetChildByLocalNameOpt("Stiege");
  if (!rdoParamStiege.IsNull()) // optional
  {
    rdoParamStiege.GetValue(*rstStruct.Stiege);
  }
  const staff::DataObject& rdoParamKathastralgemeinde = rdoParam.GetChildByLocalNameOpt("Kathastralgemeinde");
  if (!rdoParamKathastralgemeinde.IsNull()) // optional
  {
    rdoParamKathastralgemeinde.GetValue(*rstStruct.Kathastralgemeinde);
  }
  const staff::DataObject& rdoParamPLZ = rdoParam.GetChildByLocalNameOpt("PLZ");
  if (!rdoParamPLZ.IsNull()) // optional
  {
    rdoParamPLZ.GetValue(*rstStruct.PLZ);
  }
  const staff::DataObject& rdoParamOrt = rdoParam.GetChildByLocalNameOpt("Ort");
  if (!rdoParamOrt.IsNull()) // optional
  {
    rdoParamOrt.GetValue(*rstStruct.Ort);
  }
  const staff::DataObject& rdoParamErreichbarkeitMail = rdoParam.GetChildByLocalNameOpt("ErreichbarkeitMail");
  if (!rdoParamErreichbarkeitMail.IsNull()) // optional
  {
    rdoParamErreichbarkeitMail.GetValue(*rstStruct.ErreichbarkeitMail);
  }
  const staff::DataObject& rdoParamErreichbarkeitMobil = rdoParam.GetChildByLocalNameOpt("ErreichbarkeitMobil");
  if (!rdoParamErreichbarkeitMobil.IsNull()) // optional
  {
    rdoParamErreichbarkeitMobil.GetValue(*rstStruct.ErreichbarkeitMobil);
  }
  const staff::DataObject& rdoParamErreichbarkeitFestnetz = rdoParam.GetChildByLocalNameOpt("ErreichbarkeitFestnetz");
  if (!rdoParamErreichbarkeitFestnetz.IsNull()) // optional
  {
    rdoParamErreichbarkeitFestnetz.GetValue(*rstStruct.ErreichbarkeitFestnetz);
  }
  const staff::DataObject& rdoParamErreichbarkeitFax = rdoParam.GetChildByLocalNameOpt("ErreichbarkeitFax");
  if (!rdoParamErreichbarkeitFax.IsNull()) // optional
  {
    rdoParamErreichbarkeitFax.GetValue(*rstStruct.ErreichbarkeitFax);
  }
  const staff::DataObject& rdoParamErreichbarkeitGruppenRic = rdoParam.GetChildByLocalNameOpt("ErreichbarkeitGruppenRic");
  if (!rdoParamErreichbarkeitGruppenRic.IsNull()) // optional
  {
    rdoParamErreichbarkeitGruppenRic.GetValue(*rstStruct.ErreichbarkeitGruppenRic);
  }
  const staff::DataObject& rdoParamErreichbarkeitUrl = rdoParam.GetChildByLocalNameOpt("ErreichbarkeitUrl");
  if (!rdoParamErreichbarkeitUrl.IsNull()) // optional
  {
    rdoParamErreichbarkeitUrl.GetValue(*rstStruct.ErreichbarkeitUrl);
  }
  const staff::DataObject& rdoParamKoordinaten = rdoParam.GetChildByLocalNameOpt("Koordinaten");
  if (!rdoParamKoordinaten.IsNull()) // optional
  {
    rdoParamKoordinaten.GetValue(*rstStruct.Koordinaten);
  }
  rdoParam.GetChildValueByLocalName("LetzteAenderung", rstStruct.LetzteAenderung);
  const staff::DataObject& rdoParamFeuerwache = rdoParam.GetChildByLocalNameOpt("Feuerwache");
  if (!rdoParamFeuerwache.IsNull()) // optional
  {
    rdoParamFeuerwache.GetValue(*rstStruct.Feuerwache);
  }
  return rdoParam;
}

DataObject& operator<<(DataObject& rdoParam, const struct ::ArrayOfFdWsFeuerwehrGemeindenStruct& rstStruct)
{
  rdoParam.SetNamespaceUriGenPrefix("http://fdisk.at/");
  for (std::list< staff::Nillable< ::FdWsFeuerwehrGemeindenStruct > >::const_iterator itItem = (rstStruct.FdWsFeuerwehrGemeindenStruct).begin(), itItemEnd = (rstStruct.FdWsFeuerwehrGemeindenStruct).end();
       itItem != itItemEnd; ++itItem)
  {
    if (!((*itItem)).IsNull()) // Nillable
    {
      staff::DataObject tdoParamItem = rdoParam.CreateChild("FdWsFeuerwehrGemeindenStruct");
      tdoParamItem.SetNamespaceUriGenPrefix("http://fdisk.at/");
      tdoParamItem << *(*itItem);
    }
    else
    {
      rdoParam.CreateChild("FdWsFeuerwehrGemeindenStruct").SetNil();
    }
  }

  return rdoParam;
}

const DataObject& operator>>(const DataObject& rdoParam, struct ::ArrayOfFdWsFeuerwehrGemeindenStruct& rstStruct)
{
  for (staff::DataObject tdoItem = rdoParam.FirstChild(); !tdoItem.IsNull(); tdoItem.SetNextSibling())
  {
    if (tdoItem.GetLocalName() == "FdWsFeuerwehrGemeindenStruct")
    {
      (rstStruct.FdWsFeuerwehrGemeindenStruct).resize((rstStruct.FdWsFeuerwehrGemeindenStruct).size() + 1);
      if (!tdoItem.IsNil()) // Nillable
      {
        tdoItem >> *(rstStruct.FdWsFeuerwehrGemeindenStruct).back();
      }
    }
  }

  return rdoParam;
}

DataObject& operator<<(DataObject& rdoParam, const struct ::FdWsFeuerwehrGemeindenStruct& rstStruct)
{
  // serialize parent struct
  rdoParam << static_cast< const struct ::Writer& >(rstStruct);

  rdoParam.CreateChild("FdiskIdFwInstanzen", rstStruct.FdiskIdFwInstanzen).SetNamespaceUriGenPrefix("http://fdisk.at/");
  if (!(rstStruct.FwNummer).IsNull()) // Optional
  {
    rdoParam.CreateChild("FwNummer", *rstStruct.FwNummer).SetNamespaceUriGenPrefix("http://fdisk.at/");
  }
  if (!(rstStruct.FwName).IsNull()) // Optional
  {
    rdoParam.CreateChild("FwName", *rstStruct.FwName).SetNamespaceUriGenPrefix("http://fdisk.at/");
  }
  rdoParam.CreateChild("FdiskIdGemInstanzen", rstStruct.FdiskIdGemInstanzen).SetNamespaceUriGenPrefix("http://fdisk.at/");
  if (!(rstStruct.GemNummer).IsNull()) // Optional
  {
    rdoParam.CreateChild("GemNummer", *rstStruct.GemNummer).SetNamespaceUriGenPrefix("http://fdisk.at/");
  }
  if (!(rstStruct.GemName).IsNull()) // Optional
  {
    rdoParam.CreateChild("GemName", *rstStruct.GemName).SetNamespaceUriGenPrefix("http://fdisk.at/");
  }
  return rdoParam;
}

const DataObject& operator>>(const DataObject& rdoParam, struct ::FdWsFeuerwehrGemeindenStruct& rstStruct)
{
  // deserialize parent struct
  rdoParam >> static_cast< struct ::Writer& >(rstStruct);

  rdoParam.GetChildValueByLocalName("FdiskIdFwInstanzen", rstStruct.FdiskIdFwInstanzen);
  const staff::DataObject& rdoParamFwNummer = rdoParam.GetChildByLocalNameOpt("FwNummer");
  if (!rdoParamFwNummer.IsNull()) // optional
  {
    rdoParamFwNummer.GetValue(*rstStruct.FwNummer);
  }
  const staff::DataObject& rdoParamFwName = rdoParam.GetChildByLocalNameOpt("FwName");
  if (!rdoParamFwName.IsNull()) // optional
  {
    rdoParamFwName.GetValue(*rstStruct.FwName);
  }
  rdoParam.GetChildValueByLocalName("FdiskIdGemInstanzen", rstStruct.FdiskIdGemInstanzen);
  const staff::DataObject& rdoParamGemNummer = rdoParam.GetChildByLocalNameOpt("GemNummer");
  if (!rdoParamGemNummer.IsNull()) // optional
  {
    rdoParamGemNummer.GetValue(*rstStruct.GemNummer);
  }
  const staff::DataObject& rdoParamGemName = rdoParam.GetChildByLocalNameOpt("GemName");
  if (!rdoParamGemName.IsNull()) // optional
  {
    rdoParamGemName.GetValue(*rstStruct.GemName);
  }
  return rdoParam;
}

DataObject& operator<<(DataObject& rdoParam, const struct ::ArrayOfFdWsWasserdienstleistungsbewerbeStruct& rstStruct)
{
  rdoParam.SetNamespaceUriGenPrefix("http://fdisk.at/");
  for (std::list< staff::Nillable< ::FdWsWasserdienstleistungsbewerbeStruct > >::const_iterator itItem = (rstStruct.FdWsWasserdienstleistungsbewerbeStruct).begin(), itItemEnd = (rstStruct.FdWsWasserdienstleistungsbewerbeStruct).end();
       itItem != itItemEnd; ++itItem)
  {
    if (!((*itItem)).IsNull()) // Nillable
    {
      staff::DataObject tdoParamItem = rdoParam.CreateChild("FdWsWasserdienstleistungsbewerbeStruct");
      tdoParamItem.SetNamespaceUriGenPrefix("http://fdisk.at/");
      tdoParamItem << *(*itItem);
    }
    else
    {
      rdoParam.CreateChild("FdWsWasserdienstleistungsbewerbeStruct").SetNil();
    }
  }

  return rdoParam;
}

const DataObject& operator>>(const DataObject& rdoParam, struct ::ArrayOfFdWsWasserdienstleistungsbewerbeStruct& rstStruct)
{
  for (staff::DataObject tdoItem = rdoParam.FirstChild(); !tdoItem.IsNull(); tdoItem.SetNextSibling())
  {
    if (tdoItem.GetLocalName() == "FdWsWasserdienstleistungsbewerbeStruct")
    {
      (rstStruct.FdWsWasserdienstleistungsbewerbeStruct).resize((rstStruct.FdWsWasserdienstleistungsbewerbeStruct).size() + 1);
      if (!tdoItem.IsNil()) // Nillable
      {
        tdoItem >> *(rstStruct.FdWsWasserdienstleistungsbewerbeStruct).back();
      }
    }
  }

  return rdoParam;
}

DataObject& operator<<(DataObject& rdoParam, const struct ::FdWsWasserdienstleistungsbewerbeStruct& rstStruct)
{
  // serialize parent struct
  rdoParam << static_cast< const struct ::Writer& >(rstStruct);

  rdoParam.CreateChild("FdiskIdBewerbsgruppen", rstStruct.FdiskIdBewerbsgruppen).SetNamespaceUriGenPrefix("http://fdisk.at/");
  if (!(rstStruct.Durchgang).IsNull()) // Optional
  {
    rdoParam.CreateChild("Durchgang", *rstStruct.Durchgang).SetNamespaceUriGenPrefix("http://fdisk.at/");
  }
  if (!(rstStruct.Zillennummer).IsNull()) // Optional
  {
    rdoParam.CreateChild("Zillennummer", *rstStruct.Zillennummer).SetNamespaceUriGenPrefix("http://fdisk.at/");
  }
  if (!(rstStruct.Farbe).IsNull()) // Optional
  {
    rdoParam.CreateChild("Farbe", *rstStruct.Farbe).SetNamespaceUriGenPrefix("http://fdisk.at/");
  }
  if (!(rstStruct.Bewerbsbezeichnung).IsNull()) // Optional
  {
    rdoParam.CreateChild("Bewerbsbezeichnung", *rstStruct.Bewerbsbezeichnung).SetNamespaceUriGenPrefix("http://fdisk.at/");
  }
  if (!(rstStruct.Instanzname).IsNull()) // Optional
  {
    rdoParam.CreateChild("Instanzname", *rstStruct.Instanzname).SetNamespaceUriGenPrefix("http://fdisk.at/");
  }
  if (!(rstStruct.Wertungsklasse).IsNull()) // Optional
  {
    rdoParam.CreateChild("Wertungsklasse", *rstStruct.Wertungsklasse).SetNamespaceUriGenPrefix("http://fdisk.at/");
  }
  if (!(rstStruct.Alterspunkte).IsNull()) // Optional
  {
    rdoParam.CreateChild("Alterspunkte", *rstStruct.Alterspunkte).SetNamespaceUriGenPrefix("http://fdisk.at/");
  }
  if (!(rstStruct.AlterspunkteWert).IsNull()) // Optional
  {
    rdoParam.CreateChild("AlterspunkteWert", *rstStruct.AlterspunkteWert).SetNamespaceUriGenPrefix("http://fdisk.at/");
  }
  if (!(rstStruct.Name1).IsNull()) // Optional
  {
    rdoParam.CreateChild("Name1", *rstStruct.Name1).SetNamespaceUriGenPrefix("http://fdisk.at/");
  }
  if (!(rstStruct.Name2).IsNull()) // Optional
  {
    rdoParam.CreateChild("Name2", *rstStruct.Name2).SetNamespaceUriGenPrefix("http://fdisk.at/");
  }
  rdoParam.CreateChild("LetzteAenderung", rstStruct.LetzteAenderung).SetNamespaceUriGenPrefix("http://fdisk.at/");
  return rdoParam;
}

const DataObject& operator>>(const DataObject& rdoParam, struct ::FdWsWasserdienstleistungsbewerbeStruct& rstStruct)
{
  // deserialize parent struct
  rdoParam >> static_cast< struct ::Writer& >(rstStruct);

  rdoParam.GetChildValueByLocalName("FdiskIdBewerbsgruppen", rstStruct.FdiskIdBewerbsgruppen);
  const staff::DataObject& rdoParamDurchgang = rdoParam.GetChildByLocalNameOpt("Durchgang");
  if (!rdoParamDurchgang.IsNull()) // optional
  {
    rdoParamDurchgang.GetValue(*rstStruct.Durchgang);
  }
  const staff::DataObject& rdoParamZillennummer = rdoParam.GetChildByLocalNameOpt("Zillennummer");
  if (!rdoParamZillennummer.IsNull()) // optional
  {
    rdoParamZillennummer.GetValue(*rstStruct.Zillennummer);
  }
  const staff::DataObject& rdoParamFarbe = rdoParam.GetChildByLocalNameOpt("Farbe");
  if (!rdoParamFarbe.IsNull()) // optional
  {
    rdoParamFarbe.GetValue(*rstStruct.Farbe);
  }
  const staff::DataObject& rdoParamBewerbsbezeichnung = rdoParam.GetChildByLocalNameOpt("Bewerbsbezeichnung");
  if (!rdoParamBewerbsbezeichnung.IsNull()) // optional
  {
    rdoParamBewerbsbezeichnung.GetValue(*rstStruct.Bewerbsbezeichnung);
  }
  const staff::DataObject& rdoParamInstanzname = rdoParam.GetChildByLocalNameOpt("Instanzname");
  if (!rdoParamInstanzname.IsNull()) // optional
  {
    rdoParamInstanzname.GetValue(*rstStruct.Instanzname);
  }
  const staff::DataObject& rdoParamWertungsklasse = rdoParam.GetChildByLocalNameOpt("Wertungsklasse");
  if (!rdoParamWertungsklasse.IsNull()) // optional
  {
    rdoParamWertungsklasse.GetValue(*rstStruct.Wertungsklasse);
  }
  const staff::DataObject& rdoParamAlterspunkte = rdoParam.GetChildByLocalNameOpt("Alterspunkte");
  if (!rdoParamAlterspunkte.IsNull()) // optional
  {
    rdoParamAlterspunkte.GetValue(*rstStruct.Alterspunkte);
  }
  const staff::DataObject& rdoParamAlterspunkteWert = rdoParam.GetChildByLocalNameOpt("AlterspunkteWert");
  if (!rdoParamAlterspunkteWert.IsNull()) // optional
  {
    rdoParamAlterspunkteWert.GetValue(*rstStruct.AlterspunkteWert);
  }
  const staff::DataObject& rdoParamName1 = rdoParam.GetChildByLocalNameOpt("Name1");
  if (!rdoParamName1.IsNull()) // optional
  {
    rdoParamName1.GetValue(*rstStruct.Name1);
  }
  const staff::DataObject& rdoParamName2 = rdoParam.GetChildByLocalNameOpt("Name2");
  if (!rdoParamName2.IsNull()) // optional
  {
    rdoParamName2.GetValue(*rstStruct.Name2);
  }
  rdoParam.GetChildValueByLocalName("LetzteAenderung", rstStruct.LetzteAenderung);
  return rdoParam;
}

DataObject& operator<<(DataObject& rdoParam, const struct ::ArrayOfFdWsFeuerwehrleistungsbewerbeStruct& rstStruct)
{
  rdoParam.SetNamespaceUriGenPrefix("http://fdisk.at/");
  for (std::list< staff::Nillable< ::FdWsFeuerwehrleistungsbewerbeStruct > >::const_iterator itItem = (rstStruct.FdWsFeuerwehrleistungsbewerbeStruct).begin(), itItemEnd = (rstStruct.FdWsFeuerwehrleistungsbewerbeStruct).end();
       itItem != itItemEnd; ++itItem)
  {
    if (!((*itItem)).IsNull()) // Nillable
    {
      staff::DataObject tdoParamItem = rdoParam.CreateChild("FdWsFeuerwehrleistungsbewerbeStruct");
      tdoParamItem.SetNamespaceUriGenPrefix("http://fdisk.at/");
      tdoParamItem << *(*itItem);
    }
    else
    {
      rdoParam.CreateChild("FdWsFeuerwehrleistungsbewerbeStruct").SetNil();
    }
  }

  return rdoParam;
}

const DataObject& operator>>(const DataObject& rdoParam, struct ::ArrayOfFdWsFeuerwehrleistungsbewerbeStruct& rstStruct)
{
  for (staff::DataObject tdoItem = rdoParam.FirstChild(); !tdoItem.IsNull(); tdoItem.SetNextSibling())
  {
    if (tdoItem.GetLocalName() == "FdWsFeuerwehrleistungsbewerbeStruct")
    {
      (rstStruct.FdWsFeuerwehrleistungsbewerbeStruct).resize((rstStruct.FdWsFeuerwehrleistungsbewerbeStruct).size() + 1);
      if (!tdoItem.IsNil()) // Nillable
      {
        tdoItem >> *(rstStruct.FdWsFeuerwehrleistungsbewerbeStruct).back();
      }
    }
  }

  return rdoParam;
}

DataObject& operator<<(DataObject& rdoParam, const struct ::FdWsFeuerwehrleistungsbewerbeStruct& rstStruct)
{
  // serialize parent struct
  rdoParam << static_cast< const struct ::Writer& >(rstStruct);

  rdoParam.CreateChild("FdiskIdBewerbe", rstStruct.FdiskIdBewerbe).SetNamespaceUriGenPrefix("http://fdisk.at/");
  rdoParam.CreateChild("FdiskIdPersonen", rstStruct.FdiskIdPersonen).SetNamespaceUriGenPrefix("http://fdisk.at/");
  if (!(rstStruct.DienstgradKurz).IsNull()) // Optional
  {
    rdoParam.CreateChild("DienstgradKurz", *rstStruct.DienstgradKurz).SetNamespaceUriGenPrefix("http://fdisk.at/");
  }
  rdoParam.CreateChild("FdiskIdBewerbsgruppen", rstStruct.FdiskIdBewerbsgruppen).SetNamespaceUriGenPrefix("http://fdisk.at/");
  if (!(rstStruct.Bewerbsgruppe).IsNull()) // Optional
  {
    rdoParam.CreateChild("Bewerbsgruppe", *rstStruct.Bewerbsgruppe).SetNamespaceUriGenPrefix("http://fdisk.at/");
  }
  rdoParam.CreateChild("Bewerbsgruppennummer", rstStruct.Bewerbsgruppennummer).SetNamespaceUriGenPrefix("http://fdisk.at/");
  if (!(rstStruct.Bewerbsbezeichnung).IsNull()) // Optional
  {
    rdoParam.CreateChild("Bewerbsbezeichnung", *rstStruct.Bewerbsbezeichnung).SetNamespaceUriGenPrefix("http://fdisk.at/");
  }
  if (!(rstStruct.Instanzart).IsNull()) // Optional
  {
    rdoParam.CreateChild("Instanzart", *rstStruct.Instanzart).SetNamespaceUriGenPrefix("http://fdisk.at/");
  }
  if (!(rstStruct.Instanzname).IsNull()) // Optional
  {
    rdoParam.CreateChild("Instanzname", *rstStruct.Instanzname).SetNamespaceUriGenPrefix("http://fdisk.at/");
  }
  if (!(rstStruct.Bezirk).IsNull()) // Optional
  {
    rdoParam.CreateChild("Bezirk", *rstStruct.Bezirk).SetNamespaceUriGenPrefix("http://fdisk.at/");
  }
  if (!(rstStruct.Abschnitt).IsNull()) // Optional
  {
    rdoParam.CreateChild("Abschnitt", *rstStruct.Abschnitt).SetNamespaceUriGenPrefix("http://fdisk.at/");
  }
  rdoParam.CreateChild("ErreichtePunkte", rstStruct.ErreichtePunkte).SetNamespaceUriGenPrefix("http://fdisk.at/");
  if (!(rstStruct.BewerbsgruppenStatus).IsNull()) // Optional
  {
    rdoParam.CreateChild("BewerbsgruppenStatus", *rstStruct.BewerbsgruppenStatus).SetNamespaceUriGenPrefix("http://fdisk.at/");
  }
  if (!(rstStruct.WertungsklasseLangBez).IsNull()) // Optional
  {
    rdoParam.CreateChild("WertungsklasseLangBez", *rstStruct.WertungsklasseLangBez).SetNamespaceUriGenPrefix("http://fdisk.at/");
  }
  if (!(rstStruct.Wertungsklasse).IsNull()) // Optional
  {
    rdoParam.CreateChild("Wertungsklasse", *rstStruct.Wertungsklasse).SetNamespaceUriGenPrefix("http://fdisk.at/");
  }
  if (!(rstStruct.Alterspunkte).IsNull()) // Optional
  {
    rdoParam.CreateChild("Alterspunkte", *rstStruct.Alterspunkte).SetNamespaceUriGenPrefix("http://fdisk.at/");
  }
  if (!(rstStruct.Titel).IsNull()) // Optional
  {
    rdoParam.CreateChild("Titel", *rstStruct.Titel).SetNamespaceUriGenPrefix("http://fdisk.at/");
  }
  if (!(rstStruct.Zuname).IsNull()) // Optional
  {
    rdoParam.CreateChild("Zuname", *rstStruct.Zuname).SetNamespaceUriGenPrefix("http://fdisk.at/");
  }
  if (!(rstStruct.Vorname).IsNull()) // Optional
  {
    rdoParam.CreateChild("Vorname", *rstStruct.Vorname).SetNamespaceUriGenPrefix("http://fdisk.at/");
  }
  if (!(rstStruct.Leistungsabzeichen).IsNull()) // Optional
  {
    rdoParam.CreateChild("Leistungsabzeichen", *rstStruct.Leistungsabzeichen).SetNamespaceUriGenPrefix("http://fdisk.at/");
  }
  if (!(rstStruct.Leistungsabzeichenstufe).IsNull()) // Optional
  {
    rdoParam.CreateChild("Leistungsabzeichenstufe", *rstStruct.Leistungsabzeichenstufe).SetNamespaceUriGenPrefix("http://fdisk.at/");
  }
  if (!(rstStruct.Bewerbsort).IsNull()) // Optional
  {
    rdoParam.CreateChild("Bewerbsort", *rstStruct.Bewerbsort).SetNamespaceUriGenPrefix("http://fdisk.at/");
  }
  rdoParam.CreateChild("Bewerbstag", rstStruct.Bewerbstag).SetNamespaceUriGenPrefix("http://fdisk.at/");
  if (!(rstStruct.LFKKommandant).IsNull()) // Optional
  {
    rdoParam.CreateChild("LFKKommandant", *rstStruct.LFKKommandant).SetNamespaceUriGenPrefix("http://fdisk.at/");
  }
  if (!(rstStruct.BewerbsKommandant).IsNull()) // Optional
  {
    rdoParam.CreateChild("BewerbsKommandant", *rstStruct.BewerbsKommandant).SetNamespaceUriGenPrefix("http://fdisk.at/");
  }
  if (!(rstStruct.Bewerbsleiter).IsNull()) // Optional
  {
    rdoParam.CreateChild("Bewerbsleiter", *rstStruct.Bewerbsleiter).SetNamespaceUriGenPrefix("http://fdisk.at/");
  }
  rdoParam.CreateChild("LeistungsabzeichenErhalten", rstStruct.LeistungsabzeichenErhalten).SetNamespaceUriGenPrefix("http://fdisk.at/");
  rdoParam.CreateChild("LetzteAenderung", rstStruct.LetzteAenderung).SetNamespaceUriGenPrefix("http://fdisk.at/");
  if (!(rstStruct.DetailPunkte).IsNull()) // Optional
  {
    staff::DataObject tdoParamDetailPunkte = rdoParam.CreateChild("DetailPunkte");
    tdoParamDetailPunkte.SetNamespaceUriGenPrefix("http://fdisk.at/");
    tdoParamDetailPunkte << *rstStruct.DetailPunkte;
  }
  return rdoParam;
}

const DataObject& operator>>(const DataObject& rdoParam, struct ::FdWsFeuerwehrleistungsbewerbeStruct& rstStruct)
{
  // deserialize parent struct
  rdoParam >> static_cast< struct ::Writer& >(rstStruct);

  rdoParam.GetChildValueByLocalName("FdiskIdBewerbe", rstStruct.FdiskIdBewerbe);
  rdoParam.GetChildValueByLocalName("FdiskIdPersonen", rstStruct.FdiskIdPersonen);
  const staff::DataObject& rdoParamDienstgradKurz = rdoParam.GetChildByLocalNameOpt("DienstgradKurz");
  if (!rdoParamDienstgradKurz.IsNull()) // optional
  {
    rdoParamDienstgradKurz.GetValue(*rstStruct.DienstgradKurz);
  }
  rdoParam.GetChildValueByLocalName("FdiskIdBewerbsgruppen", rstStruct.FdiskIdBewerbsgruppen);
  const staff::DataObject& rdoParamBewerbsgruppe = rdoParam.GetChildByLocalNameOpt("Bewerbsgruppe");
  if (!rdoParamBewerbsgruppe.IsNull()) // optional
  {
    rdoParamBewerbsgruppe.GetValue(*rstStruct.Bewerbsgruppe);
  }
  rdoParam.GetChildValueByLocalName("Bewerbsgruppennummer", rstStruct.Bewerbsgruppennummer);
  const staff::DataObject& rdoParamBewerbsbezeichnung = rdoParam.GetChildByLocalNameOpt("Bewerbsbezeichnung");
  if (!rdoParamBewerbsbezeichnung.IsNull()) // optional
  {
    rdoParamBewerbsbezeichnung.GetValue(*rstStruct.Bewerbsbezeichnung);
  }
  const staff::DataObject& rdoParamInstanzart = rdoParam.GetChildByLocalNameOpt("Instanzart");
  if (!rdoParamInstanzart.IsNull()) // optional
  {
    rdoParamInstanzart.GetValue(*rstStruct.Instanzart);
  }
  const staff::DataObject& rdoParamInstanzname = rdoParam.GetChildByLocalNameOpt("Instanzname");
  if (!rdoParamInstanzname.IsNull()) // optional
  {
    rdoParamInstanzname.GetValue(*rstStruct.Instanzname);
  }
  const staff::DataObject& rdoParamBezirk = rdoParam.GetChildByLocalNameOpt("Bezirk");
  if (!rdoParamBezirk.IsNull()) // optional
  {
    rdoParamBezirk.GetValue(*rstStruct.Bezirk);
  }
  const staff::DataObject& rdoParamAbschnitt = rdoParam.GetChildByLocalNameOpt("Abschnitt");
  if (!rdoParamAbschnitt.IsNull()) // optional
  {
    rdoParamAbschnitt.GetValue(*rstStruct.Abschnitt);
  }
  rdoParam.GetChildValueByLocalName("ErreichtePunkte", rstStruct.ErreichtePunkte);
  const staff::DataObject& rdoParamBewerbsgruppenStatus = rdoParam.GetChildByLocalNameOpt("BewerbsgruppenStatus");
  if (!rdoParamBewerbsgruppenStatus.IsNull()) // optional
  {
    rdoParamBewerbsgruppenStatus.GetValue(*rstStruct.BewerbsgruppenStatus);
  }
  const staff::DataObject& rdoParamWertungsklasseLangBez = rdoParam.GetChildByLocalNameOpt("WertungsklasseLangBez");
  if (!rdoParamWertungsklasseLangBez.IsNull()) // optional
  {
    rdoParamWertungsklasseLangBez.GetValue(*rstStruct.WertungsklasseLangBez);
  }
  const staff::DataObject& rdoParamWertungsklasse = rdoParam.GetChildByLocalNameOpt("Wertungsklasse");
  if (!rdoParamWertungsklasse.IsNull()) // optional
  {
    rdoParamWertungsklasse.GetValue(*rstStruct.Wertungsklasse);
  }
  const staff::DataObject& rdoParamAlterspunkte = rdoParam.GetChildByLocalNameOpt("Alterspunkte");
  if (!rdoParamAlterspunkte.IsNull()) // optional
  {
    rdoParamAlterspunkte.GetValue(*rstStruct.Alterspunkte);
  }
  const staff::DataObject& rdoParamTitel = rdoParam.GetChildByLocalNameOpt("Titel");
  if (!rdoParamTitel.IsNull()) // optional
  {
    rdoParamTitel.GetValue(*rstStruct.Titel);
  }
  const staff::DataObject& rdoParamZuname = rdoParam.GetChildByLocalNameOpt("Zuname");
  if (!rdoParamZuname.IsNull()) // optional
  {
    rdoParamZuname.GetValue(*rstStruct.Zuname);
  }
  const staff::DataObject& rdoParamVorname = rdoParam.GetChildByLocalNameOpt("Vorname");
  if (!rdoParamVorname.IsNull()) // optional
  {
    rdoParamVorname.GetValue(*rstStruct.Vorname);
  }
  const staff::DataObject& rdoParamLeistungsabzeichen = rdoParam.GetChildByLocalNameOpt("Leistungsabzeichen");
  if (!rdoParamLeistungsabzeichen.IsNull()) // optional
  {
    rdoParamLeistungsabzeichen.GetValue(*rstStruct.Leistungsabzeichen);
  }
  const staff::DataObject& rdoParamLeistungsabzeichenstufe = rdoParam.GetChildByLocalNameOpt("Leistungsabzeichenstufe");
  if (!rdoParamLeistungsabzeichenstufe.IsNull()) // optional
  {
    rdoParamLeistungsabzeichenstufe.GetValue(*rstStruct.Leistungsabzeichenstufe);
  }
  const staff::DataObject& rdoParamBewerbsort = rdoParam.GetChildByLocalNameOpt("Bewerbsort");
  if (!rdoParamBewerbsort.IsNull()) // optional
  {
    rdoParamBewerbsort.GetValue(*rstStruct.Bewerbsort);
  }
  rdoParam.GetChildValueByLocalName("Bewerbstag", rstStruct.Bewerbstag);
  const staff::DataObject& rdoParamLFKKommandant = rdoParam.GetChildByLocalNameOpt("LFKKommandant");
  if (!rdoParamLFKKommandant.IsNull()) // optional
  {
    rdoParamLFKKommandant.GetValue(*rstStruct.LFKKommandant);
  }
  const staff::DataObject& rdoParamBewerbsKommandant = rdoParam.GetChildByLocalNameOpt("BewerbsKommandant");
  if (!rdoParamBewerbsKommandant.IsNull()) // optional
  {
    rdoParamBewerbsKommandant.GetValue(*rstStruct.BewerbsKommandant);
  }
  const staff::DataObject& rdoParamBewerbsleiter = rdoParam.GetChildByLocalNameOpt("Bewerbsleiter");
  if (!rdoParamBewerbsleiter.IsNull()) // optional
  {
    rdoParamBewerbsleiter.GetValue(*rstStruct.Bewerbsleiter);
  }
  rdoParam.GetChildValueByLocalName("LeistungsabzeichenErhalten", rstStruct.LeistungsabzeichenErhalten);
  rdoParam.GetChildValueByLocalName("LetzteAenderung", rstStruct.LetzteAenderung);
  const staff::DataObject& rdoParamDetailPunkte = rdoParam.GetChildByLocalNameOpt("DetailPunkte");
  if (!rdoParamDetailPunkte.IsNull()) // optional
  {
    rdoParamDetailPunkte >> *rstStruct.DetailPunkte;
  }
  return rdoParam;
}

DataObject& operator<<(DataObject& rdoParam, const struct ::ArrayOfFdWsFeuerwehrleistungsbewerbePunkte& rstStruct)
{
  rdoParam.SetNamespaceUriGenPrefix("http://fdisk.at/");
  for (std::list< staff::Nillable< ::FdWsFeuerwehrleistungsbewerbePunkte > >::const_iterator itItem = (rstStruct.FdWsFeuerwehrleistungsbewerbePunkte).begin(), itItemEnd = (rstStruct.FdWsFeuerwehrleistungsbewerbePunkte).end();
       itItem != itItemEnd; ++itItem)
  {
    if (!((*itItem)).IsNull()) // Nillable
    {
      staff::DataObject tdoParamItem = rdoParam.CreateChild("FdWsFeuerwehrleistungsbewerbePunkte");
      tdoParamItem.SetNamespaceUriGenPrefix("http://fdisk.at/");
      tdoParamItem << *(*itItem);
    }
    else
    {
      rdoParam.CreateChild("FdWsFeuerwehrleistungsbewerbePunkte").SetNil();
    }
  }

  return rdoParam;
}

const DataObject& operator>>(const DataObject& rdoParam, struct ::ArrayOfFdWsFeuerwehrleistungsbewerbePunkte& rstStruct)
{
  for (staff::DataObject tdoItem = rdoParam.FirstChild(); !tdoItem.IsNull(); tdoItem.SetNextSibling())
  {
    if (tdoItem.GetLocalName() == "FdWsFeuerwehrleistungsbewerbePunkte")
    {
      (rstStruct.FdWsFeuerwehrleistungsbewerbePunkte).resize((rstStruct.FdWsFeuerwehrleistungsbewerbePunkte).size() + 1);
      if (!tdoItem.IsNil()) // Nillable
      {
        tdoItem >> *(rstStruct.FdWsFeuerwehrleistungsbewerbePunkte).back();
      }
    }
  }

  return rdoParam;
}

DataObject& operator<<(DataObject& rdoParam, const struct ::FdWsFeuerwehrleistungsbewerbePunkte& rstStruct)
{
  if (!(rstStruct.Bezeichnung).IsNull()) // Optional
  {
    rdoParam.CreateChild("Bezeichnung", *rstStruct.Bezeichnung).SetNamespaceUriGenPrefix("http://fdisk.at/");
  }
  rdoParam.CreateChild("Punkte", rstStruct.Punkte).SetNamespaceUriGenPrefix("http://fdisk.at/");
  return rdoParam;
}

const DataObject& operator>>(const DataObject& rdoParam, struct ::FdWsFeuerwehrleistungsbewerbePunkte& rstStruct)
{
  const staff::DataObject& rdoParamBezeichnung = rdoParam.GetChildByLocalNameOpt("Bezeichnung");
  if (!rdoParamBezeichnung.IsNull()) // optional
  {
    rdoParamBezeichnung.GetValue(*rstStruct.Bezeichnung);
  }
  rdoParam.GetChildValueByLocalName("Punkte", rstStruct.Punkte);
  return rdoParam;
}

DataObject& operator<<(DataObject& rdoParam, const struct ::FdWsAuthorizeReturn& rstStruct)
{
  if (!(rstStruct.md5session).IsNull()) // Optional
  {
    rdoParam.CreateChild("md5session", *rstStruct.md5session).SetNamespaceUriGenPrefix("http://fdisk.at/");
  }
  if (!(rstStruct.statusMessage).IsNull()) // Optional
  {
    rdoParam.CreateChild("statusMessage", *rstStruct.statusMessage).SetNamespaceUriGenPrefix("http://fdisk.at/");
  }
  staff::DataObject tdoParamstatusCode = rdoParam.CreateChild("statusCode");
  tdoParamstatusCode.SetNamespaceUriGenPrefix("http://fdisk.at/");
  tdoParamstatusCode << rstStruct.statusCode;
  return rdoParam;
}

const DataObject& operator>>(const DataObject& rdoParam, struct ::FdWsAuthorizeReturn& rstStruct)
{
  const staff::DataObject& rdoParammd5session = rdoParam.GetChildByLocalNameOpt("md5session");
  if (!rdoParammd5session.IsNull()) // optional
  {
    rdoParammd5session.GetValue(*rstStruct.md5session);
  }
  const staff::DataObject& rdoParamstatusMessage = rdoParam.GetChildByLocalNameOpt("statusMessage");
  if (!rdoParamstatusMessage.IsNull()) // optional
  {
    rdoParamstatusMessage.GetValue(*rstStruct.statusMessage);
  }
  rdoParam.GetChildByLocalName("statusCode") >> rstStruct.statusCode;
  return rdoParam;
}


///////////////////////////////////////////////////////////////////////////////////////////////////////
// typedef deserializators
}

///////////////////////////////////////////////////////////////////////////////////////////////////////
// classes implementation



// proxy allocator
class FdExportProxyAllocator: public staff::IProxyAllocator
{
public:
  FdExportProxyAllocator()
  {
    try
    {
      staff::ServiceFactory::Inst().RegisterProxyAllocator(typeid(FdExport).name(), *this);
    }
    STAFF_CATCH_ALL_DESCR("Failed to register proxy allocator FdExport");
  }

  virtual staff::IService* AllocateProxy(const std::string& sServiceUri,
                                         const std::string& sSessionId,
                                         const std::string& sInstanceId)
  {
    std::auto_ptr<FdExportProxy> tpProxy(new FdExportProxy);
    tpProxy->Init(sServiceUri, sSessionId, sInstanceId);
    return tpProxy.release();
  }

  virtual staff::IService* AllocateProxy(const std::string& sBaseUri,
                                         const std::string& sServiceName,
                                         const std::string& sSessionId,
                                         const std::string& sInstanceId)
  {
    std::auto_ptr<FdExportProxy> tpProxy(new FdExportProxy);
    tpProxy->Init(sBaseUri + (sServiceName.empty() ? "FdExport" : sServiceName),
                  sSessionId, sInstanceId);
    return tpProxy.release();
  }
};

FdExportProxyAllocator tFdExportProxyAllocatorInitializer;

// asynch proxies


// service proxy
FdExportProxy::FdExportProxy()
{
}

FdExportProxy::~FdExportProxy()
{
  try
  {
    Deinit();
  }
  STAFF_CATCH_ALL;
}

void FdExportProxy::Init(const std::string& sServiceUri, const std::string& sSessionId, const std::string& sInstanceId)
{
  staff::IService::Init("FdExport", sSessionId, sInstanceId);
  m_sServiceUri = !sServiceUri.empty() ? sServiceUri : "https://app.fdisk.at/FDISK/schnittstellen/fdwebservice/export/fdexport.asmx";
  m_tClient.Init(m_sServiceUri);
  staff::Options& rOptions = m_tClient.GetOptions();
  rOptions.SetDefaultNamespace("http://fdisk.at/", "");
  rOptions.SetSoapVersion(staff::Options::Soap11);

  rOptions.SetSessionId(sSessionId);

  if (!sInstanceId.empty())
  {
    staff::Operation tOperation("CreateInstance");
    tOperation.Request().CreateChild("sInstanceId").SetText(sInstanceId);
    tOperation.SetResponse(m_tClient.Invoke(tOperation.Request()));
    if (m_tClient.GetLastResponseHasFault())
    {
      STAFF_ASSERT_SOAPFAULT(!tOperation.IsFault(), tOperation.GetFaultCode(),
                             tOperation.GetFaultString(), tOperation.GetFaultDetail()); // soap fault
      STAFF_THROW(::staff::RemoteException, "Failed to invoke service: " +
                  tOperation.GetResponse().ToString()); // other fault
    }
    rOptions.SetInstanceId(sInstanceId);
  }
}

void FdExportProxy::Deinit()
{
  if (!staff::IService::GetInstanceId().empty())
  {
    staff::Operation tOperation("FreeInstance");
    tOperation.Request().CreateChild("sInstanceId").SetText(staff::IService::GetInstanceId());
    tOperation.SetResponse(m_tClient.Invoke(tOperation.Request()));
    if (m_tClient.GetLastResponseHasFault())
    {
      STAFF_ASSERT_SOAPFAULT(!tOperation.IsFault(), tOperation.GetFaultCode(),
                             tOperation.GetFaultString(), tOperation.GetFaultDetail()); // soap fault
      STAFF_THROW(::staff::RemoteException, "Failed to invoke service: " +
                  tOperation.GetResponse().ToString()); // other fault
    }
  }
}

staff::ServiceClient* FdExportProxy::GetClient()
{
  return &m_tClient;
}


staff::Optional< ::FdWsPrepareDataReturn > FdExportProxy::PrepareData(const staff::Optional<std::string>& md5session, const staff::Optional< ::FdWsPrepareDataRequest >& xmlRequest)
{
  staff::Options& rOptions = m_tClient.GetOptions();
  rOptions.SetSoapAction("http://fdisk.at/PrepareData");
  staff::Operation tOperation("PrepareData", "PrepareDataResponse", "PrepareDataResult");
  staff::DataObject& rdoRequest = tOperation.Request();
  rdoRequest.SetNamespaceUriGenPrefix("http://fdisk.at/");
  if (!(md5session).IsNull()) // Optional
  {
    rdoRequest.CreateChild("md5session", *md5session).SetNamespaceUriGenPrefix("http://fdisk.at/");
  }
  if (!(xmlRequest).IsNull()) // Optional
  {
    staff::DataObject tdoParamxmlRequest = rdoRequest.CreateChild("xmlRequest");
    tdoParamxmlRequest.SetNamespaceUriGenPrefix("http://fdisk.at/");
    tdoParamxmlRequest << *xmlRequest;
  }

  // synchronous call
  tOperation.SetResponse(m_tClient.Invoke(rdoRequest));
  if (m_tClient.GetLastResponseHasFault())
  {
    STAFF_ASSERT_SOAPFAULT(!tOperation.IsFault(), tOperation.GetFaultCode(),
                           tOperation.GetFaultString(), tOperation.GetFaultDetail()); // soap fault
    STAFF_THROW(::staff::RemoteException, "Failed to invoke service: " + tOperation.GetResponse().ToString()); // other fault
  }

  const staff::DataObject& rdoResult = tOperation.ResultOpt();
  staff::Optional< ::FdWsPrepareDataReturn > tReturn;
  if (!rdoResult.IsNull()) // optional
  {
    rdoResult >> *tReturn;
  }
  return tReturn;
}

staff::Optional< ::FdWsGetNextDataBlockReturn > FdExportProxy::getNextDataBlock(const staff::Optional<std::string>& md5session)
{
  staff::Options& rOptions = m_tClient.GetOptions();
  rOptions.SetSoapAction("http://fdisk.at/getNextDataBlock");
  staff::Operation tOperation("getNextDataBlock", "getNextDataBlockResponse", "getNextDataBlockResult");
  staff::DataObject& rdoRequest = tOperation.Request();
  rdoRequest.SetNamespaceUriGenPrefix("http://fdisk.at/");
  if (!(md5session).IsNull()) // Optional
  {
    rdoRequest.CreateChild("md5session", *md5session).SetNamespaceUriGenPrefix("http://fdisk.at/");
  }

  // synchronous call
  tOperation.SetResponse(m_tClient.Invoke(rdoRequest));
  if (m_tClient.GetLastResponseHasFault())
  {
    STAFF_ASSERT_SOAPFAULT(!tOperation.IsFault(), tOperation.GetFaultCode(),
                           tOperation.GetFaultString(), tOperation.GetFaultDetail()); // soap fault
    STAFF_THROW(::staff::RemoteException, "Failed to invoke service: " + tOperation.GetResponse().ToString()); // other fault
  }

  const staff::DataObject& rdoResult = tOperation.ResultOpt();
  staff::Optional< ::FdWsGetNextDataBlockReturn > tReturn;
  if (!rdoResult.IsNull()) // optional
  {
    rdoResult >> *tReturn;
  }
  return tReturn;
}

staff::Optional< ::FdWsAuthorizeReturn > FdExportProxy::Authorize(const staff::Optional<std::string>& user, const staff::Optional<std::string>& password, const staff::Optional<std::string>& instanz)
{
  staff::Options& rOptions = m_tClient.GetOptions();
  rOptions.SetSoapAction("http://fdisk.at/Authorize");
  staff::Operation tOperation("Authorize", "AuthorizeResponse", "AuthorizeResult");
  staff::DataObject& rdoRequest = tOperation.Request();
  rdoRequest.SetNamespaceUriGenPrefix("http://fdisk.at/");
  if (!(user).IsNull()) // Optional
  {
    rdoRequest.CreateChild("user", *user).SetNamespaceUriGenPrefix("http://fdisk.at/");
  }
  if (!(password).IsNull()) // Optional
  {
    rdoRequest.CreateChild("password", *password).SetNamespaceUriGenPrefix("http://fdisk.at/");
  }
  if (!(instanz).IsNull()) // Optional
  {
    rdoRequest.CreateChild("instanz", *instanz).SetNamespaceUriGenPrefix("http://fdisk.at/");
  }

  // synchronous call
  tOperation.SetResponse(m_tClient.Invoke(rdoRequest));
  if (m_tClient.GetLastResponseHasFault())
  {
    STAFF_ASSERT_SOAPFAULT(!tOperation.IsFault(), tOperation.GetFaultCode(),
                           tOperation.GetFaultString(), tOperation.GetFaultDetail()); // soap fault
    STAFF_THROW(::staff::RemoteException, "Failed to invoke service: " + tOperation.GetResponse().ToString()); // other fault
  }

  const staff::DataObject& rdoResult = tOperation.ResultOpt();
  staff::Optional< ::FdWsAuthorizeReturn > tReturn;
  if (!rdoResult.IsNull()) // optional
  {
    rdoResult >> *tReturn;
  }
  return tReturn;
}

void FdExportProxy::closeSession(const staff::Optional<std::string>& md5session)
{
  staff::Options& rOptions = m_tClient.GetOptions();
  rOptions.SetSoapAction("http://fdisk.at/closeSession");
  staff::Operation tOperation("closeSession", "closeSessionResponse");
  staff::DataObject& rdoRequest = tOperation.Request();
  rdoRequest.SetNamespaceUriGenPrefix("http://fdisk.at/");
  if (!(md5session).IsNull()) // Optional
  {
    rdoRequest.CreateChild("md5session", *md5session).SetNamespaceUriGenPrefix("http://fdisk.at/");
  }

  // synchronous call
  tOperation.SetResponse(m_tClient.Invoke(rdoRequest));
  if (m_tClient.GetLastResponseHasFault())
  {
    STAFF_ASSERT_SOAPFAULT(!tOperation.IsFault(), tOperation.GetFaultCode(),
                           tOperation.GetFaultString(), tOperation.GetFaultDetail()); // soap fault
    STAFF_THROW(::staff::RemoteException, "Failed to invoke service: " + tOperation.GetResponse().ToString()); // other fault
  }
}


